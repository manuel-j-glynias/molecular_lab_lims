schema {
    query: QueryType
    mutation: MutationType
}

# This directive allows results to be deferred during execution
directive @defer on FIELD
# Relationship
directive @relation on FIELD
# default value
directive @defaultValue on FIELD
# field is unique in type
directive @isUnique on FIELD
# entity is a model type
directive @model on FIELD
# Cypher query to run
directive @cypher on FIELD
# Enable query profiling
directive @profile on QUERY
# Enable query explanation
directive @explain on QUERY
# Specify Cypher version
directive @version(
    # Cypher Version (3.0, 3.1, 3.2)
    version: String = "3.4"
) on QUERY
# Filter Input Type for AdverseEvent
input _AdverseEventFilter {
    # AND
    AND: [_AdverseEventFilter!]
    # OR
    OR: [_AdverseEventFilter!]
    # grade
    grade: Int
    # grade_gt
    grade_gt: Int
    # grade_gte
    grade_gte: Int
    # grade_in
    grade_in: [Int!]
    # grade_lt
    grade_lt: Int
    # grade_lte
    grade_lte: Int
    # grade_not
    grade_not: Int
    # grade_not_in
    grade_not_in: [Int!]
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: String
    # name_contains
    name_contains: String
    # name_ends_with
    name_ends_with: String
    # name_gt
    name_gt: String
    # name_gte
    name_gte: String
    # name_in
    name_in: [String!]
    # name_lt
    name_lt: String
    # name_lte
    name_lte: String
    # name_not
    name_not: String
    # name_not_contains
    name_not_contains: String
    # name_not_ends_with
    name_not_ends_with: String
    # name_not_in
    name_not_in: [String!]
    # name_not_starts_with
    name_not_starts_with: String
    # name_starts_with
    name_starts_with: String
}

# Ordering Enum for AdverseEvent
enum _AdverseEventOrdering {
    # Ascending sort for grade
    grade_asc
    # Descending sort for grade
    grade_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for name
    name_asc
    # Descending sort for name
    name_desc
}

# Filter Input Type for Author
input _AuthorFilter {
    # AND
    AND: [_AuthorFilter!]
    # OR
    OR: [_AuthorFilter!]
    # firstInitial
    firstInitial: String
    # firstInitial_contains
    firstInitial_contains: String
    # firstInitial_ends_with
    firstInitial_ends_with: String
    # firstInitial_gt
    firstInitial_gt: String
    # firstInitial_gte
    firstInitial_gte: String
    # firstInitial_in
    firstInitial_in: [String!]
    # firstInitial_lt
    firstInitial_lt: String
    # firstInitial_lte
    firstInitial_lte: String
    # firstInitial_not
    firstInitial_not: String
    # firstInitial_not_contains
    firstInitial_not_contains: String
    # firstInitial_not_ends_with
    firstInitial_not_ends_with: String
    # firstInitial_not_in
    firstInitial_not_in: [String!]
    # firstInitial_not_starts_with
    firstInitial_not_starts_with: String
    # firstInitial_starts_with
    firstInitial_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # references
    references: _LiteratureReferenceFilter
    # references_every
    references_every: _LiteratureReferenceFilter
    # references_in
    references_in: _LiteratureReferenceFilter
    # references_none
    references_none: _LiteratureReferenceFilter
    # references_not
    references_not: _LiteratureReferenceFilter
    # references_not_in
    references_not_in: _LiteratureReferenceFilter
    # references_single
    references_single: _LiteratureReferenceFilter
    # references_some
    references_some: _LiteratureReferenceFilter
    # surname
    surname: String
    # surname_contains
    surname_contains: String
    # surname_ends_with
    surname_ends_with: String
    # surname_gt
    surname_gt: String
    # surname_gte
    surname_gte: String
    # surname_in
    surname_in: [String!]
    # surname_lt
    surname_lt: String
    # surname_lte
    surname_lte: String
    # surname_not
    surname_not: String
    # surname_not_contains
    surname_not_contains: String
    # surname_not_ends_with
    surname_not_ends_with: String
    # surname_not_in
    surname_not_in: [String!]
    # surname_not_starts_with
    surname_not_starts_with: String
    # surname_starts_with
    surname_starts_with: String
}

# Ordering Enum for Author
enum _AuthorOrdering {
    # Ascending sort for firstInitial
    firstInitial_asc
    # Descending sort for firstInitial
    firstInitial_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for surname
    surname_asc
    # Descending sort for surname
    surname_desc
}

# Filter Input Type for ClinicalTrial
input _ClinicalTrialFilter {
    # AND
    AND: [_ClinicalTrialFilter!]
    # OR
    OR: [_ClinicalTrialFilter!]
    # acronym
    acronym: String
    # acronym_contains
    acronym_contains: String
    # acronym_ends_with
    acronym_ends_with: String
    # acronym_gt
    acronym_gt: String
    # acronym_gte
    acronym_gte: String
    # acronym_in
    acronym_in: [String!]
    # acronym_lt
    acronym_lt: String
    # acronym_lte
    acronym_lte: String
    # acronym_not
    acronym_not: String
    # acronym_not_contains
    acronym_not_contains: String
    # acronym_not_ends_with
    acronym_not_ends_with: String
    # acronym_not_in
    acronym_not_in: [String!]
    # acronym_not_starts_with
    acronym_not_starts_with: String
    # acronym_starts_with
    acronym_starts_with: String
    # briefTitle
    briefTitle: String
    # briefTitle_contains
    briefTitle_contains: String
    # briefTitle_ends_with
    briefTitle_ends_with: String
    # briefTitle_gt
    briefTitle_gt: String
    # briefTitle_gte
    briefTitle_gte: String
    # briefTitle_in
    briefTitle_in: [String!]
    # briefTitle_lt
    briefTitle_lt: String
    # briefTitle_lte
    briefTitle_lte: String
    # briefTitle_not
    briefTitle_not: String
    # briefTitle_not_contains
    briefTitle_not_contains: String
    # briefTitle_not_ends_with
    briefTitle_not_ends_with: String
    # briefTitle_not_in
    briefTitle_not_in: [String!]
    # briefTitle_not_starts_with
    briefTitle_not_starts_with: String
    # briefTitle_starts_with
    briefTitle_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: String
    # name_contains
    name_contains: String
    # name_ends_with
    name_ends_with: String
    # name_gt
    name_gt: String
    # name_gte
    name_gte: String
    # name_in
    name_in: [String!]
    # name_lt
    name_lt: String
    # name_lte
    name_lte: String
    # name_not
    name_not: String
    # name_not_contains
    name_not_contains: String
    # name_not_ends_with
    name_not_ends_with: String
    # name_not_in
    name_not_in: [String!]
    # name_not_starts_with
    name_not_starts_with: String
    # name_starts_with
    name_starts_with: String
    # officialTitle
    officialTitle: String
    # officialTitle_contains
    officialTitle_contains: String
    # officialTitle_ends_with
    officialTitle_ends_with: String
    # officialTitle_gt
    officialTitle_gt: String
    # officialTitle_gte
    officialTitle_gte: String
    # officialTitle_in
    officialTitle_in: [String!]
    # officialTitle_lt
    officialTitle_lt: String
    # officialTitle_lte
    officialTitle_lte: String
    # officialTitle_not
    officialTitle_not: String
    # officialTitle_not_contains
    officialTitle_not_contains: String
    # officialTitle_not_ends_with
    officialTitle_not_ends_with: String
    # officialTitle_not_in
    officialTitle_not_in: [String!]
    # officialTitle_not_starts_with
    officialTitle_not_starts_with: String
    # officialTitle_starts_with
    officialTitle_starts_with: String
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
    # resource
    resource: String
    # resourceId
    resourceId: String
    # resourceId_contains
    resourceId_contains: String
    # resourceId_ends_with
    resourceId_ends_with: String
    # resourceId_gt
    resourceId_gt: String
    # resourceId_gte
    resourceId_gte: String
    # resourceId_in
    resourceId_in: [String!]
    # resourceId_lt
    resourceId_lt: String
    # resourceId_lte
    resourceId_lte: String
    # resourceId_not
    resourceId_not: String
    # resourceId_not_contains
    resourceId_not_contains: String
    # resourceId_not_ends_with
    resourceId_not_ends_with: String
    # resourceId_not_in
    resourceId_not_in: [String!]
    # resourceId_not_starts_with
    resourceId_not_starts_with: String
    # resourceId_starts_with
    resourceId_starts_with: String
    # resource_contains
    resource_contains: String
    # resource_ends_with
    resource_ends_with: String
    # resource_gt
    resource_gt: String
    # resource_gte
    resource_gte: String
    # resource_in
    resource_in: [String!]
    # resource_lt
    resource_lt: String
    # resource_lte
    resource_lte: String
    # resource_not
    resource_not: String
    # resource_not_contains
    resource_not_contains: String
    # resource_not_ends_with
    resource_not_ends_with: String
    # resource_not_in
    resource_not_in: [String!]
    # resource_not_starts_with
    resource_not_starts_with: String
    # resource_starts_with
    resource_starts_with: String
}

# Ordering Enum for ClinicalTrial
enum _ClinicalTrialOrdering {
    # Ascending sort for acronym
    acronym_asc
    # Descending sort for acronym
    acronym_desc
    # Ascending sort for briefTitle
    briefTitle_asc
    # Descending sort for briefTitle
    briefTitle_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for name
    name_asc
    # Descending sort for name
    name_desc
    # Ascending sort for officialTitle
    officialTitle_asc
    # Descending sort for officialTitle
    officialTitle_desc
    # Ascending sort for resourceId
    resourceId_asc
    # Descending sort for resourceId
    resourceId_desc
    # Ascending sort for resource
    resource_asc
    # Descending sort for resource
    resource_desc
}

# Filter Input Type for ClinVarVariant
input _ClinVarVariantFilter {
    # AND
    AND: [_ClinVarVariantFilter!]
    # OR
    OR: [_ClinVarVariantFilter!]
    # cDot
    cDot: String
    # cDot_contains
    cDot_contains: String
    # cDot_ends_with
    cDot_ends_with: String
    # cDot_gt
    cDot_gt: String
    # cDot_gte
    cDot_gte: String
    # cDot_in
    cDot_in: [String!]
    # cDot_lt
    cDot_lt: String
    # cDot_lte
    cDot_lte: String
    # cDot_not
    cDot_not: String
    # cDot_not_contains
    cDot_not_contains: String
    # cDot_not_ends_with
    cDot_not_ends_with: String
    # cDot_not_in
    cDot_not_in: [String!]
    # cDot_not_starts_with
    cDot_not_starts_with: String
    # cDot_starts_with
    cDot_starts_with: String
    # gene
    gene: String
    # gene_contains
    gene_contains: String
    # gene_ends_with
    gene_ends_with: String
    # gene_gt
    gene_gt: String
    # gene_gte
    gene_gte: String
    # gene_in
    gene_in: [String!]
    # gene_lt
    gene_lt: String
    # gene_lte
    gene_lte: String
    # gene_not
    gene_not: String
    # gene_not_contains
    gene_not_contains: String
    # gene_not_ends_with
    gene_not_ends_with: String
    # gene_not_in
    gene_not_in: [String!]
    # gene_not_starts_with
    gene_not_starts_with: String
    # gene_starts_with
    gene_starts_with: String
    # genomicVariant
    genomicVariant: _GenomicVariantFilter
    # genomicVariant_in
    genomicVariant_in: _GenomicVariantFilter
    # genomicVariant_not
    genomicVariant_not: _GenomicVariantFilter
    # genomicVariant_not_in
    genomicVariant_not_in: _GenomicVariantFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # pDot
    pDot: String
    # pDot_contains
    pDot_contains: String
    # pDot_ends_with
    pDot_ends_with: String
    # pDot_gt
    pDot_gt: String
    # pDot_gte
    pDot_gte: String
    # pDot_in
    pDot_in: [String!]
    # pDot_lt
    pDot_lt: String
    # pDot_lte
    pDot_lte: String
    # pDot_not
    pDot_not: String
    # pDot_not_contains
    pDot_not_contains: String
    # pDot_not_ends_with
    pDot_not_ends_with: String
    # pDot_not_in
    pDot_not_in: [String!]
    # pDot_not_starts_with
    pDot_not_starts_with: String
    # pDot_starts_with
    pDot_starts_with: String
    # signficanceExplanation
    signficanceExplanation: _EditableStatementFilter
    # signficanceExplanation_in
    signficanceExplanation_in: _EditableStatementFilter
    # signficanceExplanation_not
    signficanceExplanation_not: _EditableStatementFilter
    # signficanceExplanation_not_in
    signficanceExplanation_not_in: _EditableStatementFilter
    # significance
    significance: _EditableStatementFilter
    # significance_in
    significance_in: _EditableStatementFilter
    # significance_not
    significance_not: _EditableStatementFilter
    # significance_not_in
    significance_not_in: _EditableStatementFilter
    # variantId
    variantId: String
    # variantId_contains
    variantId_contains: String
    # variantId_ends_with
    variantId_ends_with: String
    # variantId_gt
    variantId_gt: String
    # variantId_gte
    variantId_gte: String
    # variantId_in
    variantId_in: [String!]
    # variantId_lt
    variantId_lt: String
    # variantId_lte
    variantId_lte: String
    # variantId_not
    variantId_not: String
    # variantId_not_contains
    variantId_not_contains: String
    # variantId_not_ends_with
    variantId_not_ends_with: String
    # variantId_not_in
    variantId_not_in: [String!]
    # variantId_not_starts_with
    variantId_not_starts_with: String
    # variantId_starts_with
    variantId_starts_with: String
}

# Ordering Enum for ClinVarVariant
enum _ClinVarVariantOrdering {
    # Ascending sort for cDot
    cDot_asc
    # Descending sort for cDot
    cDot_desc
    # Ascending sort for gene
    gene_asc
    # Descending sort for gene
    gene_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for pDot
    pDot_asc
    # Descending sort for pDot
    pDot_desc
    # Ascending sort for variantId
    variantId_asc
    # Descending sort for variantId
    variantId_desc
}

# Filter Input Type for DNAMarker
input _DNAMarkerFilter {
    # AND
    AND: [_DNAMarkerFilter!]
    # OR
    OR: [_DNAMarkerFilter!]
    # definition
    definition: _EditableStatementFilter
    # definition_in
    definition_in: _EditableStatementFilter
    # definition_not
    definition_not: _EditableStatementFilter
    # definition_not_in
    definition_not_in: _EditableStatementFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # markerType
    markerType: DNAMarkerType
    # markerType_in
    markerType_in: [DNAMarkerType!]
    # markerType_not
    markerType_not: DNAMarkerType
    # markerType_not_in
    markerType_not_in: [DNAMarkerType!]
    # method
    method: _EditableStatementFilter
    # method_in
    method_in: _EditableStatementFilter
    # method_not
    method_not: _EditableStatementFilter
    # method_not_in
    method_not_in: _EditableStatementFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # resultString
    resultString: _EditableStatementFilter
    # resultString_in
    resultString_in: _EditableStatementFilter
    # resultString_not
    resultString_not: _EditableStatementFilter
    # resultString_not_in
    resultString_not_in: _EditableStatementFilter
}

# Ordering Enum for DNAMarker
enum _DNAMarkerOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for markerType
    markerType_asc
    # Descending sort for markerType
    markerType_desc
}

# Filter Input Type for DODisease
input _DODiseaseFilter {
    # AND
    AND: [_DODiseaseFilter!]
    # OR
    OR: [_DODiseaseFilter!]
    # children
    children: _DODiseaseFilter
    # children_every
    children_every: _DODiseaseFilter
    # children_in
    children_in: _DODiseaseFilter
    # children_none
    children_none: _DODiseaseFilter
    # children_not
    children_not: _DODiseaseFilter
    # children_not_in
    children_not_in: _DODiseaseFilter
    # children_single
    children_single: _DODiseaseFilter
    # children_some
    children_some: _DODiseaseFilter
    # definition
    definition: _EditableStatementFilter
    # definition_in
    definition_in: _EditableStatementFilter
    # definition_not
    definition_not: _EditableStatementFilter
    # definition_not_in
    definition_not_in: _EditableStatementFilter
    # doId
    doId: String
    # doId_contains
    doId_contains: String
    # doId_ends_with
    doId_ends_with: String
    # doId_gt
    doId_gt: String
    # doId_gte
    doId_gte: String
    # doId_in
    doId_in: [String!]
    # doId_lt
    doId_lt: String
    # doId_lte
    doId_lte: String
    # doId_not
    doId_not: String
    # doId_not_contains
    doId_not_contains: String
    # doId_not_ends_with
    doId_not_ends_with: String
    # doId_not_in
    doId_not_in: [String!]
    # doId_not_starts_with
    doId_not_starts_with: String
    # doId_starts_with
    doId_starts_with: String
    # exactSynonyms
    exactSynonyms: _EditableStringListFilter
    # exactSynonyms_in
    exactSynonyms_in: _EditableStringListFilter
    # exactSynonyms_not
    exactSynonyms_not: _EditableStringListFilter
    # exactSynonyms_not_in
    exactSynonyms_not_in: _EditableStringListFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # narrowSynonyms
    narrowSynonyms: _EditableStringListFilter
    # narrowSynonyms_in
    narrowSynonyms_in: _EditableStringListFilter
    # narrowSynonyms_not
    narrowSynonyms_not: _EditableStringListFilter
    # narrowSynonyms_not_in
    narrowSynonyms_not_in: _EditableStringListFilter
    # parents
    parents: _DODiseaseFilter
    # parents_every
    parents_every: _DODiseaseFilter
    # parents_in
    parents_in: _DODiseaseFilter
    # parents_none
    parents_none: _DODiseaseFilter
    # parents_not
    parents_not: _DODiseaseFilter
    # parents_not_in
    parents_not_in: _DODiseaseFilter
    # parents_single
    parents_single: _DODiseaseFilter
    # parents_some
    parents_some: _DODiseaseFilter
    # relatedSynonyms
    relatedSynonyms: _EditableStringListFilter
    # relatedSynonyms_in
    relatedSynonyms_in: _EditableStringListFilter
    # relatedSynonyms_not
    relatedSynonyms_not: _EditableStringListFilter
    # relatedSynonyms_not_in
    relatedSynonyms_not_in: _EditableStringListFilter
    # subsets
    subsets: _EditableStringListFilter
    # subsets_in
    subsets_in: _EditableStringListFilter
    # subsets_not
    subsets_not: _EditableStringListFilter
    # subsets_not_in
    subsets_not_in: _EditableStringListFilter
    # xrefs
    xrefs: _EditableXRefListFilter
    # xrefs_in
    xrefs_in: _EditableXRefListFilter
    # xrefs_not
    xrefs_not: _EditableXRefListFilter
    # xrefs_not_in
    xrefs_not_in: _EditableXRefListFilter
}

# Ordering Enum for DODisease
enum _DODiseaseOrdering {
    # Ascending sort for doId
    doId_asc
    # Descending sort for doId
    doId_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for DrugCategory
input _DrugCategoryFilter {
    # AND
    AND: [_DrugCategoryFilter!]
    # OR
    OR: [_DrugCategoryFilter!]
    # definition
    definition: _EditableStatementFilter
    # definition_in
    definition_in: _EditableStatementFilter
    # definition_not
    definition_not: _EditableStatementFilter
    # definition_not_in
    definition_not_in: _EditableStatementFilter
    # drugs
    drugs: _OmniDrugFilter
    # drugs_every
    drugs_every: _OmniDrugFilter
    # drugs_in
    drugs_in: _OmniDrugFilter
    # drugs_none
    drugs_none: _OmniDrugFilter
    # drugs_not
    drugs_not: _OmniDrugFilter
    # drugs_not_in
    drugs_not_in: _OmniDrugFilter
    # drugs_single
    drugs_single: _OmniDrugFilter
    # drugs_some
    drugs_some: _OmniDrugFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # jaxDrugClass
    jaxDrugClass: _JaxDrugClassFilter
    # jaxDrugClass_every
    jaxDrugClass_every: _JaxDrugClassFilter
    # jaxDrugClass_in
    jaxDrugClass_in: _JaxDrugClassFilter
    # jaxDrugClass_none
    jaxDrugClass_none: _JaxDrugClassFilter
    # jaxDrugClass_not
    jaxDrugClass_not: _JaxDrugClassFilter
    # jaxDrugClass_not_in
    jaxDrugClass_not_in: _JaxDrugClassFilter
    # jaxDrugClass_single
    jaxDrugClass_single: _JaxDrugClassFilter
    # jaxDrugClass_some
    jaxDrugClass_some: _JaxDrugClassFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
}

# Ordering Enum for DrugCategory
enum _DrugCategoryOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableAssayComparator
input _EditableAssayComparatorFilter {
    # AND
    AND: [_EditableAssayComparatorFilter!]
    # OR
    OR: [_EditableAssayComparatorFilter!]
    # comparator
    comparator: AssayComparator
    # comparator_in
    comparator_in: [AssayComparator!]
    # comparator_not
    comparator_not: AssayComparator
    # comparator_not_in
    comparator_not_in: [AssayComparator!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableAssayComparator
enum _EditableAssayComparatorOrdering {
    # Ascending sort for comparator
    comparator_asc
    # Descending sort for comparator
    comparator_desc
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableBoolean
input _EditableBooleanFilter {
    # AND
    AND: [_EditableBooleanFilter!]
    # OR
    OR: [_EditableBooleanFilter!]
    # booleanValue
    booleanValue: ExtendedBoolean
    # booleanValue_in
    booleanValue_in: [ExtendedBoolean!]
    # booleanValue_not
    booleanValue_not: ExtendedBoolean
    # booleanValue_not_in
    booleanValue_not_in: [ExtendedBoolean!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableBoolean
enum _EditableBooleanOrdering {
    # Ascending sort for booleanValue
    booleanValue_asc
    # Descending sort for booleanValue
    booleanValue_desc
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableCopyChange
input _EditableCopyChangeFilter {
    # AND
    AND: [_EditableCopyChangeFilter!]
    # OR
    OR: [_EditableCopyChangeFilter!]
    # cnvType
    cnvType: CNVType
    # cnvType_in
    cnvType_in: [CNVType!]
    # cnvType_not
    cnvType_not: CNVType
    # cnvType_not_in
    cnvType_not_in: [CNVType!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableCopyChange
enum _EditableCopyChangeOrdering {
    # Ascending sort for cnvType
    cnvType_asc
    # Descending sort for cnvType
    cnvType_desc
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableDODiseaseList
input _EditableDODiseaseListFilter {
    # AND
    AND: [_EditableDODiseaseListFilter!]
    # OR
    OR: [_EditableDODiseaseListFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # list
    list: _DODiseaseFilter
    # list_every
    list_every: _DODiseaseFilter
    # list_in
    list_in: _DODiseaseFilter
    # list_none
    list_none: _DODiseaseFilter
    # list_not
    list_not: _DODiseaseFilter
    # list_not_in
    list_not_in: _DODiseaseFilter
    # list_single
    list_single: _DODiseaseFilter
    # list_some
    list_some: _DODiseaseFilter
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableDODiseaseList
enum _EditableDODiseaseListOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableFloat
input _EditableFloatFilter {
    # AND
    AND: [_EditableFloatFilter!]
    # OR
    OR: [_EditableFloatFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # floatValue
    floatValue: Float
    # floatValue_gt
    floatValue_gt: Float
    # floatValue_gte
    floatValue_gte: Float
    # floatValue_in
    floatValue_in: [Float!]
    # floatValue_lt
    floatValue_lt: Float
    # floatValue_lte
    floatValue_lte: Float
    # floatValue_not
    floatValue_not: Float
    # floatValue_not_in
    floatValue_not_in: [Float!]
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableFloat
enum _EditableFloatOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for floatValue
    floatValue_asc
    # Descending sort for floatValue
    floatValue_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableGODiseaseList
input _EditableGODiseaseListFilter {
    # AND
    AND: [_EditableGODiseaseListFilter!]
    # OR
    OR: [_EditableGODiseaseListFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # list
    list: _GODiseaseFilter
    # list_every
    list_every: _GODiseaseFilter
    # list_in
    list_in: _GODiseaseFilter
    # list_none
    list_none: _GODiseaseFilter
    # list_not
    list_not: _GODiseaseFilter
    # list_not_in
    list_not_in: _GODiseaseFilter
    # list_single
    list_single: _GODiseaseFilter
    # list_some
    list_some: _GODiseaseFilter
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableGODiseaseList
enum _EditableGODiseaseListOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableImmuneCycleRole
input _EditableImmuneCycleRoleFilter {
    # AND
    AND: [_EditableImmuneCycleRoleFilter!]
    # OR
    OR: [_EditableImmuneCycleRoleFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # immuneCycleRole
    immuneCycleRole: ImmuneCycleRole
    # immuneCycleRole_in
    immuneCycleRole_in: [ImmuneCycleRole!]
    # immuneCycleRole_not
    immuneCycleRole_not: ImmuneCycleRole
    # immuneCycleRole_not_in
    immuneCycleRole_not_in: [ImmuneCycleRole!]
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableImmuneCycleRole
enum _EditableImmuneCycleRoleOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for immuneCycleRole
    immuneCycleRole_asc
    # Descending sort for immuneCycleRole
    immuneCycleRole_desc
}

# Filter Input Type for EditableImmuneFunction
input _EditableImmuneFunctionFilter {
    # AND
    AND: [_EditableImmuneFunctionFilter!]
    # OR
    OR: [_EditableImmuneFunctionFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # immuneFunction
    immuneFunction: ImmuneFunction
    # immuneFunction_in
    immuneFunction_in: [ImmuneFunction!]
    # immuneFunction_not
    immuneFunction_not: ImmuneFunction
    # immuneFunction_not_in
    immuneFunction_not_in: [ImmuneFunction!]
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableImmuneFunction
enum _EditableImmuneFunctionOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for immuneFunction
    immuneFunction_asc
    # Descending sort for immuneFunction
    immuneFunction_desc
}

# Filter Input Type for EditableImmunePhenotype
input _EditableImmunePhenotypeFilter {
    # AND
    AND: [_EditableImmunePhenotypeFilter!]
    # OR
    OR: [_EditableImmunePhenotypeFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # immunePhenotype
    immunePhenotype: ImmunePhenotype
    # immunePhenotype_in
    immunePhenotype_in: [ImmunePhenotype!]
    # immunePhenotype_not
    immunePhenotype_not: ImmunePhenotype
    # immunePhenotype_not_in
    immunePhenotype_not_in: [ImmunePhenotype!]
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableImmunePhenotype
enum _EditableImmunePhenotypeOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for immunePhenotype
    immunePhenotype_asc
    # Descending sort for immunePhenotype
    immunePhenotype_desc
}

# Filter Input Type for EditableInt
input _EditableIntFilter {
    # AND
    AND: [_EditableIntFilter!]
    # OR
    OR: [_EditableIntFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # intValue
    intValue: Int
    # intValue_gt
    intValue_gt: Int
    # intValue_gte
    intValue_gte: Int
    # intValue_in
    intValue_in: [Int!]
    # intValue_lt
    intValue_lt: Int
    # intValue_lte
    intValue_lte: Int
    # intValue_not
    intValue_not: Int
    # intValue_not_in
    intValue_not_in: [Int!]
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableInt
enum _EditableIntOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for intValue
    intValue_asc
    # Descending sort for intValue
    intValue_desc
}

# Filter Input Type for EditableJAXDiseaseList
input _EditableJAXDiseaseListFilter {
    # AND
    AND: [_EditableJAXDiseaseListFilter!]
    # OR
    OR: [_EditableJAXDiseaseListFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # list
    list: _JaxDiseaseFilter
    # list_every
    list_every: _JaxDiseaseFilter
    # list_in
    list_in: _JaxDiseaseFilter
    # list_none
    list_none: _JaxDiseaseFilter
    # list_not
    list_not: _JaxDiseaseFilter
    # list_not_in
    list_not_in: _JaxDiseaseFilter
    # list_single
    list_single: _JaxDiseaseFilter
    # list_some
    list_some: _JaxDiseaseFilter
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableJAXDiseaseList
enum _EditableJAXDiseaseListOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableMarkerComponentList
input _EditableMarkerComponentListFilter {
    # AND
    AND: [_EditableMarkerComponentListFilter!]
    # OR
    OR: [_EditableMarkerComponentListFilter!]
    # components
    components: _MarkerComponentFilter
    # components_every
    components_every: _MarkerComponentFilter
    # components_in
    components_in: _MarkerComponentFilter
    # components_none
    components_none: _MarkerComponentFilter
    # components_not
    components_not: _MarkerComponentFilter
    # components_not_in
    components_not_in: _MarkerComponentFilter
    # components_single
    components_single: _MarkerComponentFilter
    # components_some
    components_some: _MarkerComponentFilter
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableMarkerComponentList
enum _EditableMarkerComponentListOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableObject
input _EditableObjectFilter {
    # AND
    AND: [_EditableObjectFilter!]
    # OR
    OR: [_EditableObjectFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableObject
enum _EditableObjectOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableOmniConjunction
input _EditableOmniConjunctionFilter {
    # AND
    AND: [_EditableOmniConjunctionFilter!]
    # OR
    OR: [_EditableOmniConjunctionFilter!]
    # conjunction
    conjunction: OmniConjunction
    # conjunction_in
    conjunction_in: [OmniConjunction!]
    # conjunction_not
    conjunction_not: OmniConjunction
    # conjunction_not_in
    conjunction_not_in: [OmniConjunction!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableOmniConjunction
enum _EditableOmniConjunctionOrdering {
    # Ascending sort for conjunction
    conjunction_asc
    # Descending sort for conjunction
    conjunction_desc
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableOmniGeneList
input _EditableOmniGeneListFilter {
    # AND
    AND: [_EditableOmniGeneListFilter!]
    # OR
    OR: [_EditableOmniGeneListFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # genes
    genes: _OmniGeneFilter
    # genes_every
    genes_every: _OmniGeneFilter
    # genes_in
    genes_in: _OmniGeneFilter
    # genes_none
    genes_none: _OmniGeneFilter
    # genes_not
    genes_not: _OmniGeneFilter
    # genes_not_in
    genes_not_in: _OmniGeneFilter
    # genes_single
    genes_single: _OmniGeneFilter
    # genes_some
    genes_some: _OmniGeneFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableOmniGeneList
enum _EditableOmniGeneListOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableOmniGeneReference
input _EditableOmniGeneReferenceFilter {
    # AND
    AND: [_EditableOmniGeneReferenceFilter!]
    # OR
    OR: [_EditableOmniGeneReferenceFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # gene
    gene: _OmniGeneFilter
    # gene_in
    gene_in: _OmniGeneFilter
    # gene_not
    gene_not: _OmniGeneFilter
    # gene_not_in
    gene_not_in: _OmniGeneFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableOmniGeneReference
enum _EditableOmniGeneReferenceOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableOmniMapList
input _EditableOmniMapListFilter {
    # AND
    AND: [_EditableOmniMapListFilter!]
    # OR
    OR: [_EditableOmniMapListFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # list
    list: _OmniMapFilter
    # list_every
    list_every: _OmniMapFilter
    # list_in
    list_in: _OmniMapFilter
    # list_none
    list_none: _OmniMapFilter
    # list_not
    list_not: _OmniMapFilter
    # list_not_in
    list_not_in: _OmniMapFilter
    # list_single
    list_single: _OmniMapFilter
    # list_some
    list_some: _OmniMapFilter
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableOmniMapList
enum _EditableOmniMapListOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableOncoTreeDiseaseList
input _EditableOncoTreeDiseaseListFilter {
    # AND
    AND: [_EditableOncoTreeDiseaseListFilter!]
    # OR
    OR: [_EditableOncoTreeDiseaseListFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # list
    list: _OncoTreeDiseaseFilter
    # list_every
    list_every: _OncoTreeDiseaseFilter
    # list_in
    list_in: _OncoTreeDiseaseFilter
    # list_none
    list_none: _OncoTreeDiseaseFilter
    # list_not
    list_not: _OncoTreeDiseaseFilter
    # list_not_in
    list_not_in: _OncoTreeDiseaseFilter
    # list_single
    list_single: _OncoTreeDiseaseFilter
    # list_some
    list_some: _OncoTreeDiseaseFilter
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableOncoTreeDiseaseList
enum _EditableOncoTreeDiseaseListOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EditableProteinEffect
input _EditableProteinEffectFilter {
    # AND
    AND: [_EditableProteinEffectFilter!]
    # OR
    OR: [_EditableProteinEffectFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # proteinEffect
    proteinEffect: VariantProteinEffect
    # proteinEffect_in
    proteinEffect_in: [VariantProteinEffect!]
    # proteinEffect_not
    proteinEffect_not: VariantProteinEffect
    # proteinEffect_not_in
    proteinEffect_not_in: [VariantProteinEffect!]
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableProteinEffect
enum _EditableProteinEffectOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for proteinEffect
    proteinEffect_asc
    # Descending sort for proteinEffect
    proteinEffect_desc
}

# Filter Input Type for EditableRNASeqResultType
input _EditableRNASeqResultTypeFilter {
    # AND
    AND: [_EditableRNASeqResultTypeFilter!]
    # OR
    OR: [_EditableRNASeqResultTypeFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
    # resultType
    resultType: RNASeqResultType
    # resultType_in
    resultType_in: [RNASeqResultType!]
    # resultType_not
    resultType_not: RNASeqResultType
    # resultType_not_in
    resultType_not_in: [RNASeqResultType!]
}

# Ordering Enum for EditableRNASeqResultType
enum _EditableRNASeqResultTypeOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for resultType
    resultType_asc
    # Descending sort for resultType
    resultType_desc
}

# Filter Input Type for EditableStatement
input _EditableStatementFilter {
    # AND
    AND: [_EditableStatementFilter!]
    # OR
    OR: [_EditableStatementFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
    # statement
    statement: String
    # statement_contains
    statement_contains: String
    # statement_ends_with
    statement_ends_with: String
    # statement_gt
    statement_gt: String
    # statement_gte
    statement_gte: String
    # statement_in
    statement_in: [String!]
    # statement_lt
    statement_lt: String
    # statement_lte
    statement_lte: String
    # statement_not
    statement_not: String
    # statement_not_contains
    statement_not_contains: String
    # statement_not_ends_with
    statement_not_ends_with: String
    # statement_not_in
    statement_not_in: [String!]
    # statement_not_starts_with
    statement_not_starts_with: String
    # statement_starts_with
    statement_starts_with: String
}

# Ordering Enum for EditableStatement
enum _EditableStatementOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for statement
    statement_asc
    # Descending sort for statement
    statement_desc
}

# Filter Input Type for EditableStringList
input _EditableStringListFilter {
    # AND
    AND: [_EditableStringListFilter!]
    # OR
    OR: [_EditableStringListFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
    # stringList
    stringList: String
    # stringList_contains
    stringList_contains: String
    # stringList_ends_with
    stringList_ends_with: String
    # stringList_gt
    stringList_gt: String
    # stringList_gte
    stringList_gte: String
    # stringList_in
    stringList_in: [String!]
    # stringList_lt
    stringList_lt: String
    # stringList_lte
    stringList_lte: String
    # stringList_not
    stringList_not: String
    # stringList_not_contains
    stringList_not_contains: String
    # stringList_not_ends_with
    stringList_not_ends_with: String
    # stringList_not_in
    stringList_not_in: [String!]
    # stringList_not_starts_with
    stringList_not_starts_with: String
    # stringList_starts_with
    stringList_starts_with: String
}

# Ordering Enum for EditableStringList
enum _EditableStringListOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for stringList
    stringList_asc
    # Descending sort for stringList
    stringList_desc
}

# Filter Input Type for EditableTMBInterpretation
input _EditableTMBInterpretationFilter {
    # AND
    AND: [_EditableTMBInterpretationFilter!]
    # OR
    OR: [_EditableTMBInterpretationFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
    # tmbInterpretation
    tmbInterpretation: TMBInterpretationType
    # tmbInterpretation_in
    tmbInterpretation_in: [TMBInterpretationType!]
    # tmbInterpretation_not
    tmbInterpretation_not: TMBInterpretationType
    # tmbInterpretation_not_in
    tmbInterpretation_not_in: [TMBInterpretationType!]
}

# Ordering Enum for EditableTMBInterpretation
enum _EditableTMBInterpretationOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for tmbInterpretation
    tmbInterpretation_asc
    # Descending sort for tmbInterpretation
    tmbInterpretation_desc
}

# Filter Input Type for EditableXRefList
input _EditableXRefListFilter {
    # AND
    AND: [_EditableXRefListFilter!]
    # OR
    OR: [_EditableXRefListFilter!]
    # editDate
    editDate: String
    # editDate_contains
    editDate_contains: String
    # editDate_ends_with
    editDate_ends_with: String
    # editDate_gt
    editDate_gt: String
    # editDate_gte
    editDate_gte: String
    # editDate_in
    editDate_in: [String!]
    # editDate_lt
    editDate_lt: String
    # editDate_lte
    editDate_lte: String
    # editDate_not
    editDate_not: String
    # editDate_not_contains
    editDate_not_contains: String
    # editDate_not_ends_with
    editDate_not_ends_with: String
    # editDate_not_in
    editDate_not_in: [String!]
    # editDate_not_starts_with
    editDate_not_starts_with: String
    # editDate_starts_with
    editDate_starts_with: String
    # editor
    editor: _UserFilter
    # editor_in
    editor_in: _UserFilter
    # editor_not
    editor_not: _UserFilter
    # editor_not_in
    editor_not_in: _UserFilter
    # field
    field: String
    # field_contains
    field_contains: String
    # field_ends_with
    field_ends_with: String
    # field_gt
    field_gt: String
    # field_gte
    field_gte: String
    # field_in
    field_in: [String!]
    # field_lt
    field_lt: String
    # field_lte
    field_lte: String
    # field_not
    field_not: String
    # field_not_contains
    field_not_contains: String
    # field_not_ends_with
    field_not_ends_with: String
    # field_not_in
    field_not_in: [String!]
    # field_not_starts_with
    field_not_starts_with: String
    # field_starts_with
    field_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # list
    list: _XRefFilter
    # list_every
    list_every: _XRefFilter
    # list_in
    list_in: _XRefFilter
    # list_none
    list_none: _XRefFilter
    # list_not
    list_not: _XRefFilter
    # list_not_in
    list_not_in: _XRefFilter
    # list_single
    list_single: _XRefFilter
    # list_some
    list_some: _XRefFilter
    # references
    references: _ReferenceFilter
    # references_every
    references_every: _ReferenceFilter
    # references_in
    references_in: _ReferenceFilter
    # references_none
    references_none: _ReferenceFilter
    # references_not
    references_not: _ReferenceFilter
    # references_not_in
    references_not_in: _ReferenceFilter
    # references_single
    references_single: _ReferenceFilter
    # references_some
    references_some: _ReferenceFilter
}

# Ordering Enum for EditableXRefList
enum _EditableXRefListOrdering {
    # Ascending sort for editDate
    editDate_asc
    # Descending sort for editDate
    editDate_desc
    # Ascending sort for field
    field_asc
    # Descending sort for field
    field_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for EvidenceAssociation
input _EvidenceAssociationFilter {
    # AND
    AND: [_EvidenceAssociationFilter!]
    # OR
    OR: [_EvidenceAssociationFilter!]
    # disease
    disease: _OntologicalDiseaseFilter
    # disease_in
    disease_in: _OntologicalDiseaseFilter
    # disease_not
    disease_not: _OntologicalDiseaseFilter
    # disease_not_in
    disease_not_in: _OntologicalDiseaseFilter
    # evidences
    evidences: _EvidenceFilter
    # evidences_every
    evidences_every: _EvidenceFilter
    # evidences_in
    evidences_in: _EvidenceFilter
    # evidences_none
    evidences_none: _EvidenceFilter
    # evidences_not
    evidences_not: _EvidenceFilter
    # evidences_not_in
    evidences_not_in: _EvidenceFilter
    # evidences_single
    evidences_single: _EvidenceFilter
    # evidences_some
    evidences_some: _EvidenceFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # marker
    marker: _MarkerProfileFilter
    # marker_in
    marker_in: _MarkerProfileFilter
    # marker_not
    marker_not: _MarkerProfileFilter
    # marker_not_in
    marker_not_in: _MarkerProfileFilter
    # name
    name: String
    # name_contains
    name_contains: String
    # name_ends_with
    name_ends_with: String
    # name_gt
    name_gt: String
    # name_gte
    name_gte: String
    # name_in
    name_in: [String!]
    # name_lt
    name_lt: String
    # name_lte
    name_lte: String
    # name_not
    name_not: String
    # name_not_contains
    name_not_contains: String
    # name_not_ends_with
    name_not_ends_with: String
    # name_not_in
    name_not_in: [String!]
    # name_not_starts_with
    name_not_starts_with: String
    # name_starts_with
    name_starts_with: String
    # therapy
    therapy: _TherapeuticInterventionFilter
    # therapy_in
    therapy_in: _TherapeuticInterventionFilter
    # therapy_not
    therapy_not: _TherapeuticInterventionFilter
    # therapy_not_in
    therapy_not_in: _TherapeuticInterventionFilter
}

# Ordering Enum for EvidenceAssociation
enum _EvidenceAssociationOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for name
    name_asc
    # Descending sort for name
    name_desc
}

# Filter Input Type for Evidence
input _EvidenceFilter {
    # AND
    AND: [_EvidenceFilter!]
    # OR
    OR: [_EvidenceFilter!]
    # adverseEvents
    adverseEvents: _AdverseEventFilter
    # adverseEvents_every
    adverseEvents_every: _AdverseEventFilter
    # adverseEvents_in
    adverseEvents_in: _AdverseEventFilter
    # adverseEvents_none
    adverseEvents_none: _AdverseEventFilter
    # adverseEvents_not
    adverseEvents_not: _AdverseEventFilter
    # adverseEvents_not_in
    adverseEvents_not_in: _AdverseEventFilter
    # adverseEvents_single
    adverseEvents_single: _AdverseEventFilter
    # adverseEvents_some
    adverseEvents_some: _AdverseEventFilter
    # ampCapAscoTier
    ampCapAscoTier: String
    # ampCapAscoTier_contains
    ampCapAscoTier_contains: String
    # ampCapAscoTier_ends_with
    ampCapAscoTier_ends_with: String
    # ampCapAscoTier_gt
    ampCapAscoTier_gt: String
    # ampCapAscoTier_gte
    ampCapAscoTier_gte: String
    # ampCapAscoTier_in
    ampCapAscoTier_in: [String!]
    # ampCapAscoTier_lt
    ampCapAscoTier_lt: String
    # ampCapAscoTier_lte
    ampCapAscoTier_lte: String
    # ampCapAscoTier_not
    ampCapAscoTier_not: String
    # ampCapAscoTier_not_contains
    ampCapAscoTier_not_contains: String
    # ampCapAscoTier_not_ends_with
    ampCapAscoTier_not_ends_with: String
    # ampCapAscoTier_not_in
    ampCapAscoTier_not_in: [String!]
    # ampCapAscoTier_not_starts_with
    ampCapAscoTier_not_starts_with: String
    # ampCapAscoTier_starts_with
    ampCapAscoTier_starts_with: String
    # approvalStatus
    approvalStatus: String
    # approvalStatus_contains
    approvalStatus_contains: String
    # approvalStatus_ends_with
    approvalStatus_ends_with: String
    # approvalStatus_gt
    approvalStatus_gt: String
    # approvalStatus_gte
    approvalStatus_gte: String
    # approvalStatus_in
    approvalStatus_in: [String!]
    # approvalStatus_lt
    approvalStatus_lt: String
    # approvalStatus_lte
    approvalStatus_lte: String
    # approvalStatus_not
    approvalStatus_not: String
    # approvalStatus_not_contains
    approvalStatus_not_contains: String
    # approvalStatus_not_ends_with
    approvalStatus_not_ends_with: String
    # approvalStatus_not_in
    approvalStatus_not_in: [String!]
    # approvalStatus_not_starts_with
    approvalStatus_not_starts_with: String
    # approvalStatus_starts_with
    approvalStatus_starts_with: String
    # evidenceAssociation
    evidenceAssociation: _EvidenceAssociationFilter
    # evidenceAssociation_every
    evidenceAssociation_every: _EvidenceAssociationFilter
    # evidenceAssociation_in
    evidenceAssociation_in: _EvidenceAssociationFilter
    # evidenceAssociation_none
    evidenceAssociation_none: _EvidenceAssociationFilter
    # evidenceAssociation_not
    evidenceAssociation_not: _EvidenceAssociationFilter
    # evidenceAssociation_not_in
    evidenceAssociation_not_in: _EvidenceAssociationFilter
    # evidenceAssociation_single
    evidenceAssociation_single: _EvidenceAssociationFilter
    # evidenceAssociation_some
    evidenceAssociation_some: _EvidenceAssociationFilter
    # evidenceType
    evidenceType: EvidenceType
    # evidenceType_in
    evidenceType_in: [EvidenceType!]
    # evidenceType_not
    evidenceType_not: EvidenceType
    # evidenceType_not_in
    evidenceType_not_in: [EvidenceType!]
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # notes
    notes: String
    # notes_contains
    notes_contains: String
    # notes_ends_with
    notes_ends_with: String
    # notes_gt
    notes_gt: String
    # notes_gte
    notes_gte: String
    # notes_in
    notes_in: [String!]
    # notes_lt
    notes_lt: String
    # notes_lte
    notes_lte: String
    # notes_not
    notes_not: String
    # notes_not_contains
    notes_not_contains: String
    # notes_not_ends_with
    notes_not_ends_with: String
    # notes_not_in
    notes_not_in: [String!]
    # notes_not_starts_with
    notes_not_starts_with: String
    # notes_starts_with
    notes_starts_with: String
    # outcomes
    outcomes: _OutcomeFilter
    # outcomes_every
    outcomes_every: _OutcomeFilter
    # outcomes_in
    outcomes_in: _OutcomeFilter
    # outcomes_none
    outcomes_none: _OutcomeFilter
    # outcomes_not
    outcomes_not: _OutcomeFilter
    # outcomes_not_in
    outcomes_not_in: _OutcomeFilter
    # outcomes_single
    outcomes_single: _OutcomeFilter
    # outcomes_some
    outcomes_some: _OutcomeFilter
    # reference
    reference: _LiteratureReferenceFilter
    # reference_in
    reference_in: _LiteratureReferenceFilter
    # reference_not
    reference_not: _LiteratureReferenceFilter
    # reference_not_in
    reference_not_in: _LiteratureReferenceFilter
    # responseType
    responseType: ResponseType
    # responseType_in
    responseType_in: [ResponseType!]
    # responseType_not
    responseType_not: ResponseType
    # responseType_not_in
    responseType_not_in: [ResponseType!]
}

# Ordering Enum for Evidence
enum _EvidenceOrdering {
    # Ascending sort for ampCapAscoTier
    ampCapAscoTier_asc
    # Descending sort for ampCapAscoTier
    ampCapAscoTier_desc
    # Ascending sort for approvalStatus
    approvalStatus_asc
    # Descending sort for approvalStatus
    approvalStatus_desc
    # Ascending sort for evidenceType
    evidenceType_asc
    # Descending sort for evidenceType
    evidenceType_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for notes
    notes_asc
    # Descending sort for notes
    notes_desc
    # Ascending sort for responseType
    responseType_asc
    # Descending sort for responseType
    responseType_desc
}

# Filter Input Type for GenomicVariant
input _GenomicVariantFilter {
    # AND
    AND: [_GenomicVariantFilter!]
    # OR
    OR: [_GenomicVariantFilter!]
    # clinVarVariant
    clinVarVariant: _ClinVarVariantFilter
    # clinVarVariant_in
    clinVarVariant_in: _ClinVarVariantFilter
    # clinVarVariant_not
    clinVarVariant_not: _ClinVarVariantFilter
    # clinVarVariant_not_in
    clinVarVariant_not_in: _ClinVarVariantFilter
    # description
    description: _EditableStatementFilter
    # description_in
    description_in: _EditableStatementFilter
    # description_not
    description_not: _EditableStatementFilter
    # description_not_in
    description_not_in: _EditableStatementFilter
    # gene
    gene: _OmniGeneFilter
    # gene_in
    gene_in: _OmniGeneFilter
    # gene_not
    gene_not: _OmniGeneFilter
    # gene_not_in
    gene_not_in: _OmniGeneFilter
    # goVariant
    goVariant: _GOVariantFilter
    # goVariant_in
    goVariant_in: _GOVariantFilter
    # goVariant_not
    goVariant_not: _GOVariantFilter
    # goVariant_not_in
    goVariant_not_in: _GOVariantFilter
    # hotSpotVariant
    hotSpotVariant: _HotSpotVariantFilter
    # hotSpotVariant_in
    hotSpotVariant_in: _HotSpotVariantFilter
    # hotSpotVariant_not
    hotSpotVariant_not: _HotSpotVariantFilter
    # hotSpotVariant_not_in
    hotSpotVariant_not_in: _HotSpotVariantFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # jaxVariant
    jaxVariant: _JaxVariantFilter
    # jaxVariant_in
    jaxVariant_in: _JaxVariantFilter
    # jaxVariant_not
    jaxVariant_not: _JaxVariantFilter
    # jaxVariant_not_in
    jaxVariant_not_in: _JaxVariantFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # nonCanonicalTranscript
    nonCanonicalTranscript: _EditableStatementFilter
    # nonCanonicalTranscript_in
    nonCanonicalTranscript_in: _EditableStatementFilter
    # nonCanonicalTranscript_not
    nonCanonicalTranscript_not: _EditableStatementFilter
    # nonCanonicalTranscript_not_in
    nonCanonicalTranscript_not_in: _EditableStatementFilter
}

# Filter Input Type for GenomicVariantMarker
input _GenomicVariantMarkerFilter {
    # AND
    AND: [_GenomicVariantMarkerFilter!]
    # OR
    OR: [_GenomicVariantMarkerFilter!]
    # gene
    gene: _OmniGeneFilter
    # gene_in
    gene_in: _OmniGeneFilter
    # gene_not
    gene_not: _OmniGeneFilter
    # gene_not_in
    gene_not_in: _OmniGeneFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # method
    method: _EditableStatementFilter
    # method_in
    method_in: _EditableStatementFilter
    # method_not
    method_not: _EditableStatementFilter
    # method_not_in
    method_not_in: _EditableStatementFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # resultString
    resultString: _EditableStatementFilter
    # resultString_in
    resultString_in: _EditableStatementFilter
    # resultString_not
    resultString_not: _EditableStatementFilter
    # resultString_not_in
    resultString_not_in: _EditableStatementFilter
    # variant
    variant: _GenomicVariantFilter
    # variant_in
    variant_in: _GenomicVariantFilter
    # variant_not
    variant_not: _GenomicVariantFilter
    # variant_not_in
    variant_not_in: _GenomicVariantFilter
}

# Ordering Enum for GenomicVariantMarker
enum _GenomicVariantMarkerOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Ordering Enum for GenomicVariant
enum _GenomicVariantOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for GODisease
input _GODiseaseFilter {
    # AND
    AND: [_GODiseaseFilter!]
    # OR
    OR: [_GODiseaseFilter!]
    # children
    children: _GODiseaseFilter
    # children_every
    children_every: _GODiseaseFilter
    # children_in
    children_in: _GODiseaseFilter
    # children_none
    children_none: _GODiseaseFilter
    # children_not
    children_not: _GODiseaseFilter
    # children_not_in
    children_not_in: _GODiseaseFilter
    # children_single
    children_single: _GODiseaseFilter
    # children_some
    children_some: _GODiseaseFilter
    # definition
    definition: _EditableStatementFilter
    # definition_in
    definition_in: _EditableStatementFilter
    # definition_not
    definition_not: _EditableStatementFilter
    # definition_not_in
    definition_not_in: _EditableStatementFilter
    # goId
    goId: String
    # goId_contains
    goId_contains: String
    # goId_ends_with
    goId_ends_with: String
    # goId_gt
    goId_gt: String
    # goId_gte
    goId_gte: String
    # goId_in
    goId_in: [String!]
    # goId_lt
    goId_lt: String
    # goId_lte
    goId_lte: String
    # goId_not
    goId_not: String
    # goId_not_contains
    goId_not_contains: String
    # goId_not_ends_with
    goId_not_ends_with: String
    # goId_not_in
    goId_not_in: [String!]
    # goId_not_starts_with
    goId_not_starts_with: String
    # goId_starts_with
    goId_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # jaxDiseases
    jaxDiseases: _JaxDiseaseFilter
    # jaxDiseases_every
    jaxDiseases_every: _JaxDiseaseFilter
    # jaxDiseases_in
    jaxDiseases_in: _JaxDiseaseFilter
    # jaxDiseases_none
    jaxDiseases_none: _JaxDiseaseFilter
    # jaxDiseases_not
    jaxDiseases_not: _JaxDiseaseFilter
    # jaxDiseases_not_in
    jaxDiseases_not_in: _JaxDiseaseFilter
    # jaxDiseases_single
    jaxDiseases_single: _JaxDiseaseFilter
    # jaxDiseases_some
    jaxDiseases_some: _JaxDiseaseFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # parents
    parents: _GODiseaseFilter
    # parents_every
    parents_every: _GODiseaseFilter
    # parents_in
    parents_in: _GODiseaseFilter
    # parents_none
    parents_none: _GODiseaseFilter
    # parents_not
    parents_not: _GODiseaseFilter
    # parents_not_in
    parents_not_in: _GODiseaseFilter
    # parents_single
    parents_single: _GODiseaseFilter
    # parents_some
    parents_some: _GODiseaseFilter
    # synonyms
    synonyms: _EditableStringListFilter
    # synonyms_in
    synonyms_in: _EditableStringListFilter
    # synonyms_not
    synonyms_not: _EditableStringListFilter
    # synonyms_not_in
    synonyms_not_in: _EditableStringListFilter
    # xrefs
    xrefs: _EditableXRefListFilter
    # xrefs_in
    xrefs_in: _EditableXRefListFilter
    # xrefs_not
    xrefs_not: _EditableXRefListFilter
    # xrefs_not_in
    xrefs_not_in: _EditableXRefListFilter
}

# Ordering Enum for GODisease
enum _GODiseaseOrdering {
    # Ascending sort for goId
    goId_asc
    # Descending sort for goId
    goId_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for GOVariant
input _GOVariantFilter {
    # AND
    AND: [_GOVariantFilter!]
    # OR
    OR: [_GOVariantFilter!]
    # gene
    gene: String
    # gene_contains
    gene_contains: String
    # gene_ends_with
    gene_ends_with: String
    # gene_gt
    gene_gt: String
    # gene_gte
    gene_gte: String
    # gene_in
    gene_in: [String!]
    # gene_lt
    gene_lt: String
    # gene_lte
    gene_lte: String
    # gene_not
    gene_not: String
    # gene_not_contains
    gene_not_contains: String
    # gene_not_ends_with
    gene_not_ends_with: String
    # gene_not_in
    gene_not_in: [String!]
    # gene_not_starts_with
    gene_not_starts_with: String
    # gene_starts_with
    gene_starts_with: String
    # genomicVariant
    genomicVariant: _GenomicVariantFilter
    # genomicVariant_in
    genomicVariant_in: _GenomicVariantFilter
    # genomicVariant_not
    genomicVariant_not: _GenomicVariantFilter
    # genomicVariant_not_in
    genomicVariant_not_in: _GenomicVariantFilter
    # goId
    goId: String
    # goId_contains
    goId_contains: String
    # goId_ends_with
    goId_ends_with: String
    # goId_gt
    goId_gt: String
    # goId_gte
    goId_gte: String
    # goId_in
    goId_in: [String!]
    # goId_lt
    goId_lt: String
    # goId_lte
    goId_lte: String
    # goId_not
    goId_not: String
    # goId_not_contains
    goId_not_contains: String
    # goId_not_ends_with
    goId_not_ends_with: String
    # goId_not_in
    goId_not_in: [String!]
    # goId_not_starts_with
    goId_not_starts_with: String
    # goId_starts_with
    goId_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # jaxVariant
    jaxVariant: _JaxVariantFilter
    # jaxVariant_in
    jaxVariant_in: _JaxVariantFilter
    # jaxVariant_not
    jaxVariant_not: _JaxVariantFilter
    # jaxVariant_not_in
    jaxVariant_not_in: _JaxVariantFilter
    # mutationType
    mutationType: String
    # mutationType_contains
    mutationType_contains: String
    # mutationType_ends_with
    mutationType_ends_with: String
    # mutationType_gt
    mutationType_gt: String
    # mutationType_gte
    mutationType_gte: String
    # mutationType_in
    mutationType_in: [String!]
    # mutationType_lt
    mutationType_lt: String
    # mutationType_lte
    mutationType_lte: String
    # mutationType_not
    mutationType_not: String
    # mutationType_not_contains
    mutationType_not_contains: String
    # mutationType_not_ends_with
    mutationType_not_ends_with: String
    # mutationType_not_in
    mutationType_not_in: [String!]
    # mutationType_not_starts_with
    mutationType_not_starts_with: String
    # mutationType_starts_with
    mutationType_starts_with: String
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
}

# Ordering Enum for GOVariant
enum _GOVariantOrdering {
    # Ascending sort for gene
    gene_asc
    # Descending sort for gene
    gene_desc
    # Ascending sort for goId
    goId_asc
    # Descending sort for goId
    goId_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for mutationType
    mutationType_asc
    # Descending sort for mutationType
    mutationType_desc
}

# Filter Input Type for HotSpotVariant
input _HotSpotVariantFilter {
    # AND
    AND: [_HotSpotVariantFilter!]
    # OR
    OR: [_HotSpotVariantFilter!]
    # begin
    begin: String
    # begin_contains
    begin_contains: String
    # begin_ends_with
    begin_ends_with: String
    # begin_gt
    begin_gt: String
    # begin_gte
    begin_gte: String
    # begin_in
    begin_in: [String!]
    # begin_lt
    begin_lt: String
    # begin_lte
    begin_lte: String
    # begin_not
    begin_not: String
    # begin_not_contains
    begin_not_contains: String
    # begin_not_ends_with
    begin_not_ends_with: String
    # begin_not_in
    begin_not_in: [String!]
    # begin_not_starts_with
    begin_not_starts_with: String
    # begin_starts_with
    begin_starts_with: String
    # end
    end: String
    # end_contains
    end_contains: String
    # end_ends_with
    end_ends_with: String
    # end_gt
    end_gt: String
    # end_gte
    end_gte: String
    # end_in
    end_in: [String!]
    # end_lt
    end_lt: String
    # end_lte
    end_lte: String
    # end_not
    end_not: String
    # end_not_contains
    end_not_contains: String
    # end_not_ends_with
    end_not_ends_with: String
    # end_not_in
    end_not_in: [String!]
    # end_not_starts_with
    end_not_starts_with: String
    # end_starts_with
    end_starts_with: String
    # gene
    gene: String
    # gene_contains
    gene_contains: String
    # gene_ends_with
    gene_ends_with: String
    # gene_gt
    gene_gt: String
    # gene_gte
    gene_gte: String
    # gene_in
    gene_in: [String!]
    # gene_lt
    gene_lt: String
    # gene_lte
    gene_lte: String
    # gene_not
    gene_not: String
    # gene_not_contains
    gene_not_contains: String
    # gene_not_ends_with
    gene_not_ends_with: String
    # gene_not_in
    gene_not_in: [String!]
    # gene_not_starts_with
    gene_not_starts_with: String
    # gene_starts_with
    gene_starts_with: String
    # genomicVariant
    genomicVariant: _GenomicVariantFilter
    # genomicVariant_in
    genomicVariant_in: _GenomicVariantFilter
    # genomicVariant_not
    genomicVariant_not: _GenomicVariantFilter
    # genomicVariant_not_in
    genomicVariant_not_in: _GenomicVariantFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: String
    # name_contains
    name_contains: String
    # name_ends_with
    name_ends_with: String
    # name_gt
    name_gt: String
    # name_gte
    name_gte: String
    # name_in
    name_in: [String!]
    # name_lt
    name_lt: String
    # name_lte
    name_lte: String
    # name_not
    name_not: String
    # name_not_contains
    name_not_contains: String
    # name_not_ends_with
    name_not_ends_with: String
    # name_not_in
    name_not_in: [String!]
    # name_not_starts_with
    name_not_starts_with: String
    # name_starts_with
    name_starts_with: String
    # occurrences
    occurrences: _OncoTreeOccurrenceFilter
    # occurrences_every
    occurrences_every: _OncoTreeOccurrenceFilter
    # occurrences_in
    occurrences_in: _OncoTreeOccurrenceFilter
    # occurrences_none
    occurrences_none: _OncoTreeOccurrenceFilter
    # occurrences_not
    occurrences_not: _OncoTreeOccurrenceFilter
    # occurrences_not_in
    occurrences_not_in: _OncoTreeOccurrenceFilter
    # occurrences_single
    occurrences_single: _OncoTreeOccurrenceFilter
    # occurrences_some
    occurrences_some: _OncoTreeOccurrenceFilter
    # position
    position: Int
    # position_gt
    position_gt: Int
    # position_gte
    position_gte: Int
    # position_in
    position_in: [Int!]
    # position_lt
    position_lt: Int
    # position_lte
    position_lte: Int
    # position_not
    position_not: Int
    # position_not_in
    position_not_in: [Int!]
    # referenceAminoAcid
    referenceAminoAcid: String
    # referenceAminoAcid_contains
    referenceAminoAcid_contains: String
    # referenceAminoAcid_ends_with
    referenceAminoAcid_ends_with: String
    # referenceAminoAcid_gt
    referenceAminoAcid_gt: String
    # referenceAminoAcid_gte
    referenceAminoAcid_gte: String
    # referenceAminoAcid_in
    referenceAminoAcid_in: [String!]
    # referenceAminoAcid_lt
    referenceAminoAcid_lt: String
    # referenceAminoAcid_lte
    referenceAminoAcid_lte: String
    # referenceAminoAcid_not
    referenceAminoAcid_not: String
    # referenceAminoAcid_not_contains
    referenceAminoAcid_not_contains: String
    # referenceAminoAcid_not_ends_with
    referenceAminoAcid_not_ends_with: String
    # referenceAminoAcid_not_in
    referenceAminoAcid_not_in: [String!]
    # referenceAminoAcid_not_starts_with
    referenceAminoAcid_not_starts_with: String
    # referenceAminoAcid_starts_with
    referenceAminoAcid_starts_with: String
    # variantAminoAcid
    variantAminoAcid: String
    # variantAminoAcid_contains
    variantAminoAcid_contains: String
    # variantAminoAcid_ends_with
    variantAminoAcid_ends_with: String
    # variantAminoAcid_gt
    variantAminoAcid_gt: String
    # variantAminoAcid_gte
    variantAminoAcid_gte: String
    # variantAminoAcid_in
    variantAminoAcid_in: [String!]
    # variantAminoAcid_lt
    variantAminoAcid_lt: String
    # variantAminoAcid_lte
    variantAminoAcid_lte: String
    # variantAminoAcid_not
    variantAminoAcid_not: String
    # variantAminoAcid_not_contains
    variantAminoAcid_not_contains: String
    # variantAminoAcid_not_ends_with
    variantAminoAcid_not_ends_with: String
    # variantAminoAcid_not_in
    variantAminoAcid_not_in: [String!]
    # variantAminoAcid_not_starts_with
    variantAminoAcid_not_starts_with: String
    # variantAminoAcid_starts_with
    variantAminoAcid_starts_with: String
}

# Ordering Enum for HotSpotVariant
enum _HotSpotVariantOrdering {
    # Ascending sort for begin
    begin_asc
    # Descending sort for begin
    begin_desc
    # Ascending sort for end
    end_asc
    # Descending sort for end
    end_desc
    # Ascending sort for gene
    gene_asc
    # Descending sort for gene
    gene_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for name
    name_asc
    # Descending sort for name
    name_desc
    # Ascending sort for position
    position_asc
    # Descending sort for position
    position_desc
    # Ascending sort for referenceAminoAcid
    referenceAminoAcid_asc
    # Descending sort for referenceAminoAcid
    referenceAminoAcid_desc
    # Ascending sort for variantAminoAcid
    variantAminoAcid_asc
    # Descending sort for variantAminoAcid
    variantAminoAcid_desc
}

# Filter Input Type for IHCAssay
input _IHCAssayFilter {
    # AND
    AND: [_IHCAssayFilter!]
    # OR
    OR: [_IHCAssayFilter!]
    # antibodyClone
    antibodyClone: _EditableStatementFilter
    # antibodyClone_in
    antibodyClone_in: _EditableStatementFilter
    # antibodyClone_not
    antibodyClone_not: _EditableStatementFilter
    # antibodyClone_not_in
    antibodyClone_not_in: _EditableStatementFilter
    # comparator
    comparator: _EditableAssayComparatorFilter
    # comparator_in
    comparator_in: _EditableAssayComparatorFilter
    # comparator_not
    comparator_not: _EditableAssayComparatorFilter
    # comparator_not_in
    comparator_not_in: _EditableAssayComparatorFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # proteinExpressionMarkers
    proteinExpressionMarkers: _ProteinExpressionMarkerFilter
    # proteinExpressionMarkers_every
    proteinExpressionMarkers_every: _ProteinExpressionMarkerFilter
    # proteinExpressionMarkers_in
    proteinExpressionMarkers_in: _ProteinExpressionMarkerFilter
    # proteinExpressionMarkers_none
    proteinExpressionMarkers_none: _ProteinExpressionMarkerFilter
    # proteinExpressionMarkers_not
    proteinExpressionMarkers_not: _ProteinExpressionMarkerFilter
    # proteinExpressionMarkers_not_in
    proteinExpressionMarkers_not_in: _ProteinExpressionMarkerFilter
    # proteinExpressionMarkers_single
    proteinExpressionMarkers_single: _ProteinExpressionMarkerFilter
    # proteinExpressionMarkers_some
    proteinExpressionMarkers_some: _ProteinExpressionMarkerFilter
    # resultMax
    resultMax: _EditableFloatFilter
    # resultMax_in
    resultMax_in: _EditableFloatFilter
    # resultMax_not
    resultMax_not: _EditableFloatFilter
    # resultMax_not_in
    resultMax_not_in: _EditableFloatFilter
    # resultMin
    resultMin: _EditableFloatFilter
    # resultMin_in
    resultMin_in: _EditableFloatFilter
    # resultMin_not
    resultMin_not: _EditableFloatFilter
    # resultMin_not_in
    resultMin_not_in: _EditableFloatFilter
    # resultString
    resultString: _EditableStatementFilter
    # resultString_in
    resultString_in: _EditableStatementFilter
    # resultString_not
    resultString_not: _EditableStatementFilter
    # resultString_not_in
    resultString_not_in: _EditableStatementFilter
    # resultUnits
    resultUnits: _EditableStatementFilter
    # resultUnits_in
    resultUnits_in: _EditableStatementFilter
    # resultUnits_not
    resultUnits_not: _EditableStatementFilter
    # resultUnits_not_in
    resultUnits_not_in: _EditableStatementFilter
}

# Ordering Enum for IHCAssay
enum _IHCAssayOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for InternetReference
input _InternetReferenceFilter {
    # AND
    AND: [_InternetReferenceFilter!]
    # OR
    OR: [_InternetReferenceFilter!]
    # accessedDate
    accessedDate: String
    # accessedDate_contains
    accessedDate_contains: String
    # accessedDate_ends_with
    accessedDate_ends_with: String
    # accessedDate_gt
    accessedDate_gt: String
    # accessedDate_gte
    accessedDate_gte: String
    # accessedDate_in
    accessedDate_in: [String!]
    # accessedDate_lt
    accessedDate_lt: String
    # accessedDate_lte
    accessedDate_lte: String
    # accessedDate_not
    accessedDate_not: String
    # accessedDate_not_contains
    accessedDate_not_contains: String
    # accessedDate_not_ends_with
    accessedDate_not_ends_with: String
    # accessedDate_not_in
    accessedDate_not_in: [String!]
    # accessedDate_not_starts_with
    accessedDate_not_starts_with: String
    # accessedDate_starts_with
    accessedDate_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # shortReference
    shortReference: String
    # shortReference_contains
    shortReference_contains: String
    # shortReference_ends_with
    shortReference_ends_with: String
    # shortReference_gt
    shortReference_gt: String
    # shortReference_gte
    shortReference_gte: String
    # shortReference_in
    shortReference_in: [String!]
    # shortReference_lt
    shortReference_lt: String
    # shortReference_lte
    shortReference_lte: String
    # shortReference_not
    shortReference_not: String
    # shortReference_not_contains
    shortReference_not_contains: String
    # shortReference_not_ends_with
    shortReference_not_ends_with: String
    # shortReference_not_in
    shortReference_not_in: [String!]
    # shortReference_not_starts_with
    shortReference_not_starts_with: String
    # shortReference_starts_with
    shortReference_starts_with: String
    # statementsReferenced
    statementsReferenced: _EditableObjectFilter
    # statementsReferenced_every
    statementsReferenced_every: _EditableObjectFilter
    # statementsReferenced_in
    statementsReferenced_in: _EditableObjectFilter
    # statementsReferenced_none
    statementsReferenced_none: _EditableObjectFilter
    # statementsReferenced_not
    statementsReferenced_not: _EditableObjectFilter
    # statementsReferenced_not_in
    statementsReferenced_not_in: _EditableObjectFilter
    # statementsReferenced_single
    statementsReferenced_single: _EditableObjectFilter
    # statementsReferenced_some
    statementsReferenced_some: _EditableObjectFilter
    # webAddress
    webAddress: String
    # webAddress_contains
    webAddress_contains: String
    # webAddress_ends_with
    webAddress_ends_with: String
    # webAddress_gt
    webAddress_gt: String
    # webAddress_gte
    webAddress_gte: String
    # webAddress_in
    webAddress_in: [String!]
    # webAddress_lt
    webAddress_lt: String
    # webAddress_lte
    webAddress_lte: String
    # webAddress_not
    webAddress_not: String
    # webAddress_not_contains
    webAddress_not_contains: String
    # webAddress_not_ends_with
    webAddress_not_ends_with: String
    # webAddress_not_in
    webAddress_not_in: [String!]
    # webAddress_not_starts_with
    webAddress_not_starts_with: String
    # webAddress_starts_with
    webAddress_starts_with: String
}

# Ordering Enum for InternetReference
enum _InternetReferenceOrdering {
    # Ascending sort for accessedDate
    accessedDate_asc
    # Descending sort for accessedDate
    accessedDate_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for shortReference
    shortReference_asc
    # Descending sort for shortReference
    shortReference_desc
    # Ascending sort for webAddress
    webAddress_asc
    # Descending sort for webAddress
    webAddress_desc
}

# Filter Input Type for JaxDisease
input _JaxDiseaseFilter {
    # AND
    AND: [_JaxDiseaseFilter!]
    # OR
    OR: [_JaxDiseaseFilter!]
    # definition
    definition: _EditableStatementFilter
    # definition_in
    definition_in: _EditableStatementFilter
    # definition_not
    definition_not: _EditableStatementFilter
    # definition_not_in
    definition_not_in: _EditableStatementFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # jaxId
    jaxId: String
    # jaxId_contains
    jaxId_contains: String
    # jaxId_ends_with
    jaxId_ends_with: String
    # jaxId_gt
    jaxId_gt: String
    # jaxId_gte
    jaxId_gte: String
    # jaxId_in
    jaxId_in: [String!]
    # jaxId_lt
    jaxId_lt: String
    # jaxId_lte
    jaxId_lte: String
    # jaxId_not
    jaxId_not: String
    # jaxId_not_contains
    jaxId_not_contains: String
    # jaxId_not_ends_with
    jaxId_not_ends_with: String
    # jaxId_not_in
    jaxId_not_in: [String!]
    # jaxId_not_starts_with
    jaxId_not_starts_with: String
    # jaxId_starts_with
    jaxId_starts_with: String
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # source
    source: String
    # source_contains
    source_contains: String
    # source_ends_with
    source_ends_with: String
    # source_gt
    source_gt: String
    # source_gte
    source_gte: String
    # source_in
    source_in: [String!]
    # source_lt
    source_lt: String
    # source_lte
    source_lte: String
    # source_not
    source_not: String
    # source_not_contains
    source_not_contains: String
    # source_not_ends_with
    source_not_ends_with: String
    # source_not_in
    source_not_in: [String!]
    # source_not_starts_with
    source_not_starts_with: String
    # source_starts_with
    source_starts_with: String
    # termId
    termId: String
    # termId_contains
    termId_contains: String
    # termId_ends_with
    termId_ends_with: String
    # termId_gt
    termId_gt: String
    # termId_gte
    termId_gte: String
    # termId_in
    termId_in: [String!]
    # termId_lt
    termId_lt: String
    # termId_lte
    termId_lte: String
    # termId_not
    termId_not: String
    # termId_not_contains
    termId_not_contains: String
    # termId_not_ends_with
    termId_not_ends_with: String
    # termId_not_in
    termId_not_in: [String!]
    # termId_not_starts_with
    termId_not_starts_with: String
    # termId_starts_with
    termId_starts_with: String
}

# Ordering Enum for JaxDisease
enum _JaxDiseaseOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for jaxId
    jaxId_asc
    # Descending sort for jaxId
    jaxId_desc
    # Ascending sort for source
    source_asc
    # Descending sort for source
    source_desc
    # Ascending sort for termId
    termId_asc
    # Descending sort for termId
    termId_desc
}

# Filter Input Type for JaxDrugClass
input _JaxDrugClassFilter {
    # AND
    AND: [_JaxDrugClassFilter!]
    # OR
    OR: [_JaxDrugClassFilter!]
    # drugs
    drugs: _JaxDrugFilter
    # drugs_every
    drugs_every: _JaxDrugFilter
    # drugs_in
    drugs_in: _JaxDrugFilter
    # drugs_none
    drugs_none: _JaxDrugFilter
    # drugs_not
    drugs_not: _JaxDrugFilter
    # drugs_not_in
    drugs_not_in: _JaxDrugFilter
    # drugs_single
    drugs_single: _JaxDrugFilter
    # drugs_some
    drugs_some: _JaxDrugFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # jaxId
    jaxId: String
    # jaxId_contains
    jaxId_contains: String
    # jaxId_ends_with
    jaxId_ends_with: String
    # jaxId_gt
    jaxId_gt: String
    # jaxId_gte
    jaxId_gte: String
    # jaxId_in
    jaxId_in: [String!]
    # jaxId_lt
    jaxId_lt: String
    # jaxId_lte
    jaxId_lte: String
    # jaxId_not
    jaxId_not: String
    # jaxId_not_contains
    jaxId_not_contains: String
    # jaxId_not_ends_with
    jaxId_not_ends_with: String
    # jaxId_not_in
    jaxId_not_in: [String!]
    # jaxId_not_starts_with
    jaxId_not_starts_with: String
    # jaxId_starts_with
    jaxId_starts_with: String
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
}

# Ordering Enum for JaxDrugClass
enum _JaxDrugClassOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for jaxId
    jaxId_asc
    # Descending sort for jaxId
    jaxId_desc
}

# Filter Input Type for JaxDrug
input _JaxDrugFilter {
    # AND
    AND: [_JaxDrugFilter!]
    # OR
    OR: [_JaxDrugFilter!]
    # description
    description: _EditableStatementFilter
    # description_in
    description_in: _EditableStatementFilter
    # description_not
    description_not: _EditableStatementFilter
    # description_not_in
    description_not_in: _EditableStatementFilter
    # drugClasses
    drugClasses: _JaxDrugClassFilter
    # drugClasses_every
    drugClasses_every: _JaxDrugClassFilter
    # drugClasses_in
    drugClasses_in: _JaxDrugClassFilter
    # drugClasses_none
    drugClasses_none: _JaxDrugClassFilter
    # drugClasses_not
    drugClasses_not: _JaxDrugClassFilter
    # drugClasses_not_in
    drugClasses_not_in: _JaxDrugClassFilter
    # drugClasses_single
    drugClasses_single: _JaxDrugClassFilter
    # drugClasses_some
    drugClasses_some: _JaxDrugClassFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # jaxId
    jaxId: String
    # jaxId_contains
    jaxId_contains: String
    # jaxId_ends_with
    jaxId_ends_with: String
    # jaxId_gt
    jaxId_gt: String
    # jaxId_gte
    jaxId_gte: String
    # jaxId_in
    jaxId_in: [String!]
    # jaxId_lt
    jaxId_lt: String
    # jaxId_lte
    jaxId_lte: String
    # jaxId_not
    jaxId_not: String
    # jaxId_not_contains
    jaxId_not_contains: String
    # jaxId_not_ends_with
    jaxId_not_ends_with: String
    # jaxId_not_in
    jaxId_not_in: [String!]
    # jaxId_not_starts_with
    jaxId_not_starts_with: String
    # jaxId_starts_with
    jaxId_starts_with: String
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # synonyms
    synonyms: _EditableStringListFilter
    # synonyms_in
    synonyms_in: _EditableStringListFilter
    # synonyms_not
    synonyms_not: _EditableStringListFilter
    # synonyms_not_in
    synonyms_not_in: _EditableStringListFilter
    # tradeName
    tradeName: _EditableStatementFilter
    # tradeName_in
    tradeName_in: _EditableStatementFilter
    # tradeName_not
    tradeName_not: _EditableStatementFilter
    # tradeName_not_in
    tradeName_not_in: _EditableStatementFilter
}

# Ordering Enum for JaxDrug
enum _JaxDrugOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for jaxId
    jaxId_asc
    # Descending sort for jaxId
    jaxId_desc
}

# Filter Input Type for JaxGene
input _JaxGeneFilter {
    # AND
    AND: [_JaxGeneFilter!]
    # OR
    OR: [_JaxGeneFilter!]
    # canonicalTranscript
    canonicalTranscript: _EditableStatementFilter
    # canonicalTranscript_every
    canonicalTranscript_every: _EditableStatementFilter
    # canonicalTranscript_in
    canonicalTranscript_in: _EditableStatementFilter
    # canonicalTranscript_none
    canonicalTranscript_none: _EditableStatementFilter
    # canonicalTranscript_not
    canonicalTranscript_not: _EditableStatementFilter
    # canonicalTranscript_not_in
    canonicalTranscript_not_in: _EditableStatementFilter
    # canonicalTranscript_single
    canonicalTranscript_single: _EditableStatementFilter
    # canonicalTranscript_some
    canonicalTranscript_some: _EditableStatementFilter
    # chromosome
    chromosome: String
    # chromosome_contains
    chromosome_contains: String
    # chromosome_ends_with
    chromosome_ends_with: String
    # chromosome_gt
    chromosome_gt: String
    # chromosome_gte
    chromosome_gte: String
    # chromosome_in
    chromosome_in: [String!]
    # chromosome_lt
    chromosome_lt: String
    # chromosome_lte
    chromosome_lte: String
    # chromosome_not
    chromosome_not: String
    # chromosome_not_contains
    chromosome_not_contains: String
    # chromosome_not_ends_with
    chromosome_not_ends_with: String
    # chromosome_not_in
    chromosome_not_in: [String!]
    # chromosome_not_starts_with
    chromosome_not_starts_with: String
    # chromosome_starts_with
    chromosome_starts_with: String
    # description
    description: _EditableStatementFilter
    # description_in
    description_in: _EditableStatementFilter
    # description_not
    description_not: _EditableStatementFilter
    # description_not_in
    description_not_in: _EditableStatementFilter
    # entrezId
    entrezId: String
    # entrezId_contains
    entrezId_contains: String
    # entrezId_ends_with
    entrezId_ends_with: String
    # entrezId_gt
    entrezId_gt: String
    # entrezId_gte
    entrezId_gte: String
    # entrezId_in
    entrezId_in: [String!]
    # entrezId_lt
    entrezId_lt: String
    # entrezId_lte
    entrezId_lte: String
    # entrezId_not
    entrezId_not: String
    # entrezId_not_contains
    entrezId_not_contains: String
    # entrezId_not_ends_with
    entrezId_not_ends_with: String
    # entrezId_not_in
    entrezId_not_in: [String!]
    # entrezId_not_starts_with
    entrezId_not_starts_with: String
    # entrezId_starts_with
    entrezId_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # jaxId
    jaxId: String
    # jaxId_contains
    jaxId_contains: String
    # jaxId_ends_with
    jaxId_ends_with: String
    # jaxId_gt
    jaxId_gt: String
    # jaxId_gte
    jaxId_gte: String
    # jaxId_in
    jaxId_in: [String!]
    # jaxId_lt
    jaxId_lt: String
    # jaxId_lte
    jaxId_lte: String
    # jaxId_not
    jaxId_not: String
    # jaxId_not_contains
    jaxId_not_contains: String
    # jaxId_not_ends_with
    jaxId_not_ends_with: String
    # jaxId_not_in
    jaxId_not_in: [String!]
    # jaxId_not_starts_with
    jaxId_not_starts_with: String
    # jaxId_starts_with
    jaxId_starts_with: String
    # name
    name: String
    # name_contains
    name_contains: String
    # name_ends_with
    name_ends_with: String
    # name_gt
    name_gt: String
    # name_gte
    name_gte: String
    # name_in
    name_in: [String!]
    # name_lt
    name_lt: String
    # name_lte
    name_lte: String
    # name_not
    name_not: String
    # name_not_contains
    name_not_contains: String
    # name_not_ends_with
    name_not_ends_with: String
    # name_not_in
    name_not_in: [String!]
    # name_not_starts_with
    name_not_starts_with: String
    # name_starts_with
    name_starts_with: String
    # synonyms
    synonyms: _EditableStringListFilter
    # synonyms_in
    synonyms_in: _EditableStringListFilter
    # synonyms_not
    synonyms_not: _EditableStringListFilter
    # synonyms_not_in
    synonyms_not_in: _EditableStringListFilter
}

# Ordering Enum for JaxGene
enum _JaxGeneOrdering {
    # Ascending sort for chromosome
    chromosome_asc
    # Descending sort for chromosome
    chromosome_desc
    # Ascending sort for entrezId
    entrezId_asc
    # Descending sort for entrezId
    entrezId_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for jaxId
    jaxId_asc
    # Descending sort for jaxId
    jaxId_desc
    # Ascending sort for name
    name_asc
    # Descending sort for name
    name_desc
}

# Filter Input Type for JaxVariant
input _JaxVariantFilter {
    # AND
    AND: [_JaxVariantFilter!]
    # OR
    OR: [_JaxVariantFilter!]
    # cDot
    cDot: String
    # cDot_contains
    cDot_contains: String
    # cDot_ends_with
    cDot_ends_with: String
    # cDot_gt
    cDot_gt: String
    # cDot_gte
    cDot_gte: String
    # cDot_in
    cDot_in: [String!]
    # cDot_lt
    cDot_lt: String
    # cDot_lte
    cDot_lte: String
    # cDot_not
    cDot_not: String
    # cDot_not_contains
    cDot_not_contains: String
    # cDot_not_ends_with
    cDot_not_ends_with: String
    # cDot_not_in
    cDot_not_in: [String!]
    # cDot_not_starts_with
    cDot_not_starts_with: String
    # cDot_starts_with
    cDot_starts_with: String
    # description
    description: _EditableStatementFilter
    # description_in
    description_in: _EditableStatementFilter
    # description_not
    description_not: _EditableStatementFilter
    # description_not_in
    description_not_in: _EditableStatementFilter
    # gDot
    gDot: String
    # gDot_contains
    gDot_contains: String
    # gDot_ends_with
    gDot_ends_with: String
    # gDot_gt
    gDot_gt: String
    # gDot_gte
    gDot_gte: String
    # gDot_in
    gDot_in: [String!]
    # gDot_lt
    gDot_lt: String
    # gDot_lte
    gDot_lte: String
    # gDot_not
    gDot_not: String
    # gDot_not_contains
    gDot_not_contains: String
    # gDot_not_ends_with
    gDot_not_ends_with: String
    # gDot_not_in
    gDot_not_in: [String!]
    # gDot_not_starts_with
    gDot_not_starts_with: String
    # gDot_starts_with
    gDot_starts_with: String
    # gene
    gene: _JaxGeneFilter
    # gene_in
    gene_in: _JaxGeneFilter
    # gene_not
    gene_not: _JaxGeneFilter
    # gene_not_in
    gene_not_in: _JaxGeneFilter
    # genomicVariant
    genomicVariant: _GenomicVariantFilter
    # genomicVariant_in
    genomicVariant_in: _GenomicVariantFilter
    # genomicVariant_not
    genomicVariant_not: _GenomicVariantFilter
    # genomicVariant_not_in
    genomicVariant_not_in: _GenomicVariantFilter
    # goVariant
    goVariant: _GOVariantFilter
    # goVariant_in
    goVariant_in: _GOVariantFilter
    # goVariant_not
    goVariant_not: _GOVariantFilter
    # goVariant_not_in
    goVariant_not_in: _GOVariantFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # jaxId
    jaxId: String
    # jaxId_contains
    jaxId_contains: String
    # jaxId_ends_with
    jaxId_ends_with: String
    # jaxId_gt
    jaxId_gt: String
    # jaxId_gte
    jaxId_gte: String
    # jaxId_in
    jaxId_in: [String!]
    # jaxId_lt
    jaxId_lt: String
    # jaxId_lte
    jaxId_lte: String
    # jaxId_not
    jaxId_not: String
    # jaxId_not_contains
    jaxId_not_contains: String
    # jaxId_not_ends_with
    jaxId_not_ends_with: String
    # jaxId_not_in
    jaxId_not_in: [String!]
    # jaxId_not_starts_with
    jaxId_not_starts_with: String
    # jaxId_starts_with
    jaxId_starts_with: String
    # name
    name: String
    # name_contains
    name_contains: String
    # name_ends_with
    name_ends_with: String
    # name_gt
    name_gt: String
    # name_gte
    name_gte: String
    # name_in
    name_in: [String!]
    # name_lt
    name_lt: String
    # name_lte
    name_lte: String
    # name_not
    name_not: String
    # name_not_contains
    name_not_contains: String
    # name_not_ends_with
    name_not_ends_with: String
    # name_not_in
    name_not_in: [String!]
    # name_not_starts_with
    name_not_starts_with: String
    # name_starts_with
    name_starts_with: String
    # pDot
    pDot: String
    # pDot_contains
    pDot_contains: String
    # pDot_ends_with
    pDot_ends_with: String
    # pDot_gt
    pDot_gt: String
    # pDot_gte
    pDot_gte: String
    # pDot_in
    pDot_in: [String!]
    # pDot_lt
    pDot_lt: String
    # pDot_lte
    pDot_lte: String
    # pDot_not
    pDot_not: String
    # pDot_not_contains
    pDot_not_contains: String
    # pDot_not_ends_with
    pDot_not_ends_with: String
    # pDot_not_in
    pDot_not_in: [String!]
    # pDot_not_starts_with
    pDot_not_starts_with: String
    # pDot_starts_with
    pDot_starts_with: String
    # proteinEffect
    proteinEffect: _EditableProteinEffectFilter
    # proteinEffect_in
    proteinEffect_in: _EditableProteinEffectFilter
    # proteinEffect_not
    proteinEffect_not: _EditableProteinEffectFilter
    # proteinEffect_not_in
    proteinEffect_not_in: _EditableProteinEffectFilter
    # transcript
    transcript: _EditableStatementFilter
    # transcript_in
    transcript_in: _EditableStatementFilter
    # transcript_not
    transcript_not: _EditableStatementFilter
    # transcript_not_in
    transcript_not_in: _EditableStatementFilter
    # variantType
    variantType: String
    # variantType_contains
    variantType_contains: String
    # variantType_ends_with
    variantType_ends_with: String
    # variantType_gt
    variantType_gt: String
    # variantType_gte
    variantType_gte: String
    # variantType_in
    variantType_in: [String!]
    # variantType_lt
    variantType_lt: String
    # variantType_lte
    variantType_lte: String
    # variantType_not
    variantType_not: String
    # variantType_not_contains
    variantType_not_contains: String
    # variantType_not_ends_with
    variantType_not_ends_with: String
    # variantType_not_in
    variantType_not_in: [String!]
    # variantType_not_starts_with
    variantType_not_starts_with: String
    # variantType_starts_with
    variantType_starts_with: String
}

# Ordering Enum for JaxVariant
enum _JaxVariantOrdering {
    # Ascending sort for cDot
    cDot_asc
    # Descending sort for cDot
    cDot_desc
    # Ascending sort for gDot
    gDot_asc
    # Descending sort for gDot
    gDot_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for jaxId
    jaxId_asc
    # Descending sort for jaxId
    jaxId_desc
    # Ascending sort for name
    name_asc
    # Descending sort for name
    name_desc
    # Ascending sort for pDot
    pDot_asc
    # Descending sort for pDot
    pDot_desc
    # Ascending sort for variantType
    variantType_asc
    # Descending sort for variantType
    variantType_desc
}

# Filter Input Type for Journal
input _JournalFilter {
    # AND
    AND: [_JournalFilter!]
    # OR
    OR: [_JournalFilter!]
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: String
    # name_contains
    name_contains: String
    # name_ends_with
    name_ends_with: String
    # name_gt
    name_gt: String
    # name_gte
    name_gte: String
    # name_in
    name_in: [String!]
    # name_lt
    name_lt: String
    # name_lte
    name_lte: String
    # name_not
    name_not: String
    # name_not_contains
    name_not_contains: String
    # name_not_ends_with
    name_not_ends_with: String
    # name_not_in
    name_not_in: [String!]
    # name_not_starts_with
    name_not_starts_with: String
    # name_starts_with
    name_starts_with: String
}

# Ordering Enum for Journal
enum _JournalOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for name
    name_asc
    # Descending sort for name
    name_desc
}

# Filter Input Type for LiteratureReference
input _LiteratureReferenceFilter {
    # AND
    AND: [_LiteratureReferenceFilter!]
    # DOI
    DOI: String
    # DOI_contains
    DOI_contains: String
    # DOI_ends_with
    DOI_ends_with: String
    # DOI_gt
    DOI_gt: String
    # DOI_gte
    DOI_gte: String
    # DOI_in
    DOI_in: [String!]
    # DOI_lt
    DOI_lt: String
    # DOI_lte
    DOI_lte: String
    # DOI_not
    DOI_not: String
    # DOI_not_contains
    DOI_not_contains: String
    # DOI_not_ends_with
    DOI_not_ends_with: String
    # DOI_not_in
    DOI_not_in: [String!]
    # DOI_not_starts_with
    DOI_not_starts_with: String
    # DOI_starts_with
    DOI_starts_with: String
    # OR
    OR: [_LiteratureReferenceFilter!]
    # PMID
    PMID: String
    # PMID_contains
    PMID_contains: String
    # PMID_ends_with
    PMID_ends_with: String
    # PMID_gt
    PMID_gt: String
    # PMID_gte
    PMID_gte: String
    # PMID_in
    PMID_in: [String!]
    # PMID_lt
    PMID_lt: String
    # PMID_lte
    PMID_lte: String
    # PMID_not
    PMID_not: String
    # PMID_not_contains
    PMID_not_contains: String
    # PMID_not_ends_with
    PMID_not_ends_with: String
    # PMID_not_in
    PMID_not_in: [String!]
    # PMID_not_starts_with
    PMID_not_starts_with: String
    # PMID_starts_with
    PMID_starts_with: String
    # abstract
    abstract: String
    # abstract_contains
    abstract_contains: String
    # abstract_ends_with
    abstract_ends_with: String
    # abstract_gt
    abstract_gt: String
    # abstract_gte
    abstract_gte: String
    # abstract_in
    abstract_in: [String!]
    # abstract_lt
    abstract_lt: String
    # abstract_lte
    abstract_lte: String
    # abstract_not
    abstract_not: String
    # abstract_not_contains
    abstract_not_contains: String
    # abstract_not_ends_with
    abstract_not_ends_with: String
    # abstract_not_in
    abstract_not_in: [String!]
    # abstract_not_starts_with
    abstract_not_starts_with: String
    # abstract_starts_with
    abstract_starts_with: String
    # authors
    authors: _AuthorFilter
    # authors_every
    authors_every: _AuthorFilter
    # authors_in
    authors_in: _AuthorFilter
    # authors_none
    authors_none: _AuthorFilter
    # authors_not
    authors_not: _AuthorFilter
    # authors_not_in
    authors_not_in: _AuthorFilter
    # authors_single
    authors_single: _AuthorFilter
    # authors_some
    authors_some: _AuthorFilter
    # firstPage
    firstPage: String
    # firstPage_contains
    firstPage_contains: String
    # firstPage_ends_with
    firstPage_ends_with: String
    # firstPage_gt
    firstPage_gt: String
    # firstPage_gte
    firstPage_gte: String
    # firstPage_in
    firstPage_in: [String!]
    # firstPage_lt
    firstPage_lt: String
    # firstPage_lte
    firstPage_lte: String
    # firstPage_not
    firstPage_not: String
    # firstPage_not_contains
    firstPage_not_contains: String
    # firstPage_not_ends_with
    firstPage_not_ends_with: String
    # firstPage_not_in
    firstPage_not_in: [String!]
    # firstPage_not_starts_with
    firstPage_not_starts_with: String
    # firstPage_starts_with
    firstPage_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # journal
    journal: _JournalFilter
    # journal_in
    journal_in: _JournalFilter
    # journal_not
    journal_not: _JournalFilter
    # journal_not_in
    journal_not_in: _JournalFilter
    # lastPage
    lastPage: String
    # lastPage_contains
    lastPage_contains: String
    # lastPage_ends_with
    lastPage_ends_with: String
    # lastPage_gt
    lastPage_gt: String
    # lastPage_gte
    lastPage_gte: String
    # lastPage_in
    lastPage_in: [String!]
    # lastPage_lt
    lastPage_lt: String
    # lastPage_lte
    lastPage_lte: String
    # lastPage_not
    lastPage_not: String
    # lastPage_not_contains
    lastPage_not_contains: String
    # lastPage_not_ends_with
    lastPage_not_ends_with: String
    # lastPage_not_in
    lastPage_not_in: [String!]
    # lastPage_not_starts_with
    lastPage_not_starts_with: String
    # lastPage_starts_with
    lastPage_starts_with: String
    # publicationYear
    publicationYear: String
    # publicationYear_contains
    publicationYear_contains: String
    # publicationYear_ends_with
    publicationYear_ends_with: String
    # publicationYear_gt
    publicationYear_gt: String
    # publicationYear_gte
    publicationYear_gte: String
    # publicationYear_in
    publicationYear_in: [String!]
    # publicationYear_lt
    publicationYear_lt: String
    # publicationYear_lte
    publicationYear_lte: String
    # publicationYear_not
    publicationYear_not: String
    # publicationYear_not_contains
    publicationYear_not_contains: String
    # publicationYear_not_ends_with
    publicationYear_not_ends_with: String
    # publicationYear_not_in
    publicationYear_not_in: [String!]
    # publicationYear_not_starts_with
    publicationYear_not_starts_with: String
    # publicationYear_starts_with
    publicationYear_starts_with: String
    # shortReference
    shortReference: String
    # shortReference_contains
    shortReference_contains: String
    # shortReference_ends_with
    shortReference_ends_with: String
    # shortReference_gt
    shortReference_gt: String
    # shortReference_gte
    shortReference_gte: String
    # shortReference_in
    shortReference_in: [String!]
    # shortReference_lt
    shortReference_lt: String
    # shortReference_lte
    shortReference_lte: String
    # shortReference_not
    shortReference_not: String
    # shortReference_not_contains
    shortReference_not_contains: String
    # shortReference_not_ends_with
    shortReference_not_ends_with: String
    # shortReference_not_in
    shortReference_not_in: [String!]
    # shortReference_not_starts_with
    shortReference_not_starts_with: String
    # shortReference_starts_with
    shortReference_starts_with: String
    # statementsReferenced
    statementsReferenced: _EditableObjectFilter
    # statementsReferenced_every
    statementsReferenced_every: _EditableObjectFilter
    # statementsReferenced_in
    statementsReferenced_in: _EditableObjectFilter
    # statementsReferenced_none
    statementsReferenced_none: _EditableObjectFilter
    # statementsReferenced_not
    statementsReferenced_not: _EditableObjectFilter
    # statementsReferenced_not_in
    statementsReferenced_not_in: _EditableObjectFilter
    # statementsReferenced_single
    statementsReferenced_single: _EditableObjectFilter
    # statementsReferenced_some
    statementsReferenced_some: _EditableObjectFilter
    # title
    title: String
    # title_contains
    title_contains: String
    # title_ends_with
    title_ends_with: String
    # title_gt
    title_gt: String
    # title_gte
    title_gte: String
    # title_in
    title_in: [String!]
    # title_lt
    title_lt: String
    # title_lte
    title_lte: String
    # title_not
    title_not: String
    # title_not_contains
    title_not_contains: String
    # title_not_ends_with
    title_not_ends_with: String
    # title_not_in
    title_not_in: [String!]
    # title_not_starts_with
    title_not_starts_with: String
    # title_starts_with
    title_starts_with: String
    # volume
    volume: String
    # volume_contains
    volume_contains: String
    # volume_ends_with
    volume_ends_with: String
    # volume_gt
    volume_gt: String
    # volume_gte
    volume_gte: String
    # volume_in
    volume_in: [String!]
    # volume_lt
    volume_lt: String
    # volume_lte
    volume_lte: String
    # volume_not
    volume_not: String
    # volume_not_contains
    volume_not_contains: String
    # volume_not_ends_with
    volume_not_ends_with: String
    # volume_not_in
    volume_not_in: [String!]
    # volume_not_starts_with
    volume_not_starts_with: String
    # volume_starts_with
    volume_starts_with: String
}

# Ordering Enum for LiteratureReference
enum _LiteratureReferenceOrdering {
    # Ascending sort for DOI
    DOI_asc
    # Descending sort for DOI
    DOI_desc
    # Ascending sort for PMID
    PMID_asc
    # Descending sort for PMID
    PMID_desc
    # Ascending sort for abstract
    abstract_asc
    # Descending sort for abstract
    abstract_desc
    # Ascending sort for firstPage
    firstPage_asc
    # Descending sort for firstPage
    firstPage_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for lastPage
    lastPage_asc
    # Descending sort for lastPage
    lastPage_desc
    # Ascending sort for publicationYear
    publicationYear_asc
    # Descending sort for publicationYear
    publicationYear_desc
    # Ascending sort for shortReference
    shortReference_asc
    # Descending sort for shortReference
    shortReference_desc
    # Ascending sort for title
    title_asc
    # Descending sort for title
    title_desc
    # Ascending sort for volume
    volume_asc
    # Descending sort for volume
    volume_desc
}

# Filter Input Type for MarkerComponent
input _MarkerComponentFilter {
    # AND
    AND: [_MarkerComponentFilter!]
    # OR
    OR: [_MarkerComponentFilter!]
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # method
    method: _EditableStatementFilter
    # method_in
    method_in: _EditableStatementFilter
    # method_not
    method_not: _EditableStatementFilter
    # method_not_in
    method_not_in: _EditableStatementFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # resultString
    resultString: _EditableStatementFilter
    # resultString_in
    resultString_in: _EditableStatementFilter
    # resultString_not
    resultString_not: _EditableStatementFilter
    # resultString_not_in
    resultString_not_in: _EditableStatementFilter
}

# Ordering Enum for MarkerComponent
enum _MarkerComponentOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for MarkerProfile
input _MarkerProfileFilter {
    # AND
    AND: [_MarkerProfileFilter!]
    # OR
    OR: [_MarkerProfileFilter!]
    # components
    components: _EditableMarkerComponentListFilter
    # components_in
    components_in: _EditableMarkerComponentListFilter
    # components_not
    components_not: _EditableMarkerComponentListFilter
    # components_not_in
    components_not_in: _EditableMarkerComponentListFilter
    # conjunction
    conjunction: _EditableOmniConjunctionFilter
    # conjunction_in
    conjunction_in: _EditableOmniConjunctionFilter
    # conjunction_not
    conjunction_not: _EditableOmniConjunctionFilter
    # conjunction_not_in
    conjunction_not_in: _EditableOmniConjunctionFilter
    # evidenceAssociations
    evidenceAssociations: _EvidenceAssociationFilter
    # evidenceAssociations_every
    evidenceAssociations_every: _EvidenceAssociationFilter
    # evidenceAssociations_in
    evidenceAssociations_in: _EvidenceAssociationFilter
    # evidenceAssociations_none
    evidenceAssociations_none: _EvidenceAssociationFilter
    # evidenceAssociations_not
    evidenceAssociations_not: _EvidenceAssociationFilter
    # evidenceAssociations_not_in
    evidenceAssociations_not_in: _EvidenceAssociationFilter
    # evidenceAssociations_single
    evidenceAssociations_single: _EvidenceAssociationFilter
    # evidenceAssociations_some
    evidenceAssociations_some: _EvidenceAssociationFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # method
    method: _EditableStatementFilter
    # method_in
    method_in: _EditableStatementFilter
    # method_not
    method_not: _EditableStatementFilter
    # method_not_in
    method_not_in: _EditableStatementFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # resultString
    resultString: _EditableStatementFilter
    # resultString_in
    resultString_in: _EditableStatementFilter
    # resultString_not
    resultString_not: _EditableStatementFilter
    # resultString_not_in
    resultString_not_in: _EditableStatementFilter
}

# Ordering Enum for MarkerProfile
enum _MarkerProfileOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for MCode
input _MCodeFilter {
    # AND
    AND: [_MCodeFilter!]
    # OR
    OR: [_MCodeFilter!]
    # active
    active: _EditableBooleanFilter
    # active_in
    active_in: _EditableBooleanFilter
    # active_not
    active_not: _EditableBooleanFilter
    # active_not_in
    active_not_in: _EditableBooleanFilter
    # children
    children: _MCodeFilter
    # children_every
    children_every: _MCodeFilter
    # children_in
    children_in: _MCodeFilter
    # children_none
    children_none: _MCodeFilter
    # children_not
    children_not: _MCodeFilter
    # children_not_in
    children_not_in: _MCodeFilter
    # children_single
    children_single: _MCodeFilter
    # children_some
    children_some: _MCodeFilter
    # diseasePath
    diseasePath: _EditableStatementFilter
    # diseasePath_in
    diseasePath_in: _EditableStatementFilter
    # diseasePath_not
    diseasePath_not: _EditableStatementFilter
    # diseasePath_not_in
    diseasePath_not_in: _EditableStatementFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # mcodeId
    mcodeId: String
    # mcodeId_contains
    mcodeId_contains: String
    # mcodeId_ends_with
    mcodeId_ends_with: String
    # mcodeId_gt
    mcodeId_gt: String
    # mcodeId_gte
    mcodeId_gte: String
    # mcodeId_in
    mcodeId_in: [String!]
    # mcodeId_lt
    mcodeId_lt: String
    # mcodeId_lte
    mcodeId_lte: String
    # mcodeId_not
    mcodeId_not: String
    # mcodeId_not_contains
    mcodeId_not_contains: String
    # mcodeId_not_ends_with
    mcodeId_not_ends_with: String
    # mcodeId_not_in
    mcodeId_not_in: [String!]
    # mcodeId_not_starts_with
    mcodeId_not_starts_with: String
    # mcodeId_starts_with
    mcodeId_starts_with: String
    # omniDisease
    omniDisease: _OmniDiseaseFilter
    # omniDisease_in
    omniDisease_in: _OmniDiseaseFilter
    # omniDisease_not
    omniDisease_not: _OmniDiseaseFilter
    # omniDisease_not_in
    omniDisease_not_in: _OmniDiseaseFilter
    # parents
    parents: _MCodeFilter
    # parents_every
    parents_every: _MCodeFilter
    # parents_in
    parents_in: _MCodeFilter
    # parents_none
    parents_none: _MCodeFilter
    # parents_not
    parents_not: _MCodeFilter
    # parents_not_in
    parents_not_in: _MCodeFilter
    # parents_single
    parents_single: _MCodeFilter
    # parents_some
    parents_some: _MCodeFilter
}

# Ordering Enum for MCode
enum _MCodeOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for mcodeId
    mcodeId_asc
    # Descending sort for mcodeId
    mcodeId_desc
}

# Filter Input Type for MeetingAbstractReference
input _MeetingAbstractReferenceFilter {
    # AND
    AND: [_MeetingAbstractReferenceFilter!]
    # OR
    OR: [_MeetingAbstractReferenceFilter!]
    # abstract
    abstract: String
    # abstract_contains
    abstract_contains: String
    # abstract_ends_with
    abstract_ends_with: String
    # abstract_gt
    abstract_gt: String
    # abstract_gte
    abstract_gte: String
    # abstract_in
    abstract_in: [String!]
    # abstract_lt
    abstract_lt: String
    # abstract_lte
    abstract_lte: String
    # abstract_not
    abstract_not: String
    # abstract_not_contains
    abstract_not_contains: String
    # abstract_not_ends_with
    abstract_not_ends_with: String
    # abstract_not_in
    abstract_not_in: [String!]
    # abstract_not_starts_with
    abstract_not_starts_with: String
    # abstract_starts_with
    abstract_starts_with: String
    # authors
    authors: _AuthorFilter
    # authors_every
    authors_every: _AuthorFilter
    # authors_in
    authors_in: _AuthorFilter
    # authors_none
    authors_none: _AuthorFilter
    # authors_not
    authors_not: _AuthorFilter
    # authors_not_in
    authors_not_in: _AuthorFilter
    # authors_single
    authors_single: _AuthorFilter
    # authors_some
    authors_some: _AuthorFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # meetingDate
    meetingDate: String
    # meetingDate_contains
    meetingDate_contains: String
    # meetingDate_ends_with
    meetingDate_ends_with: String
    # meetingDate_gt
    meetingDate_gt: String
    # meetingDate_gte
    meetingDate_gte: String
    # meetingDate_in
    meetingDate_in: [String!]
    # meetingDate_lt
    meetingDate_lt: String
    # meetingDate_lte
    meetingDate_lte: String
    # meetingDate_not
    meetingDate_not: String
    # meetingDate_not_contains
    meetingDate_not_contains: String
    # meetingDate_not_ends_with
    meetingDate_not_ends_with: String
    # meetingDate_not_in
    meetingDate_not_in: [String!]
    # meetingDate_not_starts_with
    meetingDate_not_starts_with: String
    # meetingDate_starts_with
    meetingDate_starts_with: String
    # meetingName
    meetingName: String
    # meetingName_contains
    meetingName_contains: String
    # meetingName_ends_with
    meetingName_ends_with: String
    # meetingName_gt
    meetingName_gt: String
    # meetingName_gte
    meetingName_gte: String
    # meetingName_in
    meetingName_in: [String!]
    # meetingName_lt
    meetingName_lt: String
    # meetingName_lte
    meetingName_lte: String
    # meetingName_not
    meetingName_not: String
    # meetingName_not_contains
    meetingName_not_contains: String
    # meetingName_not_ends_with
    meetingName_not_ends_with: String
    # meetingName_not_in
    meetingName_not_in: [String!]
    # meetingName_not_starts_with
    meetingName_not_starts_with: String
    # meetingName_starts_with
    meetingName_starts_with: String
    # shortReference
    shortReference: String
    # shortReference_contains
    shortReference_contains: String
    # shortReference_ends_with
    shortReference_ends_with: String
    # shortReference_gt
    shortReference_gt: String
    # shortReference_gte
    shortReference_gte: String
    # shortReference_in
    shortReference_in: [String!]
    # shortReference_lt
    shortReference_lt: String
    # shortReference_lte
    shortReference_lte: String
    # shortReference_not
    shortReference_not: String
    # shortReference_not_contains
    shortReference_not_contains: String
    # shortReference_not_ends_with
    shortReference_not_ends_with: String
    # shortReference_not_in
    shortReference_not_in: [String!]
    # shortReference_not_starts_with
    shortReference_not_starts_with: String
    # shortReference_starts_with
    shortReference_starts_with: String
    # statementsReferenced
    statementsReferenced: _EditableObjectFilter
    # statementsReferenced_every
    statementsReferenced_every: _EditableObjectFilter
    # statementsReferenced_in
    statementsReferenced_in: _EditableObjectFilter
    # statementsReferenced_none
    statementsReferenced_none: _EditableObjectFilter
    # statementsReferenced_not
    statementsReferenced_not: _EditableObjectFilter
    # statementsReferenced_not_in
    statementsReferenced_not_in: _EditableObjectFilter
    # statementsReferenced_single
    statementsReferenced_single: _EditableObjectFilter
    # statementsReferenced_some
    statementsReferenced_some: _EditableObjectFilter
    # title
    title: String
    # title_contains
    title_contains: String
    # title_ends_with
    title_ends_with: String
    # title_gt
    title_gt: String
    # title_gte
    title_gte: String
    # title_in
    title_in: [String!]
    # title_lt
    title_lt: String
    # title_lte
    title_lte: String
    # title_not
    title_not: String
    # title_not_contains
    title_not_contains: String
    # title_not_ends_with
    title_not_ends_with: String
    # title_not_in
    title_not_in: [String!]
    # title_not_starts_with
    title_not_starts_with: String
    # title_starts_with
    title_starts_with: String
}

# Ordering Enum for MeetingAbstractReference
enum _MeetingAbstractReferenceOrdering {
    # Ascending sort for abstract
    abstract_asc
    # Descending sort for abstract
    abstract_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for meetingDate
    meetingDate_asc
    # Descending sort for meetingDate
    meetingDate_desc
    # Ascending sort for meetingName
    meetingName_asc
    # Descending sort for meetingName
    meetingName_desc
    # Ascending sort for shortReference
    shortReference_asc
    # Descending sort for shortReference
    shortReference_desc
    # Ascending sort for title
    title_asc
    # Descending sort for title
    title_desc
}

# Filter Input Type for MSIMarker
input _MSIMarkerFilter {
    # AND
    AND: [_MSIMarkerFilter!]
    # OR
    OR: [_MSIMarkerFilter!]
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # method
    method: _EditableStatementFilter
    # method_in
    method_in: _EditableStatementFilter
    # method_not
    method_not: _EditableStatementFilter
    # method_not_in
    method_not_in: _EditableStatementFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # resultString
    resultString: _EditableStatementFilter
    # resultString_in
    resultString_in: _EditableStatementFilter
    # resultString_not
    resultString_not: _EditableStatementFilter
    # resultString_not_in
    resultString_not_in: _EditableStatementFilter
}

# Ordering Enum for MSIMarker
enum _MSIMarkerOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for MyGeneInfoGene
input _MyGeneInfoGeneFilter {
    # AND
    AND: [_MyGeneInfoGeneFilter!]
    # OR
    OR: [_MyGeneInfoGeneFilter!]
    # chromosome
    chromosome: String
    # chromosome_contains
    chromosome_contains: String
    # chromosome_ends_with
    chromosome_ends_with: String
    # chromosome_gt
    chromosome_gt: String
    # chromosome_gte
    chromosome_gte: String
    # chromosome_in
    chromosome_in: [String!]
    # chromosome_lt
    chromosome_lt: String
    # chromosome_lte
    chromosome_lte: String
    # chromosome_not
    chromosome_not: String
    # chromosome_not_contains
    chromosome_not_contains: String
    # chromosome_not_ends_with
    chromosome_not_ends_with: String
    # chromosome_not_in
    chromosome_not_in: [String!]
    # chromosome_not_starts_with
    chromosome_not_starts_with: String
    # chromosome_starts_with
    chromosome_starts_with: String
    # description
    description: _EditableStatementFilter
    # description_in
    description_in: _EditableStatementFilter
    # description_not
    description_not: _EditableStatementFilter
    # description_not_in
    description_not_in: _EditableStatementFilter
    # end
    end: Int
    # end_gt
    end_gt: Int
    # end_gte
    end_gte: Int
    # end_in
    end_in: [Int!]
    # end_lt
    end_lt: Int
    # end_lte
    end_lte: Int
    # end_not
    end_not: Int
    # end_not_in
    end_not_in: [Int!]
    # entrezId
    entrezId: String
    # entrezId_contains
    entrezId_contains: String
    # entrezId_ends_with
    entrezId_ends_with: String
    # entrezId_gt
    entrezId_gt: String
    # entrezId_gte
    entrezId_gte: String
    # entrezId_in
    entrezId_in: [String!]
    # entrezId_lt
    entrezId_lt: String
    # entrezId_lte
    entrezId_lte: String
    # entrezId_not
    entrezId_not: String
    # entrezId_not_contains
    entrezId_not_contains: String
    # entrezId_not_ends_with
    entrezId_not_ends_with: String
    # entrezId_not_in
    entrezId_not_in: [String!]
    # entrezId_not_starts_with
    entrezId_not_starts_with: String
    # entrezId_starts_with
    entrezId_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: String
    # name_contains
    name_contains: String
    # name_ends_with
    name_ends_with: String
    # name_gt
    name_gt: String
    # name_gte
    name_gte: String
    # name_in
    name_in: [String!]
    # name_lt
    name_lt: String
    # name_lte
    name_lte: String
    # name_not
    name_not: String
    # name_not_contains
    name_not_contains: String
    # name_not_ends_with
    name_not_ends_with: String
    # name_not_in
    name_not_in: [String!]
    # name_not_starts_with
    name_not_starts_with: String
    # name_starts_with
    name_starts_with: String
    # start
    start: Int
    # start_gt
    start_gt: Int
    # start_gte
    start_gte: Int
    # start_in
    start_in: [Int!]
    # start_lt
    start_lt: Int
    # start_lte
    start_lte: Int
    # start_not
    start_not: Int
    # start_not_in
    start_not_in: [Int!]
    # strand
    strand: Strand
    # strand_in
    strand_in: [Strand!]
    # strand_not
    strand_not: Strand
    # strand_not_in
    strand_not_in: [Strand!]
    # uniprotEntry
    uniprotEntry: _UniprotEntryFilter
    # uniprotEntry_in
    uniprotEntry_in: _UniprotEntryFilter
    # uniprotEntry_not
    uniprotEntry_not: _UniprotEntryFilter
    # uniprotEntry_not_in
    uniprotEntry_not_in: _UniprotEntryFilter
}

# Ordering Enum for MyGeneInfoGene
enum _MyGeneInfoGeneOrdering {
    # Ascending sort for chromosome
    chromosome_asc
    # Descending sort for chromosome
    chromosome_desc
    # Ascending sort for end
    end_asc
    # Descending sort for end
    end_desc
    # Ascending sort for entrezId
    entrezId_asc
    # Descending sort for entrezId
    entrezId_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for name
    name_asc
    # Descending sort for name
    name_desc
    # Ascending sort for start
    start_asc
    # Descending sort for start
    start_desc
    # Ascending sort for strand
    strand_asc
    # Descending sort for strand
    strand_desc
}

# Filter Input Type for NCIDrug
input _NCIDrugFilter {
    # AND
    AND: [_NCIDrugFilter!]
    # OR
    OR: [_NCIDrugFilter!]
    # annotationDate
    annotationDate: _EditableStatementFilter
    # annotationDate_in
    annotationDate_in: _EditableStatementFilter
    # annotationDate_not
    annotationDate_not: _EditableStatementFilter
    # annotationDate_not_in
    annotationDate_not_in: _EditableStatementFilter
    # conceptCode
    conceptCode: _EditableStatementFilter
    # conceptCode_in
    conceptCode_in: _EditableStatementFilter
    # conceptCode_not
    conceptCode_not: _EditableStatementFilter
    # conceptCode_not_in
    conceptCode_not_in: _EditableStatementFilter
    # definition
    definition: _EditableStatementFilter
    # definition_in
    definition_in: _EditableStatementFilter
    # definition_not
    definition_not: _EditableStatementFilter
    # definition_not_in
    definition_not_in: _EditableStatementFilter
    # drugCategory
    drugCategory: _EditableStatementFilter
    # drugCategory_in
    drugCategory_in: _EditableStatementFilter
    # drugCategory_not
    drugCategory_not: _EditableStatementFilter
    # drugCategory_not_in
    drugCategory_not_in: _EditableStatementFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # isAntineoplastic
    isAntineoplastic: Boolean
    # isAntineoplastic_not
    isAntineoplastic_not: Boolean
    # isImmuno
    isImmuno: Boolean
    # isImmuno_not
    isImmuno_not: Boolean
    # modulator
    modulator: _EditableStatementFilter
    # modulator_in
    modulator_in: _EditableStatementFilter
    # modulator_not
    modulator_not: _EditableStatementFilter
    # modulator_not_in
    modulator_not_in: _EditableStatementFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # synonyms
    synonyms: _EditableStringListFilter
    # synonyms_in
    synonyms_in: _EditableStringListFilter
    # synonyms_not
    synonyms_not: _EditableStringListFilter
    # synonyms_not_in
    synonyms_not_in: _EditableStringListFilter
}

# Ordering Enum for NCIDrug
enum _NCIDrugOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for isAntineoplastic
    isAntineoplastic_asc
    # Descending sort for isAntineoplastic
    isAntineoplastic_desc
    # Ascending sort for isImmuno
    isImmuno_asc
    # Descending sort for isImmuno
    isImmuno_desc
}

# Filter Input Type for OmniDisease
input _OmniDiseaseFilter {
    # AND
    AND: [_OmniDiseaseFilter!]
    # OR
    OR: [_OmniDiseaseFilter!]
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # omniDiseaseId
    omniDiseaseId: String
    # omniDiseaseId_contains
    omniDiseaseId_contains: String
    # omniDiseaseId_ends_with
    omniDiseaseId_ends_with: String
    # omniDiseaseId_gt
    omniDiseaseId_gt: String
    # omniDiseaseId_gte
    omniDiseaseId_gte: String
    # omniDiseaseId_in
    omniDiseaseId_in: [String!]
    # omniDiseaseId_lt
    omniDiseaseId_lt: String
    # omniDiseaseId_lte
    omniDiseaseId_lte: String
    # omniDiseaseId_not
    omniDiseaseId_not: String
    # omniDiseaseId_not_contains
    omniDiseaseId_not_contains: String
    # omniDiseaseId_not_ends_with
    omniDiseaseId_not_ends_with: String
    # omniDiseaseId_not_in
    omniDiseaseId_not_in: [String!]
    # omniDiseaseId_not_starts_with
    omniDiseaseId_not_starts_with: String
    # omniDiseaseId_starts_with
    omniDiseaseId_starts_with: String
    # omniDiseaseType
    omniDiseaseType: OmniDiseaseType
    # omniDiseaseType_in
    omniDiseaseType_in: [OmniDiseaseType!]
    # omniDiseaseType_not
    omniDiseaseType_not: OmniDiseaseType
    # omniDiseaseType_not_in
    omniDiseaseType_not_in: [OmniDiseaseType!]
}

# Ordering Enum for OmniDisease
enum _OmniDiseaseOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for omniDiseaseId
    omniDiseaseId_asc
    # Descending sort for omniDiseaseId
    omniDiseaseId_desc
    # Ascending sort for omniDiseaseType
    omniDiseaseType_asc
    # Descending sort for omniDiseaseType
    omniDiseaseType_desc
}

# Filter Input Type for OmniDrug
input _OmniDrugFilter {
    # AND
    AND: [_OmniDrugFilter!]
    # OR
    OR: [_OmniDrugFilter!]
    # componentOf
    componentOf: _TherapyFilter
    # componentOf_every
    componentOf_every: _TherapyFilter
    # componentOf_in
    componentOf_in: _TherapyFilter
    # componentOf_none
    componentOf_none: _TherapyFilter
    # componentOf_not
    componentOf_not: _TherapyFilter
    # componentOf_not_in
    componentOf_not_in: _TherapyFilter
    # componentOf_single
    componentOf_single: _TherapyFilter
    # componentOf_some
    componentOf_some: _TherapyFilter
    # definition
    definition: _EditableStatementFilter
    # definition_in
    definition_in: _EditableStatementFilter
    # definition_not
    definition_not: _EditableStatementFilter
    # definition_not_in
    definition_not_in: _EditableStatementFilter
    # drugCategories
    drugCategories: _DrugCategoryFilter
    # drugCategories_every
    drugCategories_every: _DrugCategoryFilter
    # drugCategories_in
    drugCategories_in: _DrugCategoryFilter
    # drugCategories_none
    drugCategories_none: _DrugCategoryFilter
    # drugCategories_not
    drugCategories_not: _DrugCategoryFilter
    # drugCategories_not_in
    drugCategories_not_in: _DrugCategoryFilter
    # drugCategories_single
    drugCategories_single: _DrugCategoryFilter
    # drugCategories_some
    drugCategories_some: _DrugCategoryFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # jaxDrug
    jaxDrug: _JaxDrugFilter
    # jaxDrug_in
    jaxDrug_in: _JaxDrugFilter
    # jaxDrug_not
    jaxDrug_not: _JaxDrugFilter
    # jaxDrug_not_in
    jaxDrug_not_in: _JaxDrugFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # nciDrug
    nciDrug: _NCIDrugFilter
    # nciDrug_in
    nciDrug_in: _NCIDrugFilter
    # nciDrug_not
    nciDrug_not: _NCIDrugFilter
    # nciDrug_not_in
    nciDrug_not_in: _NCIDrugFilter
    # synonyms
    synonyms: _EditableStringListFilter
    # synonyms_in
    synonyms_in: _EditableStringListFilter
    # synonyms_not
    synonyms_not: _EditableStringListFilter
    # synonyms_not_in
    synonyms_not_in: _EditableStringListFilter
    # target
    target: _TargetFilter
    # target_every
    target_every: _TargetFilter
    # target_in
    target_in: _TargetFilter
    # target_none
    target_none: _TargetFilter
    # target_not
    target_not: _TargetFilter
    # target_not_in
    target_not_in: _TargetFilter
    # target_single
    target_single: _TargetFilter
    # target_some
    target_some: _TargetFilter
    # tradeName
    tradeName: _EditableStatementFilter
    # tradeName_in
    tradeName_in: _EditableStatementFilter
    # tradeName_not
    tradeName_not: _EditableStatementFilter
    # tradeName_not_in
    tradeName_not_in: _EditableStatementFilter
}

# Ordering Enum for OmniDrug
enum _OmniDrugOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for OmniGene
input _OmniGeneFilter {
    # AND
    AND: [_OmniGeneFilter!]
    # OR
    OR: [_OmniGeneFilter!]
    # geneDescription
    geneDescription: _EditableStatementFilter
    # geneDescription_in
    geneDescription_in: _EditableStatementFilter
    # geneDescription_not
    geneDescription_not: _EditableStatementFilter
    # geneDescription_not_in
    geneDescription_not_in: _EditableStatementFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # jaxGene
    jaxGene: _JaxGeneFilter
    # jaxGene_in
    jaxGene_in: _JaxGeneFilter
    # jaxGene_not
    jaxGene_not: _JaxGeneFilter
    # jaxGene_not_in
    jaxGene_not_in: _JaxGeneFilter
    # myGeneInfoGene
    myGeneInfoGene: _MyGeneInfoGeneFilter
    # myGeneInfoGene_in
    myGeneInfoGene_in: _MyGeneInfoGeneFilter
    # myGeneInfoGene_not
    myGeneInfoGene_not: _MyGeneInfoGeneFilter
    # myGeneInfoGene_not_in
    myGeneInfoGene_not_in: _MyGeneInfoGeneFilter
    # name
    name: String
    # name_contains
    name_contains: String
    # name_ends_with
    name_ends_with: String
    # name_gt
    name_gt: String
    # name_gte
    name_gte: String
    # name_in
    name_in: [String!]
    # name_lt
    name_lt: String
    # name_lte
    name_lte: String
    # name_not
    name_not: String
    # name_not_contains
    name_not_contains: String
    # name_not_ends_with
    name_not_ends_with: String
    # name_not_in
    name_not_in: [String!]
    # name_not_starts_with
    name_not_starts_with: String
    # name_starts_with
    name_starts_with: String
    # names
    names: String
    # names_contains
    names_contains: String
    # names_ends_with
    names_ends_with: String
    # names_gt
    names_gt: String
    # names_gte
    names_gte: String
    # names_in
    names_in: [String!]
    # names_lt
    names_lt: String
    # names_lte
    names_lte: String
    # names_not
    names_not: String
    # names_not_contains
    names_not_contains: String
    # names_not_ends_with
    names_not_ends_with: String
    # names_not_in
    names_not_in: [String!]
    # names_not_starts_with
    names_not_starts_with: String
    # names_starts_with
    names_starts_with: String
    # oncogenicCategory
    oncogenicCategory: _EditableStatementFilter
    # oncogenicCategory_in
    oncogenicCategory_in: _EditableStatementFilter
    # oncogenicCategory_not
    oncogenicCategory_not: _EditableStatementFilter
    # oncogenicCategory_not_in
    oncogenicCategory_not_in: _EditableStatementFilter
    # panelName
    panelName: _EditableStatementFilter
    # panelName_in
    panelName_in: _EditableStatementFilter
    # panelName_not
    panelName_not: _EditableStatementFilter
    # panelName_not_in
    panelName_not_in: _EditableStatementFilter
    # synonyms
    synonyms: _EditableStringListFilter
    # synonyms_in
    synonyms_in: _EditableStringListFilter
    # synonyms_not
    synonyms_not: _EditableStringListFilter
    # synonyms_not_in
    synonyms_not_in: _EditableStringListFilter
    # transcript
    transcript: _EditableStatementFilter
    # transcript_in
    transcript_in: _EditableStatementFilter
    # transcript_not
    transcript_not: _EditableStatementFilter
    # transcript_not_in
    transcript_not_in: _EditableStatementFilter
    # uniprotEntry
    uniprotEntry: _UniprotEntryFilter
    # uniprotEntry_in
    uniprotEntry_in: _UniprotEntryFilter
    # uniprotEntry_not
    uniprotEntry_not: _UniprotEntryFilter
    # uniprotEntry_not_in
    uniprotEntry_not_in: _UniprotEntryFilter
    # variantMarkers
    variantMarkers: _GenomicVariantMarkerFilter
    # variantMarkers_every
    variantMarkers_every: _GenomicVariantMarkerFilter
    # variantMarkers_in
    variantMarkers_in: _GenomicVariantMarkerFilter
    # variantMarkers_none
    variantMarkers_none: _GenomicVariantMarkerFilter
    # variantMarkers_not
    variantMarkers_not: _GenomicVariantMarkerFilter
    # variantMarkers_not_in
    variantMarkers_not_in: _GenomicVariantMarkerFilter
    # variantMarkers_single
    variantMarkers_single: _GenomicVariantMarkerFilter
    # variantMarkers_some
    variantMarkers_some: _GenomicVariantMarkerFilter
    # variants
    variants: _GenomicVariantFilter
    # variants_every
    variants_every: _GenomicVariantFilter
    # variants_in
    variants_in: _GenomicVariantFilter
    # variants_none
    variants_none: _GenomicVariantFilter
    # variants_not
    variants_not: _GenomicVariantFilter
    # variants_not_in
    variants_not_in: _GenomicVariantFilter
    # variants_single
    variants_single: _GenomicVariantFilter
    # variants_some
    variants_some: _GenomicVariantFilter
}

# Ordering Enum for OmniGene
enum _OmniGeneOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for name
    name_asc
    # Descending sort for name
    name_desc
    # Ascending sort for names
    names_asc
    # Descending sort for names
    names_desc
}

# Filter Input Type for OmniMap
input _OmniMapFilter {
    # AND
    AND: [_OmniMapFilter!]
    # OR
    OR: [_OmniMapFilter!]
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # mCodes
    mCodes: _MCodeFilter
    # mCodes_every
    mCodes_every: _MCodeFilter
    # mCodes_in
    mCodes_in: _MCodeFilter
    # mCodes_none
    mCodes_none: _MCodeFilter
    # mCodes_not
    mCodes_not: _MCodeFilter
    # mCodes_not_in
    mCodes_not_in: _MCodeFilter
    # mCodes_single
    mCodes_single: _MCodeFilter
    # mCodes_some
    mCodes_some: _MCodeFilter
    # omniDisease
    omniDisease: _OmniDiseaseFilter
    # omniDisease_in
    omniDisease_in: _OmniDiseaseFilter
    # omniDisease_not
    omniDisease_not: _OmniDiseaseFilter
    # omniDisease_not_in
    omniDisease_not_in: _OmniDiseaseFilter
}

# Ordering Enum for OmniMap
enum _OmniMapOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for OncoTreeDisease
input _OncoTreeDiseaseFilter {
    # AND
    AND: [_OncoTreeDiseaseFilter!]
    # OR
    OR: [_OncoTreeDiseaseFilter!]
    # children
    children: _OncoTreeDiseaseFilter
    # children_every
    children_every: _OncoTreeDiseaseFilter
    # children_in
    children_in: _OncoTreeDiseaseFilter
    # children_none
    children_none: _OncoTreeDiseaseFilter
    # children_not
    children_not: _OncoTreeDiseaseFilter
    # children_not_in
    children_not_in: _OncoTreeDiseaseFilter
    # children_single
    children_single: _OncoTreeDiseaseFilter
    # children_some
    children_some: _OncoTreeDiseaseFilter
    # code
    code: String
    # code_contains
    code_contains: String
    # code_ends_with
    code_ends_with: String
    # code_gt
    code_gt: String
    # code_gte
    code_gte: String
    # code_in
    code_in: [String!]
    # code_lt
    code_lt: String
    # code_lte
    code_lte: String
    # code_not
    code_not: String
    # code_not_contains
    code_not_contains: String
    # code_not_ends_with
    code_not_ends_with: String
    # code_not_in
    code_not_in: [String!]
    # code_not_starts_with
    code_not_starts_with: String
    # code_starts_with
    code_starts_with: String
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # mainType
    mainType: _EditableStatementFilter
    # mainType_in
    mainType_in: _EditableStatementFilter
    # mainType_not
    mainType_not: _EditableStatementFilter
    # mainType_not_in
    mainType_not_in: _EditableStatementFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # occurrences
    occurrences: _OncoTreeOccurrenceFilter
    # occurrences_every
    occurrences_every: _OncoTreeOccurrenceFilter
    # occurrences_in
    occurrences_in: _OncoTreeOccurrenceFilter
    # occurrences_none
    occurrences_none: _OncoTreeOccurrenceFilter
    # occurrences_not
    occurrences_not: _OncoTreeOccurrenceFilter
    # occurrences_not_in
    occurrences_not_in: _OncoTreeOccurrenceFilter
    # occurrences_single
    occurrences_single: _OncoTreeOccurrenceFilter
    # occurrences_some
    occurrences_some: _OncoTreeOccurrenceFilter
    # parent
    parent: _OncoTreeDiseaseFilter
    # parent_every
    parent_every: _OncoTreeDiseaseFilter
    # parent_in
    parent_in: _OncoTreeDiseaseFilter
    # parent_none
    parent_none: _OncoTreeDiseaseFilter
    # parent_not
    parent_not: _OncoTreeDiseaseFilter
    # parent_not_in
    parent_not_in: _OncoTreeDiseaseFilter
    # parent_single
    parent_single: _OncoTreeDiseaseFilter
    # parent_some
    parent_some: _OncoTreeDiseaseFilter
    # tissue
    tissue: _EditableStatementFilter
    # tissue_in
    tissue_in: _EditableStatementFilter
    # tissue_not
    tissue_not: _EditableStatementFilter
    # tissue_not_in
    tissue_not_in: _EditableStatementFilter
    # xrefs
    xrefs: _EditableXRefListFilter
    # xrefs_in
    xrefs_in: _EditableXRefListFilter
    # xrefs_not
    xrefs_not: _EditableXRefListFilter
    # xrefs_not_in
    xrefs_not_in: _EditableXRefListFilter
}

# Ordering Enum for OncoTreeDisease
enum _OncoTreeDiseaseOrdering {
    # Ascending sort for code
    code_asc
    # Descending sort for code
    code_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for OncoTreeOccurrence
input _OncoTreeOccurrenceFilter {
    # AND
    AND: [_OncoTreeOccurrenceFilter!]
    # OR
    OR: [_OncoTreeOccurrenceFilter!]
    # disease
    disease: _OncoTreeDiseaseFilter
    # disease_in
    disease_in: _OncoTreeDiseaseFilter
    # disease_not
    disease_not: _OncoTreeDiseaseFilter
    # disease_not_in
    disease_not_in: _OncoTreeDiseaseFilter
    # hotSpotVariant
    hotSpotVariant: _HotSpotVariantFilter
    # hotSpotVariant_every
    hotSpotVariant_every: _HotSpotVariantFilter
    # hotSpotVariant_in
    hotSpotVariant_in: _HotSpotVariantFilter
    # hotSpotVariant_none
    hotSpotVariant_none: _HotSpotVariantFilter
    # hotSpotVariant_not
    hotSpotVariant_not: _HotSpotVariantFilter
    # hotSpotVariant_not_in
    hotSpotVariant_not_in: _HotSpotVariantFilter
    # hotSpotVariant_single
    hotSpotVariant_single: _HotSpotVariantFilter
    # hotSpotVariant_some
    hotSpotVariant_some: _HotSpotVariantFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # occurrences
    occurrences: _EditableIntFilter
    # occurrences_in
    occurrences_in: _EditableIntFilter
    # occurrences_not
    occurrences_not: _EditableIntFilter
    # occurrences_not_in
    occurrences_not_in: _EditableIntFilter
    # oncoTreeCode
    oncoTreeCode: String
    # oncoTreeCode_contains
    oncoTreeCode_contains: String
    # oncoTreeCode_ends_with
    oncoTreeCode_ends_with: String
    # oncoTreeCode_gt
    oncoTreeCode_gt: String
    # oncoTreeCode_gte
    oncoTreeCode_gte: String
    # oncoTreeCode_in
    oncoTreeCode_in: [String!]
    # oncoTreeCode_lt
    oncoTreeCode_lt: String
    # oncoTreeCode_lte
    oncoTreeCode_lte: String
    # oncoTreeCode_not
    oncoTreeCode_not: String
    # oncoTreeCode_not_contains
    oncoTreeCode_not_contains: String
    # oncoTreeCode_not_ends_with
    oncoTreeCode_not_ends_with: String
    # oncoTreeCode_not_in
    oncoTreeCode_not_in: [String!]
    # oncoTreeCode_not_starts_with
    oncoTreeCode_not_starts_with: String
    # oncoTreeCode_starts_with
    oncoTreeCode_starts_with: String
    # perThousandOccurrence
    perThousandOccurrence: Int
    # perThousandOccurrence_gt
    perThousandOccurrence_gt: Int
    # perThousandOccurrence_gte
    perThousandOccurrence_gte: Int
    # perThousandOccurrence_in
    perThousandOccurrence_in: [Int!]
    # perThousandOccurrence_lt
    perThousandOccurrence_lt: Int
    # perThousandOccurrence_lte
    perThousandOccurrence_lte: Int
    # perThousandOccurrence_not
    perThousandOccurrence_not: Int
    # perThousandOccurrence_not_in
    perThousandOccurrence_not_in: [Int!]
    # percentOccurrence
    percentOccurrence: _EditableStatementFilter
    # percentOccurrence_in
    percentOccurrence_in: _EditableStatementFilter
    # percentOccurrence_not
    percentOccurrence_not: _EditableStatementFilter
    # percentOccurrence_not_in
    percentOccurrence_not_in: _EditableStatementFilter
    # totalSamples
    totalSamples: _EditableIntFilter
    # totalSamples_in
    totalSamples_in: _EditableIntFilter
    # totalSamples_not
    totalSamples_not: _EditableIntFilter
    # totalSamples_not_in
    totalSamples_not_in: _EditableIntFilter
}

# Ordering Enum for OncoTreeOccurrence
enum _OncoTreeOccurrenceOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for oncoTreeCode
    oncoTreeCode_asc
    # Descending sort for oncoTreeCode
    oncoTreeCode_desc
    # Ascending sort for perThousandOccurrence
    perThousandOccurrence_asc
    # Descending sort for perThousandOccurrence
    perThousandOccurrence_desc
}

# Filter Input Type for OntologicalDisease
input _OntologicalDiseaseFilter {
    # AND
    AND: [_OntologicalDiseaseFilter!]
    # OR
    OR: [_OntologicalDiseaseFilter!]
    # children
    children: _OntologicalDiseaseFilter
    # children_every
    children_every: _OntologicalDiseaseFilter
    # children_in
    children_in: _OntologicalDiseaseFilter
    # children_none
    children_none: _OntologicalDiseaseFilter
    # children_not
    children_not: _OntologicalDiseaseFilter
    # children_not_in
    children_not_in: _OntologicalDiseaseFilter
    # children_single
    children_single: _OntologicalDiseaseFilter
    # children_some
    children_some: _OntologicalDiseaseFilter
    # description
    description: _EditableStatementFilter
    # description_in
    description_in: _EditableStatementFilter
    # description_not
    description_not: _EditableStatementFilter
    # description_not_in
    description_not_in: _EditableStatementFilter
    # doDiseases
    doDiseases: _EditableDODiseaseListFilter
    # doDiseases_in
    doDiseases_in: _EditableDODiseaseListFilter
    # doDiseases_not
    doDiseases_not: _EditableDODiseaseListFilter
    # doDiseases_not_in
    doDiseases_not_in: _EditableDODiseaseListFilter
    # goDiseases
    goDiseases: _EditableGODiseaseListFilter
    # goDiseases_in
    goDiseases_in: _EditableGODiseaseListFilter
    # goDiseases_not
    goDiseases_not: _EditableGODiseaseListFilter
    # goDiseases_not_in
    goDiseases_not_in: _EditableGODiseaseListFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # jaxDiseases
    jaxDiseases: _EditableJAXDiseaseListFilter
    # jaxDiseases_in
    jaxDiseases_in: _EditableJAXDiseaseListFilter
    # jaxDiseases_not
    jaxDiseases_not: _EditableJAXDiseaseListFilter
    # jaxDiseases_not_in
    jaxDiseases_not_in: _EditableJAXDiseaseListFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # omniMaps
    omniMaps: _EditableOmniMapListFilter
    # omniMaps_in
    omniMaps_in: _EditableOmniMapListFilter
    # omniMaps_not
    omniMaps_not: _EditableOmniMapListFilter
    # omniMaps_not_in
    omniMaps_not_in: _EditableOmniMapListFilter
    # oncoTreeDiseases
    oncoTreeDiseases: _EditableOncoTreeDiseaseListFilter
    # oncoTreeDiseases_in
    oncoTreeDiseases_in: _EditableOncoTreeDiseaseListFilter
    # oncoTreeDiseases_not
    oncoTreeDiseases_not: _EditableOncoTreeDiseaseListFilter
    # oncoTreeDiseases_not_in
    oncoTreeDiseases_not_in: _EditableOncoTreeDiseaseListFilter
    # parents
    parents: _OntologicalDiseaseFilter
    # parents_every
    parents_every: _OntologicalDiseaseFilter
    # parents_in
    parents_in: _OntologicalDiseaseFilter
    # parents_none
    parents_none: _OntologicalDiseaseFilter
    # parents_not
    parents_not: _OntologicalDiseaseFilter
    # parents_not_in
    parents_not_in: _OntologicalDiseaseFilter
    # parents_single
    parents_single: _OntologicalDiseaseFilter
    # parents_some
    parents_some: _OntologicalDiseaseFilter
    # synonyms
    synonyms: _EditableStringListFilter
    # synonyms_in
    synonyms_in: _EditableStringListFilter
    # synonyms_not
    synonyms_not: _EditableStringListFilter
    # synonyms_not_in
    synonyms_not_in: _EditableStringListFilter
    # xrefs
    xrefs: _EditableXRefListFilter
    # xrefs_in
    xrefs_in: _EditableXRefListFilter
    # xrefs_not
    xrefs_not: _EditableXRefListFilter
    # xrefs_not_in
    xrefs_not_in: _EditableXRefListFilter
}

# Ordering Enum for OntologicalDisease
enum _OntologicalDiseaseOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for Outcome
input _OutcomeFilter {
    # AND
    AND: [_OutcomeFilter!]
    # ConfidenceIntervalHi
    ConfidenceIntervalHi: Float
    # ConfidenceIntervalHi_gt
    ConfidenceIntervalHi_gt: Float
    # ConfidenceIntervalHi_gte
    ConfidenceIntervalHi_gte: Float
    # ConfidenceIntervalHi_in
    ConfidenceIntervalHi_in: [Float!]
    # ConfidenceIntervalHi_lt
    ConfidenceIntervalHi_lt: Float
    # ConfidenceIntervalHi_lte
    ConfidenceIntervalHi_lte: Float
    # ConfidenceIntervalHi_not
    ConfidenceIntervalHi_not: Float
    # ConfidenceIntervalHi_not_in
    ConfidenceIntervalHi_not_in: [Float!]
    # ConfidenceIntervalLo
    ConfidenceIntervalLo: Float
    # ConfidenceIntervalLo_gt
    ConfidenceIntervalLo_gt: Float
    # ConfidenceIntervalLo_gte
    ConfidenceIntervalLo_gte: Float
    # ConfidenceIntervalLo_in
    ConfidenceIntervalLo_in: [Float!]
    # ConfidenceIntervalLo_lt
    ConfidenceIntervalLo_lt: Float
    # ConfidenceIntervalLo_lte
    ConfidenceIntervalLo_lte: Float
    # ConfidenceIntervalLo_not
    ConfidenceIntervalLo_not: Float
    # ConfidenceIntervalLo_not_in
    ConfidenceIntervalLo_not_in: [Float!]
    # ConfidenceIntervalType
    ConfidenceIntervalType: String
    # ConfidenceIntervalType_contains
    ConfidenceIntervalType_contains: String
    # ConfidenceIntervalType_ends_with
    ConfidenceIntervalType_ends_with: String
    # ConfidenceIntervalType_gt
    ConfidenceIntervalType_gt: String
    # ConfidenceIntervalType_gte
    ConfidenceIntervalType_gte: String
    # ConfidenceIntervalType_in
    ConfidenceIntervalType_in: [String!]
    # ConfidenceIntervalType_lt
    ConfidenceIntervalType_lt: String
    # ConfidenceIntervalType_lte
    ConfidenceIntervalType_lte: String
    # ConfidenceIntervalType_not
    ConfidenceIntervalType_not: String
    # ConfidenceIntervalType_not_contains
    ConfidenceIntervalType_not_contains: String
    # ConfidenceIntervalType_not_ends_with
    ConfidenceIntervalType_not_ends_with: String
    # ConfidenceIntervalType_not_in
    ConfidenceIntervalType_not_in: [String!]
    # ConfidenceIntervalType_not_starts_with
    ConfidenceIntervalType_not_starts_with: String
    # ConfidenceIntervalType_starts_with
    ConfidenceIntervalType_starts_with: String
    # OR
    OR: [_OutcomeFilter!]
    # clinicalCharacteristics
    clinicalCharacteristics: String
    # clinicalCharacteristics_contains
    clinicalCharacteristics_contains: String
    # clinicalCharacteristics_ends_with
    clinicalCharacteristics_ends_with: String
    # clinicalCharacteristics_gt
    clinicalCharacteristics_gt: String
    # clinicalCharacteristics_gte
    clinicalCharacteristics_gte: String
    # clinicalCharacteristics_in
    clinicalCharacteristics_in: [String!]
    # clinicalCharacteristics_lt
    clinicalCharacteristics_lt: String
    # clinicalCharacteristics_lte
    clinicalCharacteristics_lte: String
    # clinicalCharacteristics_not
    clinicalCharacteristics_not: String
    # clinicalCharacteristics_not_contains
    clinicalCharacteristics_not_contains: String
    # clinicalCharacteristics_not_ends_with
    clinicalCharacteristics_not_ends_with: String
    # clinicalCharacteristics_not_in
    clinicalCharacteristics_not_in: [String!]
    # clinicalCharacteristics_not_starts_with
    clinicalCharacteristics_not_starts_with: String
    # clinicalCharacteristics_starts_with
    clinicalCharacteristics_starts_with: String
    # dose
    dose: Int
    # doseUnit
    doseUnit: String
    # doseUnit_contains
    doseUnit_contains: String
    # doseUnit_ends_with
    doseUnit_ends_with: String
    # doseUnit_gt
    doseUnit_gt: String
    # doseUnit_gte
    doseUnit_gte: String
    # doseUnit_in
    doseUnit_in: [String!]
    # doseUnit_lt
    doseUnit_lt: String
    # doseUnit_lte
    doseUnit_lte: String
    # doseUnit_not
    doseUnit_not: String
    # doseUnit_not_contains
    doseUnit_not_contains: String
    # doseUnit_not_ends_with
    doseUnit_not_ends_with: String
    # doseUnit_not_in
    doseUnit_not_in: [String!]
    # doseUnit_not_starts_with
    doseUnit_not_starts_with: String
    # doseUnit_starts_with
    doseUnit_starts_with: String
    # dose_gt
    dose_gt: Int
    # dose_gte
    dose_gte: Int
    # dose_in
    dose_in: [Int!]
    # dose_lt
    dose_lt: Int
    # dose_lte
    dose_lte: Int
    # dose_not
    dose_not: Int
    # dose_not_in
    dose_not_in: [Int!]
    # endpoint
    endpoint: EvidenceEndpoint
    # endpoint_in
    endpoint_in: [EvidenceEndpoint!]
    # endpoint_not
    endpoint_not: EvidenceEndpoint
    # endpoint_not_in
    endpoint_not_in: [EvidenceEndpoint!]
    # evidences
    evidences: _EvidenceFilter
    # evidences_every
    evidences_every: _EvidenceFilter
    # evidences_in
    evidences_in: _EvidenceFilter
    # evidences_none
    evidences_none: _EvidenceFilter
    # evidences_not
    evidences_not: _EvidenceFilter
    # evidences_not_in
    evidences_not_in: _EvidenceFilter
    # evidences_single
    evidences_single: _EvidenceFilter
    # evidences_some
    evidences_some: _EvidenceFilter
    # groupSize
    groupSize: Int
    # groupSize_gt
    groupSize_gt: Int
    # groupSize_gte
    groupSize_gte: Int
    # groupSize_in
    groupSize_in: [Int!]
    # groupSize_lt
    groupSize_lt: Int
    # groupSize_lte
    groupSize_lte: Int
    # groupSize_not
    groupSize_not: Int
    # groupSize_not_in
    groupSize_not_in: [Int!]
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # notes
    notes: String
    # notes_contains
    notes_contains: String
    # notes_ends_with
    notes_ends_with: String
    # notes_gt
    notes_gt: String
    # notes_gte
    notes_gte: String
    # notes_in
    notes_in: [String!]
    # notes_lt
    notes_lt: String
    # notes_lte
    notes_lte: String
    # notes_not
    notes_not: String
    # notes_not_contains
    notes_not_contains: String
    # notes_not_ends_with
    notes_not_ends_with: String
    # notes_not_in
    notes_not_in: [String!]
    # notes_not_starts_with
    notes_not_starts_with: String
    # notes_starts_with
    notes_starts_with: String
    # observation
    observation: String
    # observationMethod
    observationMethod: String
    # observationMethod_contains
    observationMethod_contains: String
    # observationMethod_ends_with
    observationMethod_ends_with: String
    # observationMethod_gt
    observationMethod_gt: String
    # observationMethod_gte
    observationMethod_gte: String
    # observationMethod_in
    observationMethod_in: [String!]
    # observationMethod_lt
    observationMethod_lt: String
    # observationMethod_lte
    observationMethod_lte: String
    # observationMethod_not
    observationMethod_not: String
    # observationMethod_not_contains
    observationMethod_not_contains: String
    # observationMethod_not_ends_with
    observationMethod_not_ends_with: String
    # observationMethod_not_in
    observationMethod_not_in: [String!]
    # observationMethod_not_starts_with
    observationMethod_not_starts_with: String
    # observationMethod_starts_with
    observationMethod_starts_with: String
    # observation_contains
    observation_contains: String
    # observation_ends_with
    observation_ends_with: String
    # observation_gt
    observation_gt: String
    # observation_gte
    observation_gte: String
    # observation_in
    observation_in: [String!]
    # observation_lt
    observation_lt: String
    # observation_lte
    observation_lte: String
    # observation_not
    observation_not: String
    # observation_not_contains
    observation_not_contains: String
    # observation_not_ends_with
    observation_not_ends_with: String
    # observation_not_in
    observation_not_in: [String!]
    # observation_not_starts_with
    observation_not_starts_with: String
    # observation_starts_with
    observation_starts_with: String
    # outcome
    outcome: Float
    # outcomeRangeMax
    outcomeRangeMax: Float
    # outcomeRangeMax_gt
    outcomeRangeMax_gt: Float
    # outcomeRangeMax_gte
    outcomeRangeMax_gte: Float
    # outcomeRangeMax_in
    outcomeRangeMax_in: [Float!]
    # outcomeRangeMax_lt
    outcomeRangeMax_lt: Float
    # outcomeRangeMax_lte
    outcomeRangeMax_lte: Float
    # outcomeRangeMax_not
    outcomeRangeMax_not: Float
    # outcomeRangeMax_not_in
    outcomeRangeMax_not_in: [Float!]
    # outcomeRangeMin
    outcomeRangeMin: Float
    # outcomeRangeMin_gt
    outcomeRangeMin_gt: Float
    # outcomeRangeMin_gte
    outcomeRangeMin_gte: Float
    # outcomeRangeMin_in
    outcomeRangeMin_in: [Float!]
    # outcomeRangeMin_lt
    outcomeRangeMin_lt: Float
    # outcomeRangeMin_lte
    outcomeRangeMin_lte: Float
    # outcomeRangeMin_not
    outcomeRangeMin_not: Float
    # outcomeRangeMin_not_in
    outcomeRangeMin_not_in: [Float!]
    # outcomeUnit
    outcomeUnit: String
    # outcomeUnit_contains
    outcomeUnit_contains: String
    # outcomeUnit_ends_with
    outcomeUnit_ends_with: String
    # outcomeUnit_gt
    outcomeUnit_gt: String
    # outcomeUnit_gte
    outcomeUnit_gte: String
    # outcomeUnit_in
    outcomeUnit_in: [String!]
    # outcomeUnit_lt
    outcomeUnit_lt: String
    # outcomeUnit_lte
    outcomeUnit_lte: String
    # outcomeUnit_not
    outcomeUnit_not: String
    # outcomeUnit_not_contains
    outcomeUnit_not_contains: String
    # outcomeUnit_not_ends_with
    outcomeUnit_not_ends_with: String
    # outcomeUnit_not_in
    outcomeUnit_not_in: [String!]
    # outcomeUnit_not_starts_with
    outcomeUnit_not_starts_with: String
    # outcomeUnit_starts_with
    outcomeUnit_starts_with: String
    # outcome_gt
    outcome_gt: Float
    # outcome_gte
    outcome_gte: Float
    # outcome_in
    outcome_in: [Float!]
    # outcome_lt
    outcome_lt: Float
    # outcome_lte
    outcome_lte: Float
    # outcome_not
    outcome_not: Float
    # outcome_not_in
    outcome_not_in: [Float!]
    # treatmentGroup
    treatmentGroup: String
    # treatmentGroup_contains
    treatmentGroup_contains: String
    # treatmentGroup_ends_with
    treatmentGroup_ends_with: String
    # treatmentGroup_gt
    treatmentGroup_gt: String
    # treatmentGroup_gte
    treatmentGroup_gte: String
    # treatmentGroup_in
    treatmentGroup_in: [String!]
    # treatmentGroup_lt
    treatmentGroup_lt: String
    # treatmentGroup_lte
    treatmentGroup_lte: String
    # treatmentGroup_not
    treatmentGroup_not: String
    # treatmentGroup_not_contains
    treatmentGroup_not_contains: String
    # treatmentGroup_not_ends_with
    treatmentGroup_not_ends_with: String
    # treatmentGroup_not_in
    treatmentGroup_not_in: [String!]
    # treatmentGroup_not_starts_with
    treatmentGroup_not_starts_with: String
    # treatmentGroup_starts_with
    treatmentGroup_starts_with: String
}

# Ordering Enum for Outcome
enum _OutcomeOrdering {
    # Ascending sort for ConfidenceIntervalHi
    ConfidenceIntervalHi_asc
    # Descending sort for ConfidenceIntervalHi
    ConfidenceIntervalHi_desc
    # Ascending sort for ConfidenceIntervalLo
    ConfidenceIntervalLo_asc
    # Descending sort for ConfidenceIntervalLo
    ConfidenceIntervalLo_desc
    # Ascending sort for ConfidenceIntervalType
    ConfidenceIntervalType_asc
    # Descending sort for ConfidenceIntervalType
    ConfidenceIntervalType_desc
    # Ascending sort for clinicalCharacteristics
    clinicalCharacteristics_asc
    # Descending sort for clinicalCharacteristics
    clinicalCharacteristics_desc
    # Ascending sort for doseUnit
    doseUnit_asc
    # Descending sort for doseUnit
    doseUnit_desc
    # Ascending sort for dose
    dose_asc
    # Descending sort for dose
    dose_desc
    # Ascending sort for endpoint
    endpoint_asc
    # Descending sort for endpoint
    endpoint_desc
    # Ascending sort for groupSize
    groupSize_asc
    # Descending sort for groupSize
    groupSize_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for notes
    notes_asc
    # Descending sort for notes
    notes_desc
    # Ascending sort for observationMethod
    observationMethod_asc
    # Descending sort for observationMethod
    observationMethod_desc
    # Ascending sort for observation
    observation_asc
    # Descending sort for observation
    observation_desc
    # Ascending sort for outcomeRangeMax
    outcomeRangeMax_asc
    # Descending sort for outcomeRangeMax
    outcomeRangeMax_desc
    # Ascending sort for outcomeRangeMin
    outcomeRangeMin_asc
    # Descending sort for outcomeRangeMin
    outcomeRangeMin_desc
    # Ascending sort for outcomeUnit
    outcomeUnit_asc
    # Descending sort for outcomeUnit
    outcomeUnit_desc
    # Ascending sort for outcome
    outcome_asc
    # Descending sort for outcome
    outcome_desc
    # Ascending sort for treatmentGroup
    treatmentGroup_asc
    # Descending sort for treatmentGroup
    treatmentGroup_desc
}

# Filter Input Type for ProteinExpressionMarker
input _ProteinExpressionMarkerFilter {
    # AND
    AND: [_ProteinExpressionMarkerFilter!]
    # OR
    OR: [_ProteinExpressionMarkerFilter!]
    # assay
    assay: _ProteinLevelAssayFilter
    # assay_in
    assay_in: _ProteinLevelAssayFilter
    # assay_not
    assay_not: _ProteinLevelAssayFilter
    # assay_not_in
    assay_not_in: _ProteinLevelAssayFilter
    # genes
    genes: _EditableOmniGeneListFilter
    # genes_in
    genes_in: _EditableOmniGeneListFilter
    # genes_not
    genes_not: _EditableOmniGeneListFilter
    # genes_not_in
    genes_not_in: _EditableOmniGeneListFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # immuneCycleRoles
    immuneCycleRoles: _EditableImmuneCycleRoleFilter
    # immuneCycleRoles_every
    immuneCycleRoles_every: _EditableImmuneCycleRoleFilter
    # immuneCycleRoles_in
    immuneCycleRoles_in: _EditableImmuneCycleRoleFilter
    # immuneCycleRoles_none
    immuneCycleRoles_none: _EditableImmuneCycleRoleFilter
    # immuneCycleRoles_not
    immuneCycleRoles_not: _EditableImmuneCycleRoleFilter
    # immuneCycleRoles_not_in
    immuneCycleRoles_not_in: _EditableImmuneCycleRoleFilter
    # immuneCycleRoles_single
    immuneCycleRoles_single: _EditableImmuneCycleRoleFilter
    # immuneCycleRoles_some
    immuneCycleRoles_some: _EditableImmuneCycleRoleFilter
    # immuneFunctions
    immuneFunctions: _EditableImmuneFunctionFilter
    # immuneFunctions_every
    immuneFunctions_every: _EditableImmuneFunctionFilter
    # immuneFunctions_in
    immuneFunctions_in: _EditableImmuneFunctionFilter
    # immuneFunctions_none
    immuneFunctions_none: _EditableImmuneFunctionFilter
    # immuneFunctions_not
    immuneFunctions_not: _EditableImmuneFunctionFilter
    # immuneFunctions_not_in
    immuneFunctions_not_in: _EditableImmuneFunctionFilter
    # immuneFunctions_single
    immuneFunctions_single: _EditableImmuneFunctionFilter
    # immuneFunctions_some
    immuneFunctions_some: _EditableImmuneFunctionFilter
    # immunePhenotypes
    immunePhenotypes: _EditableImmunePhenotypeFilter
    # immunePhenotypes_every
    immunePhenotypes_every: _EditableImmunePhenotypeFilter
    # immunePhenotypes_in
    immunePhenotypes_in: _EditableImmunePhenotypeFilter
    # immunePhenotypes_none
    immunePhenotypes_none: _EditableImmunePhenotypeFilter
    # immunePhenotypes_not
    immunePhenotypes_not: _EditableImmunePhenotypeFilter
    # immunePhenotypes_not_in
    immunePhenotypes_not_in: _EditableImmunePhenotypeFilter
    # immunePhenotypes_single
    immunePhenotypes_single: _EditableImmunePhenotypeFilter
    # immunePhenotypes_some
    immunePhenotypes_some: _EditableImmunePhenotypeFilter
    # method
    method: _EditableStatementFilter
    # method_in
    method_in: _EditableStatementFilter
    # method_not
    method_not: _EditableStatementFilter
    # method_not_in
    method_not_in: _EditableStatementFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # resultString
    resultString: _EditableStatementFilter
    # resultString_in
    resultString_in: _EditableStatementFilter
    # resultString_not
    resultString_not: _EditableStatementFilter
    # resultString_not_in
    resultString_not_in: _EditableStatementFilter
    # synonyms
    synonyms: _EditableStringListFilter
    # synonyms_in
    synonyms_in: _EditableStringListFilter
    # synonyms_not
    synonyms_not: _EditableStringListFilter
    # synonyms_not_in
    synonyms_not_in: _EditableStringListFilter
}

# Ordering Enum for ProteinExpressionMarker
enum _ProteinExpressionMarkerOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for ProteinLevelAssay
input _ProteinLevelAssayFilter {
    # AND
    AND: [_ProteinLevelAssayFilter!]
    # OR
    OR: [_ProteinLevelAssayFilter!]
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
}

# Ordering Enum for ProteinLevelAssay
enum _ProteinLevelAssayOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for Reference
input _ReferenceFilter {
    # AND
    AND: [_ReferenceFilter!]
    # OR
    OR: [_ReferenceFilter!]
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # shortReference
    shortReference: String
    # shortReference_contains
    shortReference_contains: String
    # shortReference_ends_with
    shortReference_ends_with: String
    # shortReference_gt
    shortReference_gt: String
    # shortReference_gte
    shortReference_gte: String
    # shortReference_in
    shortReference_in: [String!]
    # shortReference_lt
    shortReference_lt: String
    # shortReference_lte
    shortReference_lte: String
    # shortReference_not
    shortReference_not: String
    # shortReference_not_contains
    shortReference_not_contains: String
    # shortReference_not_ends_with
    shortReference_not_ends_with: String
    # shortReference_not_in
    shortReference_not_in: [String!]
    # shortReference_not_starts_with
    shortReference_not_starts_with: String
    # shortReference_starts_with
    shortReference_starts_with: String
    # statementsReferenced
    statementsReferenced: _EditableObjectFilter
    # statementsReferenced_every
    statementsReferenced_every: _EditableObjectFilter
    # statementsReferenced_in
    statementsReferenced_in: _EditableObjectFilter
    # statementsReferenced_none
    statementsReferenced_none: _EditableObjectFilter
    # statementsReferenced_not
    statementsReferenced_not: _EditableObjectFilter
    # statementsReferenced_not_in
    statementsReferenced_not_in: _EditableObjectFilter
    # statementsReferenced_single
    statementsReferenced_single: _EditableObjectFilter
    # statementsReferenced_some
    statementsReferenced_some: _EditableObjectFilter
}

# Ordering Enum for Reference
enum _ReferenceOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for shortReference
    shortReference_asc
    # Descending sort for shortReference
    shortReference_desc
}

# Filter Input Type for RNASeqAssay
input _RNASeqAssayFilter {
    # AND
    AND: [_RNASeqAssayFilter!]
    # OR
    OR: [_RNASeqAssayFilter!]
    # comparator
    comparator: _EditableAssayComparatorFilter
    # comparator_in
    comparator_in: _EditableAssayComparatorFilter
    # comparator_not
    comparator_not: _EditableAssayComparatorFilter
    # comparator_not_in
    comparator_not_in: _EditableAssayComparatorFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # proteinExpressionMarkers
    proteinExpressionMarkers: _ProteinExpressionMarkerFilter
    # proteinExpressionMarkers_every
    proteinExpressionMarkers_every: _ProteinExpressionMarkerFilter
    # proteinExpressionMarkers_in
    proteinExpressionMarkers_in: _ProteinExpressionMarkerFilter
    # proteinExpressionMarkers_none
    proteinExpressionMarkers_none: _ProteinExpressionMarkerFilter
    # proteinExpressionMarkers_not
    proteinExpressionMarkers_not: _ProteinExpressionMarkerFilter
    # proteinExpressionMarkers_not_in
    proteinExpressionMarkers_not_in: _ProteinExpressionMarkerFilter
    # proteinExpressionMarkers_single
    proteinExpressionMarkers_single: _ProteinExpressionMarkerFilter
    # proteinExpressionMarkers_some
    proteinExpressionMarkers_some: _ProteinExpressionMarkerFilter
    # resultMax
    resultMax: _EditableFloatFilter
    # resultMax_in
    resultMax_in: _EditableFloatFilter
    # resultMax_not
    resultMax_not: _EditableFloatFilter
    # resultMax_not_in
    resultMax_not_in: _EditableFloatFilter
    # resultMin
    resultMin: _EditableFloatFilter
    # resultMin_in
    resultMin_in: _EditableFloatFilter
    # resultMin_not
    resultMin_not: _EditableFloatFilter
    # resultMin_not_in
    resultMin_not_in: _EditableFloatFilter
    # resultType
    resultType: _EditableRNASeqResultTypeFilter
    # resultType_in
    resultType_in: _EditableRNASeqResultTypeFilter
    # resultType_not
    resultType_not: _EditableRNASeqResultTypeFilter
    # resultType_not_in
    resultType_not_in: _EditableRNASeqResultTypeFilter
}

# Ordering Enum for RNASeqAssay
enum _RNASeqAssayOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for RNASeqSignatureMarker
input _RNASeqSignatureMarkerFilter {
    # AND
    AND: [_RNASeqSignatureMarkerFilter!]
    # OR
    OR: [_RNASeqSignatureMarkerFilter!]
    # comparator
    comparator: _EditableAssayComparatorFilter
    # comparator_in
    comparator_in: _EditableAssayComparatorFilter
    # comparator_not
    comparator_not: _EditableAssayComparatorFilter
    # comparator_not_in
    comparator_not_in: _EditableAssayComparatorFilter
    # definition
    definition: _EditableStatementFilter
    # definition_in
    definition_in: _EditableStatementFilter
    # definition_not
    definition_not: _EditableStatementFilter
    # definition_not_in
    definition_not_in: _EditableStatementFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # interpretations
    interpretations: _EditableTMBInterpretationFilter
    # interpretations_every
    interpretations_every: _EditableTMBInterpretationFilter
    # interpretations_in
    interpretations_in: _EditableTMBInterpretationFilter
    # interpretations_none
    interpretations_none: _EditableTMBInterpretationFilter
    # interpretations_not
    interpretations_not: _EditableTMBInterpretationFilter
    # interpretations_not_in
    interpretations_not_in: _EditableTMBInterpretationFilter
    # interpretations_single
    interpretations_single: _EditableTMBInterpretationFilter
    # interpretations_some
    interpretations_some: _EditableTMBInterpretationFilter
    # markerProfile
    markerProfile: _MarkerProfileFilter
    # markerProfile_in
    markerProfile_in: _MarkerProfileFilter
    # markerProfile_not
    markerProfile_not: _MarkerProfileFilter
    # markerProfile_not_in
    markerProfile_not_in: _MarkerProfileFilter
    # method
    method: _EditableStatementFilter
    # method_in
    method_in: _EditableStatementFilter
    # method_not
    method_not: _EditableStatementFilter
    # method_not_in
    method_not_in: _EditableStatementFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # resultMax
    resultMax: _EditableFloatFilter
    # resultMax_in
    resultMax_in: _EditableFloatFilter
    # resultMax_not
    resultMax_not: _EditableFloatFilter
    # resultMax_not_in
    resultMax_not_in: _EditableFloatFilter
    # resultMin
    resultMin: _EditableFloatFilter
    # resultMin_in
    resultMin_in: _EditableFloatFilter
    # resultMin_not
    resultMin_not: _EditableFloatFilter
    # resultMin_not_in
    resultMin_not_in: _EditableFloatFilter
    # resultString
    resultString: _EditableStatementFilter
    # resultString_in
    resultString_in: _EditableStatementFilter
    # resultString_not
    resultString_not: _EditableStatementFilter
    # resultString_not_in
    resultString_not_in: _EditableStatementFilter
}

# Ordering Enum for RNASeqSignatureMarker
enum _RNASeqSignatureMarkerOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for Target
input _TargetFilter {
    # AND
    AND: [_TargetFilter!]
    # OR
    OR: [_TargetFilter!]
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: String
    # name_contains
    name_contains: String
    # name_ends_with
    name_ends_with: String
    # name_gt
    name_gt: String
    # name_gte
    name_gte: String
    # name_in
    name_in: [String!]
    # name_lt
    name_lt: String
    # name_lte
    name_lte: String
    # name_not
    name_not: String
    # name_not_contains
    name_not_contains: String
    # name_not_ends_with
    name_not_ends_with: String
    # name_not_in
    name_not_in: [String!]
    # name_not_starts_with
    name_not_starts_with: String
    # name_starts_with
    name_starts_with: String
}

# Ordering Enum for Target
enum _TargetOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for name
    name_asc
    # Descending sort for name
    name_desc
}

# Filter Input Type for TCode
input _TCodeFilter {
    # AND
    AND: [_TCodeFilter!]
    # OR
    OR: [_TCodeFilter!]
    # children
    children: _TCodeFilter
    # children_every
    children_every: _TCodeFilter
    # children_in
    children_in: _TCodeFilter
    # children_none
    children_none: _TCodeFilter
    # children_not
    children_not: _TCodeFilter
    # children_not_in
    children_not_in: _TCodeFilter
    # children_single
    children_single: _TCodeFilter
    # children_some
    children_some: _TCodeFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # parents
    parents: _TCodeFilter
    # parents_every
    parents_every: _TCodeFilter
    # parents_in
    parents_in: _TCodeFilter
    # parents_none
    parents_none: _TCodeFilter
    # parents_not
    parents_not: _TCodeFilter
    # parents_not_in
    parents_not_in: _TCodeFilter
    # parents_single
    parents_single: _TCodeFilter
    # parents_some
    parents_some: _TCodeFilter
    # tcodeId
    tcodeId: String
    # tcodeId_contains
    tcodeId_contains: String
    # tcodeId_ends_with
    tcodeId_ends_with: String
    # tcodeId_gt
    tcodeId_gt: String
    # tcodeId_gte
    tcodeId_gte: String
    # tcodeId_in
    tcodeId_in: [String!]
    # tcodeId_lt
    tcodeId_lt: String
    # tcodeId_lte
    tcodeId_lte: String
    # tcodeId_not
    tcodeId_not: String
    # tcodeId_not_contains
    tcodeId_not_contains: String
    # tcodeId_not_ends_with
    tcodeId_not_ends_with: String
    # tcodeId_not_in
    tcodeId_not_in: [String!]
    # tcodeId_not_starts_with
    tcodeId_not_starts_with: String
    # tcodeId_starts_with
    tcodeId_starts_with: String
    # tissuePath
    tissuePath: _EditableStatementFilter
    # tissuePath_in
    tissuePath_in: _EditableStatementFilter
    # tissuePath_not
    tissuePath_not: _EditableStatementFilter
    # tissuePath_not_in
    tissuePath_not_in: _EditableStatementFilter
}

# Ordering Enum for TCode
enum _TCodeOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for tcodeId
    tcodeId_asc
    # Descending sort for tcodeId
    tcodeId_desc
}

# Filter Input Type for TherapeuticIntervention
input _TherapeuticInterventionFilter {
    # AND
    AND: [_TherapeuticInterventionFilter!]
    # OR
    OR: [_TherapeuticInterventionFilter!]
    # concurrentWith
    concurrentWith: _TherapeuticInterventionFilter
    # concurrentWith_every
    concurrentWith_every: _TherapeuticInterventionFilter
    # concurrentWith_in
    concurrentWith_in: _TherapeuticInterventionFilter
    # concurrentWith_none
    concurrentWith_none: _TherapeuticInterventionFilter
    # concurrentWith_not
    concurrentWith_not: _TherapeuticInterventionFilter
    # concurrentWith_not_in
    concurrentWith_not_in: _TherapeuticInterventionFilter
    # concurrentWith_single
    concurrentWith_single: _TherapeuticInterventionFilter
    # concurrentWith_some
    concurrentWith_some: _TherapeuticInterventionFilter
    # definition
    definition: _EditableStatementFilter
    # definition_in
    definition_in: _EditableStatementFilter
    # definition_not
    definition_not: _EditableStatementFilter
    # definition_not_in
    definition_not_in: _EditableStatementFilter
    # evidenceAssociations
    evidenceAssociations: _EvidenceAssociationFilter
    # evidenceAssociations_every
    evidenceAssociations_every: _EvidenceAssociationFilter
    # evidenceAssociations_in
    evidenceAssociations_in: _EvidenceAssociationFilter
    # evidenceAssociations_none
    evidenceAssociations_none: _EvidenceAssociationFilter
    # evidenceAssociations_not
    evidenceAssociations_not: _EvidenceAssociationFilter
    # evidenceAssociations_not_in
    evidenceAssociations_not_in: _EvidenceAssociationFilter
    # evidenceAssociations_single
    evidenceAssociations_single: _EvidenceAssociationFilter
    # evidenceAssociations_some
    evidenceAssociations_some: _EvidenceAssociationFilter
    # followedBy
    followedBy: _TherapeuticInterventionFilter
    # followedBy_every
    followedBy_every: _TherapeuticInterventionFilter
    # followedBy_in
    followedBy_in: _TherapeuticInterventionFilter
    # followedBy_none
    followedBy_none: _TherapeuticInterventionFilter
    # followedBy_not
    followedBy_not: _TherapeuticInterventionFilter
    # followedBy_not_in
    followedBy_not_in: _TherapeuticInterventionFilter
    # followedBy_single
    followedBy_single: _TherapeuticInterventionFilter
    # followedBy_some
    followedBy_some: _TherapeuticInterventionFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # precededBy
    precededBy: _TherapeuticInterventionFilter
    # precededBy_every
    precededBy_every: _TherapeuticInterventionFilter
    # precededBy_in
    precededBy_in: _TherapeuticInterventionFilter
    # precededBy_none
    precededBy_none: _TherapeuticInterventionFilter
    # precededBy_not
    precededBy_not: _TherapeuticInterventionFilter
    # precededBy_not_in
    precededBy_not_in: _TherapeuticInterventionFilter
    # precededBy_single
    precededBy_single: _TherapeuticInterventionFilter
    # precededBy_some
    precededBy_some: _TherapeuticInterventionFilter
    # therapy
    therapy: _TherapyFilter
    # therapy_in
    therapy_in: _TherapyFilter
    # therapy_not
    therapy_not: _TherapyFilter
    # therapy_not_in
    therapy_not_in: _TherapyFilter
}

# Ordering Enum for TherapeuticIntervention
enum _TherapeuticInterventionOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for TherapyComponent
input _TherapyComponentFilter {
    # AND
    AND: [_TherapyComponentFilter!]
    # OR
    OR: [_TherapyComponentFilter!]
    # componentOf
    componentOf: _TherapyFilter
    # componentOf_every
    componentOf_every: _TherapyFilter
    # componentOf_in
    componentOf_in: _TherapyFilter
    # componentOf_none
    componentOf_none: _TherapyFilter
    # componentOf_not
    componentOf_not: _TherapyFilter
    # componentOf_not_in
    componentOf_not_in: _TherapyFilter
    # componentOf_single
    componentOf_single: _TherapyFilter
    # componentOf_some
    componentOf_some: _TherapyFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
}

# Ordering Enum for TherapyComponent
enum _TherapyComponentOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for Therapy
input _TherapyFilter {
    # AND
    AND: [_TherapyFilter!]
    # OR
    OR: [_TherapyFilter!]
    # componentOf
    componentOf: _TherapyFilter
    # componentOf_every
    componentOf_every: _TherapyFilter
    # componentOf_in
    componentOf_in: _TherapyFilter
    # componentOf_none
    componentOf_none: _TherapyFilter
    # componentOf_not
    componentOf_not: _TherapyFilter
    # componentOf_not_in
    componentOf_not_in: _TherapyFilter
    # componentOf_single
    componentOf_single: _TherapyFilter
    # componentOf_some
    componentOf_some: _TherapyFilter
    # components
    components: _TherapyComponentFilter
    # components_every
    components_every: _TherapyComponentFilter
    # components_in
    components_in: _TherapyComponentFilter
    # components_none
    components_none: _TherapyComponentFilter
    # components_not
    components_not: _TherapyComponentFilter
    # components_not_in
    components_not_in: _TherapyComponentFilter
    # components_single
    components_single: _TherapyComponentFilter
    # components_some
    components_some: _TherapyComponentFilter
    # conjunction
    conjunction: OmniConjunction
    # conjunction_in
    conjunction_in: [OmniConjunction!]
    # conjunction_not
    conjunction_not: OmniConjunction
    # conjunction_not_in
    conjunction_not_in: [OmniConjunction!]
    # definition
    definition: _EditableStatementFilter
    # definition_in
    definition_in: _EditableStatementFilter
    # definition_not
    definition_not: _EditableStatementFilter
    # definition_not_in
    definition_not_in: _EditableStatementFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
}

# Ordering Enum for Therapy
enum _TherapyOrdering {
    # Ascending sort for conjunction
    conjunction_asc
    # Descending sort for conjunction
    conjunction_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for TMBMarker
input _TMBMarkerFilter {
    # AND
    AND: [_TMBMarkerFilter!]
    # OR
    OR: [_TMBMarkerFilter!]
    # comparator
    comparator: _EditableAssayComparatorFilter
    # comparator_in
    comparator_in: _EditableAssayComparatorFilter
    # comparator_not
    comparator_not: _EditableAssayComparatorFilter
    # comparator_not_in
    comparator_not_in: _EditableAssayComparatorFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # interpretations
    interpretations: _EditableTMBInterpretationFilter
    # interpretations_every
    interpretations_every: _EditableTMBInterpretationFilter
    # interpretations_in
    interpretations_in: _EditableTMBInterpretationFilter
    # interpretations_none
    interpretations_none: _EditableTMBInterpretationFilter
    # interpretations_not
    interpretations_not: _EditableTMBInterpretationFilter
    # interpretations_not_in
    interpretations_not_in: _EditableTMBInterpretationFilter
    # interpretations_single
    interpretations_single: _EditableTMBInterpretationFilter
    # interpretations_some
    interpretations_some: _EditableTMBInterpretationFilter
    # method
    method: _EditableStatementFilter
    # method_in
    method_in: _EditableStatementFilter
    # method_not
    method_not: _EditableStatementFilter
    # method_not_in
    method_not_in: _EditableStatementFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # resultMax
    resultMax: _EditableFloatFilter
    # resultMax_in
    resultMax_in: _EditableFloatFilter
    # resultMax_not
    resultMax_not: _EditableFloatFilter
    # resultMax_not_in
    resultMax_not_in: _EditableFloatFilter
    # resultMin
    resultMin: _EditableFloatFilter
    # resultMin_in
    resultMin_in: _EditableFloatFilter
    # resultMin_not
    resultMin_not: _EditableFloatFilter
    # resultMin_not_in
    resultMin_not_in: _EditableFloatFilter
    # resultString
    resultString: _EditableStatementFilter
    # resultString_in
    resultString_in: _EditableStatementFilter
    # resultString_not
    resultString_not: _EditableStatementFilter
    # resultString_not_in
    resultString_not_in: _EditableStatementFilter
    # resultUnits
    resultUnits: _EditableStatementFilter
    # resultUnits_in
    resultUnits_in: _EditableStatementFilter
    # resultUnits_not
    resultUnits_not: _EditableStatementFilter
    # resultUnits_not_in
    resultUnits_not_in: _EditableStatementFilter
}

# Ordering Enum for TMBMarker
enum _TMBMarkerOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for UniprotEntry
input _UniprotEntryFilter {
    # AND
    AND: [_UniprotEntryFilter!]
    # OR
    OR: [_UniprotEntryFilter!]
    # accessionNumber
    accessionNumber: String
    # accessionNumber_contains
    accessionNumber_contains: String
    # accessionNumber_ends_with
    accessionNumber_ends_with: String
    # accessionNumber_gt
    accessionNumber_gt: String
    # accessionNumber_gte
    accessionNumber_gte: String
    # accessionNumber_in
    accessionNumber_in: [String!]
    # accessionNumber_lt
    accessionNumber_lt: String
    # accessionNumber_lte
    accessionNumber_lte: String
    # accessionNumber_not
    accessionNumber_not: String
    # accessionNumber_not_contains
    accessionNumber_not_contains: String
    # accessionNumber_not_ends_with
    accessionNumber_not_ends_with: String
    # accessionNumber_not_in
    accessionNumber_not_in: [String!]
    # accessionNumber_not_starts_with
    accessionNumber_not_starts_with: String
    # accessionNumber_starts_with
    accessionNumber_starts_with: String
    # function
    function: _EditableStatementFilter
    # function_in
    function_in: _EditableStatementFilter
    # function_not
    function_not: _EditableStatementFilter
    # function_not_in
    function_not_in: _EditableStatementFilter
    # gene
    gene: _MyGeneInfoGeneFilter
    # gene_in
    gene_in: _MyGeneInfoGeneFilter
    # gene_not
    gene_not: _MyGeneInfoGeneFilter
    # gene_not_in
    gene_not_in: _MyGeneInfoGeneFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # name
    name: String
    # name_contains
    name_contains: String
    # name_ends_with
    name_ends_with: String
    # name_gt
    name_gt: String
    # name_gte
    name_gte: String
    # name_in
    name_in: [String!]
    # name_lt
    name_lt: String
    # name_lte
    name_lte: String
    # name_not
    name_not: String
    # name_not_contains
    name_not_contains: String
    # name_not_ends_with
    name_not_ends_with: String
    # name_not_in
    name_not_in: [String!]
    # name_not_starts_with
    name_not_starts_with: String
    # name_starts_with
    name_starts_with: String
    # uniprotId
    uniprotId: String
    # uniprotId_contains
    uniprotId_contains: String
    # uniprotId_ends_with
    uniprotId_ends_with: String
    # uniprotId_gt
    uniprotId_gt: String
    # uniprotId_gte
    uniprotId_gte: String
    # uniprotId_in
    uniprotId_in: [String!]
    # uniprotId_lt
    uniprotId_lt: String
    # uniprotId_lte
    uniprotId_lte: String
    # uniprotId_not
    uniprotId_not: String
    # uniprotId_not_contains
    uniprotId_not_contains: String
    # uniprotId_not_ends_with
    uniprotId_not_ends_with: String
    # uniprotId_not_in
    uniprotId_not_in: [String!]
    # uniprotId_not_starts_with
    uniprotId_not_starts_with: String
    # uniprotId_starts_with
    uniprotId_starts_with: String
}

# Ordering Enum for UniprotEntry
enum _UniprotEntryOrdering {
    # Ascending sort for accessionNumber
    accessionNumber_asc
    # Descending sort for accessionNumber
    accessionNumber_desc
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for name
    name_asc
    # Descending sort for name
    name_desc
    # Ascending sort for uniprotId
    uniprotId_asc
    # Descending sort for uniprotId
    uniprotId_desc
}

# Filter Input Type for User
input _UserFilter {
    # AND
    AND: [_UserFilter!]
    # OR
    OR: [_UserFilter!]
    # editedStatements
    editedStatements: _EditableObjectFilter
    # editedStatements_every
    editedStatements_every: _EditableObjectFilter
    # editedStatements_in
    editedStatements_in: _EditableObjectFilter
    # editedStatements_none
    editedStatements_none: _EditableObjectFilter
    # editedStatements_not
    editedStatements_not: _EditableObjectFilter
    # editedStatements_not_in
    editedStatements_not_in: _EditableObjectFilter
    # editedStatements_single
    editedStatements_single: _EditableObjectFilter
    # editedStatements_some
    editedStatements_some: _EditableObjectFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # isAdmin
    isAdmin: Boolean
    # isAdmin_not
    isAdmin_not: Boolean
    # isEditor
    isEditor: Boolean
    # isEditor_not
    isEditor_not: Boolean
    # name
    name: String
    # name_contains
    name_contains: String
    # name_ends_with
    name_ends_with: String
    # name_gt
    name_gt: String
    # name_gte
    name_gte: String
    # name_in
    name_in: [String!]
    # name_lt
    name_lt: String
    # name_lte
    name_lte: String
    # name_not
    name_not: String
    # name_not_contains
    name_not_contains: String
    # name_not_ends_with
    name_not_ends_with: String
    # name_not_in
    name_not_in: [String!]
    # name_not_starts_with
    name_not_starts_with: String
    # name_starts_with
    name_starts_with: String
    # password
    password: String
    # password_contains
    password_contains: String
    # password_ends_with
    password_ends_with: String
    # password_gt
    password_gt: String
    # password_gte
    password_gte: String
    # password_in
    password_in: [String!]
    # password_lt
    password_lt: String
    # password_lte
    password_lte: String
    # password_not
    password_not: String
    # password_not_contains
    password_not_contains: String
    # password_not_ends_with
    password_not_ends_with: String
    # password_not_in
    password_not_in: [String!]
    # password_not_starts_with
    password_not_starts_with: String
    # password_starts_with
    password_starts_with: String
}

# Ordering Enum for User
enum _UserOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for isAdmin
    isAdmin_asc
    # Descending sort for isAdmin
    isAdmin_desc
    # Ascending sort for isEditor
    isEditor_asc
    # Descending sort for isEditor
    isEditor_desc
    # Ascending sort for name
    name_asc
    # Descending sort for name
    name_desc
    # Ascending sort for password
    password_asc
    # Descending sort for password
    password_desc
}

# Filter Input Type for VariantCNV
input _VariantCNVFilter {
    # AND
    AND: [_VariantCNVFilter!]
    # OR
    OR: [_VariantCNVFilter!]
    # clinVarVariant
    clinVarVariant: _ClinVarVariantFilter
    # clinVarVariant_in
    clinVarVariant_in: _ClinVarVariantFilter
    # clinVarVariant_not
    clinVarVariant_not: _ClinVarVariantFilter
    # clinVarVariant_not_in
    clinVarVariant_not_in: _ClinVarVariantFilter
    # copyChange
    copyChange: _EditableCopyChangeFilter
    # copyChange_in
    copyChange_in: _EditableCopyChangeFilter
    # copyChange_not
    copyChange_not: _EditableCopyChangeFilter
    # copyChange_not_in
    copyChange_not_in: _EditableCopyChangeFilter
    # description
    description: _EditableStatementFilter
    # description_in
    description_in: _EditableStatementFilter
    # description_not
    description_not: _EditableStatementFilter
    # description_not_in
    description_not_in: _EditableStatementFilter
    # gene
    gene: _OmniGeneFilter
    # gene_in
    gene_in: _OmniGeneFilter
    # gene_not
    gene_not: _OmniGeneFilter
    # gene_not_in
    gene_not_in: _OmniGeneFilter
    # goVariant
    goVariant: _GOVariantFilter
    # goVariant_in
    goVariant_in: _GOVariantFilter
    # goVariant_not
    goVariant_not: _GOVariantFilter
    # goVariant_not_in
    goVariant_not_in: _GOVariantFilter
    # hotSpotVariant
    hotSpotVariant: _HotSpotVariantFilter
    # hotSpotVariant_in
    hotSpotVariant_in: _HotSpotVariantFilter
    # hotSpotVariant_not
    hotSpotVariant_not: _HotSpotVariantFilter
    # hotSpotVariant_not_in
    hotSpotVariant_not_in: _HotSpotVariantFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # jaxVariant
    jaxVariant: _JaxVariantFilter
    # jaxVariant_in
    jaxVariant_in: _JaxVariantFilter
    # jaxVariant_not
    jaxVariant_not: _JaxVariantFilter
    # jaxVariant_not_in
    jaxVariant_not_in: _JaxVariantFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # nonCanonicalTranscript
    nonCanonicalTranscript: _EditableStatementFilter
    # nonCanonicalTranscript_in
    nonCanonicalTranscript_in: _EditableStatementFilter
    # nonCanonicalTranscript_not
    nonCanonicalTranscript_not: _EditableStatementFilter
    # nonCanonicalTranscript_not_in
    nonCanonicalTranscript_not_in: _EditableStatementFilter
}

# Ordering Enum for VariantCNV
enum _VariantCNVOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for VariantFusion
input _VariantFusionFilter {
    # AND
    AND: [_VariantFusionFilter!]
    # OR
    OR: [_VariantFusionFilter!]
    # clinVarVariant
    clinVarVariant: _ClinVarVariantFilter
    # clinVarVariant_in
    clinVarVariant_in: _ClinVarVariantFilter
    # clinVarVariant_not
    clinVarVariant_not: _ClinVarVariantFilter
    # clinVarVariant_not_in
    clinVarVariant_not_in: _ClinVarVariantFilter
    # copyChange
    copyChange: _EditableCopyChangeFilter
    # copyChange_in
    copyChange_in: _EditableCopyChangeFilter
    # copyChange_not
    copyChange_not: _EditableCopyChangeFilter
    # copyChange_not_in
    copyChange_not_in: _EditableCopyChangeFilter
    # description
    description: _EditableStatementFilter
    # description_in
    description_in: _EditableStatementFilter
    # description_not
    description_not: _EditableStatementFilter
    # description_not_in
    description_not_in: _EditableStatementFilter
    # exon3Prime
    exon3Prime: _EditableIntFilter
    # exon3Prime_in
    exon3Prime_in: _EditableIntFilter
    # exon3Prime_not
    exon3Prime_not: _EditableIntFilter
    # exon3Prime_not_in
    exon3Prime_not_in: _EditableIntFilter
    # exon5Prime
    exon5Prime: _EditableIntFilter
    # exon5Prime_in
    exon5Prime_in: _EditableIntFilter
    # exon5Prime_not
    exon5Prime_not: _EditableIntFilter
    # exon5Prime_not_in
    exon5Prime_not_in: _EditableIntFilter
    # gene
    gene: _OmniGeneFilter
    # gene3Prime
    gene3Prime: _EditableOmniGeneReferenceFilter
    # gene3Prime_in
    gene3Prime_in: _EditableOmniGeneReferenceFilter
    # gene3Prime_not
    gene3Prime_not: _EditableOmniGeneReferenceFilter
    # gene3Prime_not_in
    gene3Prime_not_in: _EditableOmniGeneReferenceFilter
    # gene5Prime
    gene5Prime: _EditableOmniGeneReferenceFilter
    # gene5Prime_in
    gene5Prime_in: _EditableOmniGeneReferenceFilter
    # gene5Prime_not
    gene5Prime_not: _EditableOmniGeneReferenceFilter
    # gene5Prime_not_in
    gene5Prime_not_in: _EditableOmniGeneReferenceFilter
    # gene_in
    gene_in: _OmniGeneFilter
    # gene_not
    gene_not: _OmniGeneFilter
    # gene_not_in
    gene_not_in: _OmniGeneFilter
    # goVariant
    goVariant: _GOVariantFilter
    # goVariant_in
    goVariant_in: _GOVariantFilter
    # goVariant_not
    goVariant_not: _GOVariantFilter
    # goVariant_not_in
    goVariant_not_in: _GOVariantFilter
    # hotSpotVariant
    hotSpotVariant: _HotSpotVariantFilter
    # hotSpotVariant_in
    hotSpotVariant_in: _HotSpotVariantFilter
    # hotSpotVariant_not
    hotSpotVariant_not: _HotSpotVariantFilter
    # hotSpotVariant_not_in
    hotSpotVariant_not_in: _HotSpotVariantFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # jaxVariant
    jaxVariant: _JaxVariantFilter
    # jaxVariant_in
    jaxVariant_in: _JaxVariantFilter
    # jaxVariant_not
    jaxVariant_not: _JaxVariantFilter
    # jaxVariant_not_in
    jaxVariant_not_in: _JaxVariantFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # nonCanonicalTranscript
    nonCanonicalTranscript: _EditableStatementFilter
    # nonCanonicalTranscript_in
    nonCanonicalTranscript_in: _EditableStatementFilter
    # nonCanonicalTranscript_not
    nonCanonicalTranscript_not: _EditableStatementFilter
    # nonCanonicalTranscript_not_in
    nonCanonicalTranscript_not_in: _EditableStatementFilter
}

# Ordering Enum for VariantFusion
enum _VariantFusionOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
}

# Filter Input Type for VariantRegion
input _VariantRegionFilter {
    # AND
    AND: [_VariantRegionFilter!]
    # OR
    OR: [_VariantRegionFilter!]
    # clinVarVariant
    clinVarVariant: _ClinVarVariantFilter
    # clinVarVariant_in
    clinVarVariant_in: _ClinVarVariantFilter
    # clinVarVariant_not
    clinVarVariant_not: _ClinVarVariantFilter
    # clinVarVariant_not_in
    clinVarVariant_not_in: _ClinVarVariantFilter
    # description
    description: _EditableStatementFilter
    # description_in
    description_in: _EditableStatementFilter
    # description_not
    description_not: _EditableStatementFilter
    # description_not_in
    description_not_in: _EditableStatementFilter
    # gene
    gene: _OmniGeneFilter
    # gene_in
    gene_in: _OmniGeneFilter
    # gene_not
    gene_not: _OmniGeneFilter
    # gene_not_in
    gene_not_in: _OmniGeneFilter
    # goVariant
    goVariant: _GOVariantFilter
    # goVariant_in
    goVariant_in: _GOVariantFilter
    # goVariant_not
    goVariant_not: _GOVariantFilter
    # goVariant_not_in
    goVariant_not_in: _GOVariantFilter
    # hotSpotVariant
    hotSpotVariant: _HotSpotVariantFilter
    # hotSpotVariant_in
    hotSpotVariant_in: _HotSpotVariantFilter
    # hotSpotVariant_not
    hotSpotVariant_not: _HotSpotVariantFilter
    # hotSpotVariant_not_in
    hotSpotVariant_not_in: _HotSpotVariantFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # indelType
    indelType: IndelType
    # indelType_in
    indelType_in: [IndelType!]
    # indelType_not
    indelType_not: IndelType
    # indelType_not_in
    indelType_not_in: [IndelType!]
    # isDeleterious
    isDeleterious: _EditableBooleanFilter
    # isDeleterious_in
    isDeleterious_in: _EditableBooleanFilter
    # isDeleterious_not
    isDeleterious_not: _EditableBooleanFilter
    # isDeleterious_not_in
    isDeleterious_not_in: _EditableBooleanFilter
    # isFrameshift
    isFrameshift: _EditableBooleanFilter
    # isFrameshift_in
    isFrameshift_in: _EditableBooleanFilter
    # isFrameshift_not
    isFrameshift_not: _EditableBooleanFilter
    # isFrameshift_not_in
    isFrameshift_not_in: _EditableBooleanFilter
    # isTruncating
    isTruncating: _EditableBooleanFilter
    # isTruncating_in
    isTruncating_in: _EditableBooleanFilter
    # isTruncating_not
    isTruncating_not: _EditableBooleanFilter
    # isTruncating_not_in
    isTruncating_not_in: _EditableBooleanFilter
    # jaxVariant
    jaxVariant: _JaxVariantFilter
    # jaxVariant_in
    jaxVariant_in: _JaxVariantFilter
    # jaxVariant_not
    jaxVariant_not: _JaxVariantFilter
    # jaxVariant_not_in
    jaxVariant_not_in: _JaxVariantFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # nonCanonicalTranscript
    nonCanonicalTranscript: _EditableStatementFilter
    # nonCanonicalTranscript_in
    nonCanonicalTranscript_in: _EditableStatementFilter
    # nonCanonicalTranscript_not
    nonCanonicalTranscript_not: _EditableStatementFilter
    # nonCanonicalTranscript_not_in
    nonCanonicalTranscript_not_in: _EditableStatementFilter
    # proteinEffect
    proteinEffect: _EditableProteinEffectFilter
    # proteinEffect_in
    proteinEffect_in: _EditableProteinEffectFilter
    # proteinEffect_not
    proteinEffect_not: _EditableProteinEffectFilter
    # proteinEffect_not_in
    proteinEffect_not_in: _EditableProteinEffectFilter
    # regionType
    regionType: RegionType
    # regionType_in
    regionType_in: [RegionType!]
    # regionType_not
    regionType_not: RegionType
    # regionType_not_in
    regionType_not_in: [RegionType!]
    # regionValue
    regionValue: _EditableIntFilter
    # regionValue_in
    regionValue_in: _EditableIntFilter
    # regionValue_not
    regionValue_not: _EditableIntFilter
    # regionValue_not_in
    regionValue_not_in: _EditableIntFilter
    # variantType
    variantType: VariantType
    # variantType_in
    variantType_in: [VariantType!]
    # variantType_not
    variantType_not: VariantType
    # variantType_not_in
    variantType_not_in: [VariantType!]
}

# Ordering Enum for VariantRegion
enum _VariantRegionOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for indelType
    indelType_asc
    # Descending sort for indelType
    indelType_desc
    # Ascending sort for regionType
    regionType_asc
    # Descending sort for regionType
    regionType_desc
    # Ascending sort for variantType
    variantType_asc
    # Descending sort for variantType
    variantType_desc
}

# Filter Input Type for VariantSNVIndel
input _VariantSNVIndelFilter {
    # AND
    AND: [_VariantSNVIndelFilter!]
    # OR
    OR: [_VariantSNVIndelFilter!]
    # cDot
    cDot: _EditableStatementFilter
    # cDot_in
    cDot_in: _EditableStatementFilter
    # cDot_not
    cDot_not: _EditableStatementFilter
    # cDot_not_in
    cDot_not_in: _EditableStatementFilter
    # clinVarVariant
    clinVarVariant: _ClinVarVariantFilter
    # clinVarVariant_in
    clinVarVariant_in: _ClinVarVariantFilter
    # clinVarVariant_not
    clinVarVariant_not: _ClinVarVariantFilter
    # clinVarVariant_not_in
    clinVarVariant_not_in: _ClinVarVariantFilter
    # description
    description: _EditableStatementFilter
    # description_in
    description_in: _EditableStatementFilter
    # description_not
    description_not: _EditableStatementFilter
    # description_not_in
    description_not_in: _EditableStatementFilter
    # exon
    exon: _EditableStatementFilter
    # exon_in
    exon_in: _EditableStatementFilter
    # exon_not
    exon_not: _EditableStatementFilter
    # exon_not_in
    exon_not_in: _EditableStatementFilter
    # gDot
    gDot: _EditableStatementFilter
    # gDot_in
    gDot_in: _EditableStatementFilter
    # gDot_not
    gDot_not: _EditableStatementFilter
    # gDot_not_in
    gDot_not_in: _EditableStatementFilter
    # gene
    gene: _OmniGeneFilter
    # gene_in
    gene_in: _OmniGeneFilter
    # gene_not
    gene_not: _OmniGeneFilter
    # gene_not_in
    gene_not_in: _OmniGeneFilter
    # goVariant
    goVariant: _GOVariantFilter
    # goVariant_in
    goVariant_in: _GOVariantFilter
    # goVariant_not
    goVariant_not: _GOVariantFilter
    # goVariant_not_in
    goVariant_not_in: _GOVariantFilter
    # hotSpotVariant
    hotSpotVariant: _HotSpotVariantFilter
    # hotSpotVariant_in
    hotSpotVariant_in: _HotSpotVariantFilter
    # hotSpotVariant_not
    hotSpotVariant_not: _HotSpotVariantFilter
    # hotSpotVariant_not_in
    hotSpotVariant_not_in: _HotSpotVariantFilter
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # indelType
    indelType: IndelType
    # indelType_in
    indelType_in: [IndelType!]
    # indelType_not
    indelType_not: IndelType
    # indelType_not_in
    indelType_not_in: [IndelType!]
    # jaxVariant
    jaxVariant: _JaxVariantFilter
    # jaxVariant_in
    jaxVariant_in: _JaxVariantFilter
    # jaxVariant_not
    jaxVariant_not: _JaxVariantFilter
    # jaxVariant_not_in
    jaxVariant_not_in: _JaxVariantFilter
    # name
    name: _EditableStatementFilter
    # name_in
    name_in: _EditableStatementFilter
    # name_not
    name_not: _EditableStatementFilter
    # name_not_in
    name_not_in: _EditableStatementFilter
    # nonCanonicalTranscript
    nonCanonicalTranscript: _EditableStatementFilter
    # nonCanonicalTranscript_in
    nonCanonicalTranscript_in: _EditableStatementFilter
    # nonCanonicalTranscript_not
    nonCanonicalTranscript_not: _EditableStatementFilter
    # nonCanonicalTranscript_not_in
    nonCanonicalTranscript_not_in: _EditableStatementFilter
    # pDot
    pDot: _EditableStatementFilter
    # pDot_in
    pDot_in: _EditableStatementFilter
    # pDot_not
    pDot_not: _EditableStatementFilter
    # pDot_not_in
    pDot_not_in: _EditableStatementFilter
    # proteinEffect
    proteinEffect: _EditableProteinEffectFilter
    # proteinEffect_in
    proteinEffect_in: _EditableProteinEffectFilter
    # proteinEffect_not
    proteinEffect_not: _EditableProteinEffectFilter
    # proteinEffect_not_in
    proteinEffect_not_in: _EditableProteinEffectFilter
    # variantType
    variantType: VariantType
    # variantType_in
    variantType_in: [VariantType!]
    # variantType_not
    variantType_not: VariantType
    # variantType_not_in
    variantType_not_in: [VariantType!]
}

# Ordering Enum for VariantSNVIndel
enum _VariantSNVIndelOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for indelType
    indelType_asc
    # Descending sort for indelType
    indelType_desc
    # Ascending sort for variantType
    variantType_asc
    # Descending sort for variantType
    variantType_desc
}

# Filter Input Type for XRef
input _XRefFilter {
    # AND
    AND: [_XRefFilter!]
    # OR
    OR: [_XRefFilter!]
    # id
    id: ID
    # id_contains
    id_contains: ID
    # id_ends_with
    id_ends_with: ID
    # id_gt
    id_gt: ID
    # id_gte
    id_gte: ID
    # id_in
    id_in: [ID!]
    # id_lt
    id_lt: ID
    # id_lte
    id_lte: ID
    # id_not
    id_not: ID
    # id_not_contains
    id_not_contains: ID
    # id_not_ends_with
    id_not_ends_with: ID
    # id_not_in
    id_not_in: [ID!]
    # id_not_starts_with
    id_not_starts_with: ID
    # id_starts_with
    id_starts_with: ID
    # source
    source: String
    # sourceId
    sourceId: String
    # sourceId_contains
    sourceId_contains: String
    # sourceId_ends_with
    sourceId_ends_with: String
    # sourceId_gt
    sourceId_gt: String
    # sourceId_gte
    sourceId_gte: String
    # sourceId_in
    sourceId_in: [String!]
    # sourceId_lt
    sourceId_lt: String
    # sourceId_lte
    sourceId_lte: String
    # sourceId_not
    sourceId_not: String
    # sourceId_not_contains
    sourceId_not_contains: String
    # sourceId_not_ends_with
    sourceId_not_ends_with: String
    # sourceId_not_in
    sourceId_not_in: [String!]
    # sourceId_not_starts_with
    sourceId_not_starts_with: String
    # sourceId_starts_with
    sourceId_starts_with: String
    # source_contains
    source_contains: String
    # source_ends_with
    source_ends_with: String
    # source_gt
    source_gt: String
    # source_gte
    source_gte: String
    # source_in
    source_in: [String!]
    # source_lt
    source_lt: String
    # source_lte
    source_lte: String
    # source_not
    source_not: String
    # source_not_contains
    source_not_contains: String
    # source_not_ends_with
    source_not_ends_with: String
    # source_not_in
    source_not_in: [String!]
    # source_not_starts_with
    source_not_starts_with: String
    # source_starts_with
    source_starts_with: String
}

# Ordering Enum for XRef
enum _XRefOrdering {
    # Ascending sort for id
    id_asc
    # Descending sort for id
    id_desc
    # Ascending sort for sourceId
    sourceId_asc
    # Descending sort for sourceId
    sourceId_desc
    # Ascending sort for source
    source_asc
    # Descending sort for source
    source_desc
}

# AdverseEvent-Node
type AdverseEvent {
    # internal node id
    _id: Long
    # grade of  AdverseEvent
    grade: Int
    # id of  AdverseEvent
    id: ID!
    # name of  AdverseEvent
    name: String!
}

# Enum for AssayComparator
enum AssayComparator {
    # ABOVE BELOW
    Equals
    # Value for EqualsMin
    EqualsMin
    # value must equal resultString
    EqualsString
    # Range  range inclusive of min/max [min,max]
    RangeClosed
    # range inclusive of min and exclusive of max [min,max)
    RangeClosedOpen
    # range exclusive of min/max (min,max)
    RangeOpen
    # range exclusive of min and inclusive of max (min,max]
    RangeOpenClosed
}

# Author-Node
type Author {
    # internal node id
    _id: Long
    # firstInitial of  Author
    firstInitial: String!
    # id of  Author
    id: ID!
    # Author references LiteratureReference
    references(
        # DOI of LiteratureReference
        DOI: String
        # DOIs is list variant of DOI of LiteratureReference
        DOIs: [String]
        # PMID of LiteratureReference
        PMID: String
        # PMIDs is list variant of PMID of LiteratureReference
        PMIDs: [String]
        _id: Long
        _ids: [Long]
        # abstract of LiteratureReference
        abstract: String
        # abstracts is list variant of abstract of LiteratureReference
        abstracts: [String]
        filter: _LiteratureReferenceFilter
        first: Int
        # firstPage of LiteratureReference
        firstPage: String
        # firstPages is list variant of firstPage of LiteratureReference
        firstPages: [String]
        # id of LiteratureReference
        id: ID
        # ids is list variant of id of LiteratureReference
        ids: [ID]
        # lastPage of LiteratureReference
        lastPage: String
        # lastPages is list variant of lastPage of LiteratureReference
        lastPages: [String]
        offset: Int
        orderBy: [_LiteratureReferenceOrdering]
        # publicationYear of LiteratureReference
        publicationYear: String
        # publicationYears is list variant of publicationYear of LiteratureReference
        publicationYears: [String]
        # shortReference of LiteratureReference
        shortReference: String
        # shortReferences is list variant of shortReference of LiteratureReference
        shortReferences: [String]
        # title of LiteratureReference
        title: String
        # titles is list variant of title of LiteratureReference
        titles: [String]
        # volume of LiteratureReference
        volume: String
        # volumes is list variant of volume of LiteratureReference
        volumes: [String]
    ): [LiteratureReference!]!
    # surname of  Author
    surname: String!
}

# could transform current clinicaltrials.gov pipeline to create trial objects
type ClinicalTrial {
    # internal node id
    _id: Long
    # acronym of  ClinicalTrial
    acronym: String
    # briefTitle of  ClinicalTrial
    briefTitle: String
    # id of  ClinicalTrial
    id: ID!
    # name of  ClinicalTrial
    name: String!
    # officialTitle of  ClinicalTrial
    officialTitle: String!
    # ClinicalTrial references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference!]!
    # resource of  ClinicalTrial
    resource: String!
    # resourceId of  ClinicalTrial
    resourceId: String!
}

# ClinVarVariant-Node
type ClinVarVariant {
    # internal node id
    _id: Long
    # cDot of  ClinVarVariant
    cDot: String!
    # gene of  ClinVarVariant
    gene: String!
    # ClinVarVariant genomicVariant GenomicVariant
    genomicVariant(
        filter: _GenomicVariantFilter
        # id of GenomicVariant
        id: ID
        # ids is list variant of id of GenomicVariant
        ids: [ID]
        orderBy: [_GenomicVariantOrdering]
    ): GenomicVariant
    # id of  ClinVarVariant
    id: ID!
    # pDot of  ClinVarVariant
    pDot: String!
    # ClinVarVariant signficanceExplanation EditableStatement
    signficanceExplanation(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # ClinVarVariant significance EditableStatement
    significance(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # variantId of  ClinVarVariant
    variantId: String!
}

# Enum for CNVType
enum CNVType {
    # Value for Gain
    Gain
    # Value for Indeterminate
    Indeterminate
    # Value for Loss
    Loss
    # Value for Unknown
    Unknown
}

# DNAMarker-Node
type DNAMarker implements MarkerComponent {
    # internal node id
    _id: Long
    # DNAMarker definition EditableStatement
    definition(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # id of  DNAMarker
    id: ID!
    # markerType of  DNAMarker
    markerType: DNAMarkerType!
    # DNAMarker method EditableStatement
    method(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # DNAMarker name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # DNAMarker resultString EditableStatement
    resultString(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

# Enum for DNAMarkerType
enum DNAMarkerType {
    # Value for Karyotype
    Karyotype
    # Value for MicrosatelliteInstabilityLocus
    MicrosatelliteInstabilityLocus
}

# DODisease-Node
type DODisease {
    # internal node id
    _id: Long
    # DODisease children DODisease
    children(
        _id: Long
        _ids: [Long]
        # doId of DODisease
        doId: String
        # doIds is list variant of doId of DODisease
        doIds: [String]
        filter: _DODiseaseFilter
        first: Int
        # id of DODisease
        id: ID
        # ids is list variant of id of DODisease
        ids: [ID]
        offset: Int
        orderBy: [_DODiseaseOrdering]
    ): [DODisease]!
    # DODisease definition EditableStatement
    definition(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # doId of  DODisease
    doId: String!
    # DODisease exactSynonyms EditableStringList
    exactSynonyms(
        # editDate of EditableStringList
        editDate: String
        # editDates is list variant of editDate of EditableStringList
        editDates: [String]
        # field of EditableStringList
        field: String
        # fields is list variant of field of EditableStringList
        fields: [String]
        filter: _EditableStringListFilter
        # id of EditableStringList
        id: ID
        # ids is list variant of id of EditableStringList
        ids: [ID]
        orderBy: [_EditableStringListOrdering]
        # stringList of EditableStringList
        stringList: [String]
        # stringLists is list variant of stringList of EditableStringList
        stringLists: [[String]]
    ): EditableStringList
    # id of  DODisease
    id: ID!
    # DODisease name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # DODisease narrowSynonyms EditableStringList
    narrowSynonyms(
        # editDate of EditableStringList
        editDate: String
        # editDates is list variant of editDate of EditableStringList
        editDates: [String]
        # field of EditableStringList
        field: String
        # fields is list variant of field of EditableStringList
        fields: [String]
        filter: _EditableStringListFilter
        # id of EditableStringList
        id: ID
        # ids is list variant of id of EditableStringList
        ids: [ID]
        orderBy: [_EditableStringListOrdering]
        # stringList of EditableStringList
        stringList: [String]
        # stringLists is list variant of stringList of EditableStringList
        stringLists: [[String]]
    ): EditableStringList
    # DODisease parents DODisease
    parents(
        _id: Long
        _ids: [Long]
        # doId of DODisease
        doId: String
        # doIds is list variant of doId of DODisease
        doIds: [String]
        filter: _DODiseaseFilter
        first: Int
        # id of DODisease
        id: ID
        # ids is list variant of id of DODisease
        ids: [ID]
        offset: Int
        orderBy: [_DODiseaseOrdering]
    ): [DODisease]!
    # DODisease relatedSynonyms EditableStringList
    relatedSynonyms(
        # editDate of EditableStringList
        editDate: String
        # editDates is list variant of editDate of EditableStringList
        editDates: [String]
        # field of EditableStringList
        field: String
        # fields is list variant of field of EditableStringList
        fields: [String]
        filter: _EditableStringListFilter
        # id of EditableStringList
        id: ID
        # ids is list variant of id of EditableStringList
        ids: [ID]
        orderBy: [_EditableStringListOrdering]
        # stringList of EditableStringList
        stringList: [String]
        # stringLists is list variant of stringList of EditableStringList
        stringLists: [[String]]
    ): EditableStringList
    # DODisease subsets EditableStringList
    subsets(
        # editDate of EditableStringList
        editDate: String
        # editDates is list variant of editDate of EditableStringList
        editDates: [String]
        # field of EditableStringList
        field: String
        # fields is list variant of field of EditableStringList
        fields: [String]
        filter: _EditableStringListFilter
        # id of EditableStringList
        id: ID
        # ids is list variant of id of EditableStringList
        ids: [ID]
        orderBy: [_EditableStringListOrdering]
        # stringList of EditableStringList
        stringList: [String]
        # stringLists is list variant of stringList of EditableStringList
        stringLists: [[String]]
    ): EditableStringList!
    # DODisease xrefs EditableXRefList
    xrefs(
        # editDate of EditableXRefList
        editDate: String
        # editDates is list variant of editDate of EditableXRefList
        editDates: [String]
        # field of EditableXRefList
        field: String
        # fields is list variant of field of EditableXRefList
        fields: [String]
        filter: _EditableXRefListFilter
        # id of EditableXRefList
        id: ID
        # ids is list variant of id of EditableXRefList
        ids: [ID]
        orderBy: [_EditableXRefListOrdering]
    ): EditableXRefList!
}

# DrugCategory-Node
type DrugCategory {
    # internal node id
    _id: Long
    # DrugCategory definition EditableStatement
    definition(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # DrugCategory drugs OmniDrug
    drugs(
        _id: Long
        _ids: [Long]
        filter: _OmniDrugFilter
        first: Int
        # id of OmniDrug
        id: ID
        # ids is list variant of id of OmniDrug
        ids: [ID]
        offset: Int
        orderBy: [_OmniDrugOrdering]
    ): [OmniDrug]!
    # id of  DrugCategory
    id: ID!
    # DrugCategory jaxDrugClass JaxDrugClass
    jaxDrugClass(
        _id: Long
        _ids: [Long]
        filter: _JaxDrugClassFilter
        first: Int
        # id of JaxDrugClass
        id: ID
        # ids is list variant of id of JaxDrugClass
        ids: [ID]
        # jaxId of JaxDrugClass
        jaxId: String
        # jaxIds is list variant of jaxId of JaxDrugClass
        jaxIds: [String]
        offset: Int
        orderBy: [_JaxDrugClassOrdering]
    ): [JaxDrugClass]!
    # DrugCategory name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

# EditableAssayComparator-Node
type EditableAssayComparator implements EditableObject {
    # internal node id
    _id: Long
    # comparator of  EditableAssayComparator
    comparator: AssayComparator!
    # editDate of  EditableAssayComparator
    editDate: String!
    # EditableAssayComparator editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableAssayComparator
    field: String!
    # id of  EditableAssayComparator
    id: ID!
    # EditableAssayComparator references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableBoolean-Node
type EditableBoolean implements EditableObject {
    # internal node id
    _id: Long
    # booleanValue of  EditableBoolean
    booleanValue: ExtendedBoolean!
    # editDate of  EditableBoolean
    editDate: String!
    # EditableBoolean editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableBoolean
    field: String!
    # id of  EditableBoolean
    id: ID!
    # EditableBoolean references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableCopyChange-Node
type EditableCopyChange implements EditableObject {
    # internal node id
    _id: Long
    # cnvType of  EditableCopyChange
    cnvType: CNVType!
    # editDate of  EditableCopyChange
    editDate: String!
    # EditableCopyChange editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableCopyChange
    field: String!
    # id of  EditableCopyChange
    id: ID!
    # EditableCopyChange references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableDODiseaseList-Node
type EditableDODiseaseList implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableDODiseaseList
    editDate: String!
    # EditableDODiseaseList editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableDODiseaseList
    field: String!
    # id of  EditableDODiseaseList
    id: ID!
    # EditableDODiseaseList list DODisease
    list(
        _id: Long
        _ids: [Long]
        # doId of DODisease
        doId: String
        # doIds is list variant of doId of DODisease
        doIds: [String]
        filter: _DODiseaseFilter
        first: Int
        # id of DODisease
        id: ID
        # ids is list variant of id of DODisease
        ids: [ID]
        offset: Int
        orderBy: [_DODiseaseOrdering]
    ): [DODisease]!
    # EditableDODiseaseList references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableFloat-Node
type EditableFloat implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableFloat
    editDate: String!
    # EditableFloat editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableFloat
    field: String!
    # floatValue of  EditableFloat
    floatValue: Float!
    # id of  EditableFloat
    id: ID!
    # EditableFloat references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableGODiseaseList-Node
type EditableGODiseaseList implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableGODiseaseList
    editDate: String!
    # EditableGODiseaseList editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableGODiseaseList
    field: String!
    # id of  EditableGODiseaseList
    id: ID!
    # EditableGODiseaseList list GODisease
    list(
        _id: Long
        _ids: [Long]
        filter: _GODiseaseFilter
        first: Int
        # goId of GODisease
        goId: String
        # goIds is list variant of goId of GODisease
        goIds: [String]
        # id of GODisease
        id: ID
        # ids is list variant of id of GODisease
        ids: [ID]
        offset: Int
        orderBy: [_GODiseaseOrdering]
    ): [GODisease]!
    # EditableGODiseaseList references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableImmuneCycleRole-Node
type EditableImmuneCycleRole implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableImmuneCycleRole
    editDate: String!
    # EditableImmuneCycleRole editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableImmuneCycleRole
    field: String!
    # id of  EditableImmuneCycleRole
    id: ID!
    # immuneCycleRole of  EditableImmuneCycleRole
    immuneCycleRole: ImmuneCycleRole!
    # EditableImmuneCycleRole references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableImmuneFunction-Node
type EditableImmuneFunction implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableImmuneFunction
    editDate: String!
    # EditableImmuneFunction editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableImmuneFunction
    field: String!
    # id of  EditableImmuneFunction
    id: ID!
    # immuneFunction of  EditableImmuneFunction
    immuneFunction: ImmuneFunction!
    # EditableImmuneFunction references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableImmunePhenotype-Node
type EditableImmunePhenotype implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableImmunePhenotype
    editDate: String!
    # EditableImmunePhenotype editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableImmunePhenotype
    field: String!
    # id of  EditableImmunePhenotype
    id: ID!
    # immunePhenotype of  EditableImmunePhenotype
    immunePhenotype: ImmunePhenotype!
    # EditableImmunePhenotype references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableInt-Node
type EditableInt implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableInt
    editDate: String!
    # EditableInt editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableInt
    field: String!
    # id of  EditableInt
    id: ID!
    # intValue of  EditableInt
    intValue: Int!
    # EditableInt references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableJAXDiseaseList-Node
type EditableJAXDiseaseList implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableJAXDiseaseList
    editDate: String!
    # EditableJAXDiseaseList editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableJAXDiseaseList
    field: String!
    # id of  EditableJAXDiseaseList
    id: ID!
    # EditableJAXDiseaseList list JaxDisease
    list(
        _id: Long
        _ids: [Long]
        filter: _JaxDiseaseFilter
        first: Int
        # id of JaxDisease
        id: ID
        # ids is list variant of id of JaxDisease
        ids: [ID]
        # jaxId of JaxDisease
        jaxId: String
        # jaxIds is list variant of jaxId of JaxDisease
        jaxIds: [String]
        offset: Int
        orderBy: [_JaxDiseaseOrdering]
        # source of JaxDisease
        source: String
        # sources is list variant of source of JaxDisease
        sources: [String]
        # termId of JaxDisease
        termId: String
        # termIds is list variant of termId of JaxDisease
        termIds: [String]
    ): [JaxDisease]!
    # EditableJAXDiseaseList references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableMarkerComponentList-Node
type EditableMarkerComponentList implements EditableObject {
    # internal node id
    _id: Long
    # EditableMarkerComponentList components MarkerComponent
    components(
        _id: Long
        _ids: [Long]
        filter: _MarkerComponentFilter
        first: Int
        # id of MarkerComponent
        id: ID
        # ids is list variant of id of MarkerComponent
        ids: [ID]
        offset: Int
        orderBy: [_MarkerComponentOrdering]
    ): [MarkerComponent]!
    # editDate of  EditableMarkerComponentList
    editDate: String!
    # EditableMarkerComponentList editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableMarkerComponentList
    field: String!
    # id of  EditableMarkerComponentList
    id: ID!
    # EditableMarkerComponentList references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableObject-Node
interface EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableObject
    editDate: String!
    # EditableObject editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableObject
    field: String!
    # id of  EditableObject
    id: ID!
    # EditableObject references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableOmniConjunction-Node
type EditableOmniConjunction implements EditableObject {
    # internal node id
    _id: Long
    # conjunction of  EditableOmniConjunction
    conjunction: OmniConjunction!
    # editDate of  EditableOmniConjunction
    editDate: String!
    # EditableOmniConjunction editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableOmniConjunction
    field: String!
    # id of  EditableOmniConjunction
    id: ID!
    # EditableOmniConjunction references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableOmniGeneList-Node
type EditableOmniGeneList implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableOmniGeneList
    editDate: String!
    # EditableOmniGeneList editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableOmniGeneList
    field: String!
    # EditableOmniGeneList genes OmniGene
    genes(
        _id: Long
        _ids: [Long]
        filter: _OmniGeneFilter
        first: Int
        # id of OmniGene
        id: ID
        # ids is list variant of id of OmniGene
        ids: [ID]
        # name of OmniGene
        name: String
        # names is list variant of name of OmniGene
        names: [String]
        # namess is list variant of names of OmniGene
        namess: [String]
        offset: Int
        orderBy: [_OmniGeneOrdering]
    ): [OmniGene]!
    # id of  EditableOmniGeneList
    id: ID!
    # EditableOmniGeneList references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableOmniGeneReference-Node
type EditableOmniGeneReference implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableOmniGeneReference
    editDate: String!
    # EditableOmniGeneReference editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableOmniGeneReference
    field: String!
    # EditableOmniGeneReference gene OmniGene
    gene(
        filter: _OmniGeneFilter
        # id of OmniGene
        id: ID
        # ids is list variant of id of OmniGene
        ids: [ID]
        # name of OmniGene
        name: String
        # names is list variant of name of OmniGene
        names: [String]
        # namess is list variant of names of OmniGene
        namess: [String]
        orderBy: [_OmniGeneOrdering]
    ): OmniGene!
    # id of  EditableOmniGeneReference
    id: ID!
    # EditableOmniGeneReference references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableOmniMapList-Node
type EditableOmniMapList {
    # internal node id
    _id: Long
    # editDate of  EditableOmniMapList
    editDate: String!
    # EditableOmniMapList editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableOmniMapList
    field: String!
    # id of  EditableOmniMapList
    id: ID!
    # EditableOmniMapList list OmniMap
    list(
        _id: Long
        _ids: [Long]
        filter: _OmniMapFilter
        first: Int
        # id of OmniMap
        id: ID
        # ids is list variant of id of OmniMap
        ids: [ID]
        offset: Int
        orderBy: [_OmniMapOrdering]
    ): [OmniMap]!
    # EditableOmniMapList references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableOncoTreeDiseaseList-Node
type EditableOncoTreeDiseaseList implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableOncoTreeDiseaseList
    editDate: String!
    # EditableOncoTreeDiseaseList editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableOncoTreeDiseaseList
    field: String!
    # id of  EditableOncoTreeDiseaseList
    id: ID!
    # EditableOncoTreeDiseaseList list OncoTreeDisease
    list(
        _id: Long
        _ids: [Long]
        # code of OncoTreeDisease
        code: String
        # codes is list variant of code of OncoTreeDisease
        codes: [String]
        filter: _OncoTreeDiseaseFilter
        first: Int
        # id of OncoTreeDisease
        id: ID
        # ids is list variant of id of OncoTreeDisease
        ids: [ID]
        offset: Int
        orderBy: [_OncoTreeDiseaseOrdering]
    ): [OncoTreeDisease]!
    # EditableOncoTreeDiseaseList references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableProteinEffect-Node
type EditableProteinEffect implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableProteinEffect
    editDate: String!
    # EditableProteinEffect editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableProteinEffect
    field: String!
    # id of  EditableProteinEffect
    id: ID!
    # proteinEffect of  EditableProteinEffect
    proteinEffect: VariantProteinEffect!
    # EditableProteinEffect references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# EditableRNASeqResultType-Node
type EditableRNASeqResultType implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableRNASeqResultType
    editDate: String!
    # EditableRNASeqResultType editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableRNASeqResultType
    field: String!
    # id of  EditableRNASeqResultType
    id: ID!
    # EditableRNASeqResultType references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
    # resultType of  EditableRNASeqResultType
    resultType: RNASeqResultType!
}

# EditableStatement-Node
type EditableStatement implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableStatement
    editDate: String!
    # EditableStatement editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableStatement
    field: String!
    # id of  EditableStatement
    id: ID!
    # EditableStatement references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
    # statement of  EditableStatement
    statement: String!
}

# EditableStringList-Node
type EditableStringList implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableStringList
    editDate: String!
    # EditableStringList editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableStringList
    field: String!
    # id of  EditableStringList
    id: ID!
    # EditableStringList references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
    # stringList of  EditableStringList
    stringList: [String]!
}

# EditableTMBInterpretation-Node
type EditableTMBInterpretation implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableTMBInterpretation
    editDate: String!
    # EditableTMBInterpretation editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableTMBInterpretation
    field: String!
    # id of  EditableTMBInterpretation
    id: ID!
    # EditableTMBInterpretation references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
    # tmbInterpretation of  EditableTMBInterpretation
    tmbInterpretation: TMBInterpretationType!
}

# EditableXRefList-Node
type EditableXRefList implements EditableObject {
    # internal node id
    _id: Long
    # editDate of  EditableXRefList
    editDate: String!
    # EditableXRefList editor User
    editor(
        filter: _UserFilter
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): User!
    # field of  EditableXRefList
    field: String!
    # id of  EditableXRefList
    id: ID!
    # EditableXRefList list XRef
    list(
        _id: Long
        _ids: [Long]
        filter: _XRefFilter
        first: Int
        # id of XRef
        id: ID
        # ids is list variant of id of XRef
        ids: [ID]
        offset: Int
        orderBy: [_XRefOrdering]
        # source of XRef
        source: String
        # sourceId of XRef
        sourceId: String
        # sourceIds is list variant of sourceId of XRef
        sourceIds: [String]
        # sources is list variant of source of XRef
        sources: [String]
    ): [XRef]!
    # EditableXRefList references Reference
    references(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]!
}

# do we need Evidence & Outcomes to implement NamedEntity?
type Evidence {
    # internal node id
    _id: Long
    # Evidence adverseEvents AdverseEvent
    adverseEvents(
        _id: Long
        _ids: [Long]
        filter: _AdverseEventFilter
        first: Int
        # grade of AdverseEvent
        grade: Int
        # grades is list variant of grade of AdverseEvent
        grades: [Int]
        # id of AdverseEvent
        id: ID
        # ids is list variant of id of AdverseEvent
        ids: [ID]
        # name of AdverseEvent
        name: String
        # names is list variant of name of AdverseEvent
        names: [String]
        offset: Int
        orderBy: [_AdverseEventOrdering]
    ): [AdverseEvent]
    # ampCapAscoTier of  Evidence
    ampCapAscoTier: String!
    # approvalStatus of  Evidence
    approvalStatus: String!
    # Evidence evidenceAssociation EvidenceAssociation
    evidenceAssociation(
        _id: Long
        _ids: [Long]
        filter: _EvidenceAssociationFilter
        first: Int
        # id of EvidenceAssociation
        id: ID
        # ids is list variant of id of EvidenceAssociation
        ids: [ID]
        # name of EvidenceAssociation
        name: String
        # names is list variant of name of EvidenceAssociation
        names: [String]
        offset: Int
        orderBy: [_EvidenceAssociationOrdering]
    ): [EvidenceAssociation]!
    # evidenceType of  Evidence
    evidenceType: EvidenceType!
    # id of  Evidence
    id: ID!
    # notes of  Evidence
    notes: String!
    # Evidence outcomes Outcome
    outcomes(
        # ConfidenceIntervalHi of Outcome
        ConfidenceIntervalHi: Float
        # ConfidenceIntervalHis is list variant of ConfidenceIntervalHi of Outcome
        ConfidenceIntervalHis: [Float]
        # ConfidenceIntervalLo of Outcome
        ConfidenceIntervalLo: Float
        # ConfidenceIntervalLos is list variant of ConfidenceIntervalLo of Outcome
        ConfidenceIntervalLos: [Float]
        # ConfidenceIntervalType of Outcome
        ConfidenceIntervalType: String
        # ConfidenceIntervalTypes is list variant of ConfidenceIntervalType of Outcome
        ConfidenceIntervalTypes: [String]
        _id: Long
        _ids: [Long]
        # clinicalCharacteristics of Outcome
        clinicalCharacteristics: [String]
        # clinicalCharacteristicss is list variant of clinicalCharacteristics of Outcome
        clinicalCharacteristicss: [[String]]
        # dose of Outcome
        dose: Int
        # doseUnit of Outcome
        doseUnit: String
        # doseUnits is list variant of doseUnit of Outcome
        doseUnits: [String]
        # doses is list variant of dose of Outcome
        doses: [Int]
        # endpoint of Outcome
        endpoint: EvidenceEndpoint
        # endpoints is list variant of endpoint of Outcome
        endpoints: [EvidenceEndpoint]
        filter: _OutcomeFilter
        first: Int
        # groupSize of Outcome
        groupSize: Int
        # groupSizes is list variant of groupSize of Outcome
        groupSizes: [Int]
        # id of Outcome
        id: ID
        # ids is list variant of id of Outcome
        ids: [ID]
        # notes of Outcome
        notes: String
        # notess is list variant of notes of Outcome
        notess: [String]
        # observation of Outcome
        observation: String
        # observationMethod of Outcome
        observationMethod: String
        # observationMethods is list variant of observationMethod of Outcome
        observationMethods: [String]
        # observations is list variant of observation of Outcome
        observations: [String]
        offset: Int
        orderBy: [_OutcomeOrdering]
        # outcome of Outcome
        outcome: Float
        # outcomeRangeMax of Outcome
        outcomeRangeMax: Float
        # outcomeRangeMaxs is list variant of outcomeRangeMax of Outcome
        outcomeRangeMaxs: [Float]
        # outcomeRangeMin of Outcome
        outcomeRangeMin: Float
        # outcomeRangeMins is list variant of outcomeRangeMin of Outcome
        outcomeRangeMins: [Float]
        # outcomeUnit of Outcome
        outcomeUnit: String
        # outcomeUnits is list variant of outcomeUnit of Outcome
        outcomeUnits: [String]
        # outcomes is list variant of outcome of Outcome
        outcomes: [Float]
        # treatmentGroup of Outcome
        treatmentGroup: String
        # treatmentGroups is list variant of treatmentGroup of Outcome
        treatmentGroups: [String]
    ): [Outcome]!
    # Evidence reference LiteratureReference
    reference(
        # DOI of LiteratureReference
        DOI: String
        # DOIs is list variant of DOI of LiteratureReference
        DOIs: [String]
        # PMID of LiteratureReference
        PMID: String
        # PMIDs is list variant of PMID of LiteratureReference
        PMIDs: [String]
        # abstract of LiteratureReference
        abstract: String
        # abstracts is list variant of abstract of LiteratureReference
        abstracts: [String]
        filter: _LiteratureReferenceFilter
        # firstPage of LiteratureReference
        firstPage: String
        # firstPages is list variant of firstPage of LiteratureReference
        firstPages: [String]
        # id of LiteratureReference
        id: ID
        # ids is list variant of id of LiteratureReference
        ids: [ID]
        # lastPage of LiteratureReference
        lastPage: String
        # lastPages is list variant of lastPage of LiteratureReference
        lastPages: [String]
        orderBy: [_LiteratureReferenceOrdering]
        # publicationYear of LiteratureReference
        publicationYear: String
        # publicationYears is list variant of publicationYear of LiteratureReference
        publicationYears: [String]
        # shortReference of LiteratureReference
        shortReference: String
        # shortReferences is list variant of shortReference of LiteratureReference
        shortReferences: [String]
        # title of LiteratureReference
        title: String
        # titles is list variant of title of LiteratureReference
        titles: [String]
        # volume of LiteratureReference
        volume: String
        # volumes is list variant of volume of LiteratureReference
        volumes: [String]
    ): LiteratureReference!
    # responseType of  Evidence
    responseType: ResponseType!
}

# EvidenceAssociation-Node
type EvidenceAssociation {
    # internal node id
    _id: Long
    # EvidenceAssociation disease OntologicalDisease
    disease(
        filter: _OntologicalDiseaseFilter
        # id of OntologicalDisease
        id: ID
        # ids is list variant of id of OntologicalDisease
        ids: [ID]
        orderBy: [_OntologicalDiseaseOrdering]
    ): OntologicalDisease
    # EvidenceAssociation evidences Evidence
    evidences(
        _id: Long
        _ids: [Long]
        # ampCapAscoTier of Evidence
        ampCapAscoTier: String
        # ampCapAscoTiers is list variant of ampCapAscoTier of Evidence
        ampCapAscoTiers: [String]
        # approvalStatus of Evidence
        approvalStatus: String
        # approvalStatuss is list variant of approvalStatus of Evidence
        approvalStatuss: [String]
        # evidenceType of Evidence
        evidenceType: EvidenceType
        # evidenceTypes is list variant of evidenceType of Evidence
        evidenceTypes: [EvidenceType]
        filter: _EvidenceFilter
        first: Int
        # id of Evidence
        id: ID
        # ids is list variant of id of Evidence
        ids: [ID]
        # notes of Evidence
        notes: String
        # notess is list variant of notes of Evidence
        notess: [String]
        offset: Int
        orderBy: [_EvidenceOrdering]
        # responseType of Evidence
        responseType: ResponseType
        # responseTypes is list variant of responseType of Evidence
        responseTypes: [ResponseType]
    ): [Evidence]!
    # id of  EvidenceAssociation
    id: ID!
    # EvidenceAssociation marker MarkerProfile
    marker(
        filter: _MarkerProfileFilter
        # id of MarkerProfile
        id: ID
        # ids is list variant of id of MarkerProfile
        ids: [ID]
        orderBy: [_MarkerProfileOrdering]
    ): MarkerProfile
    # name of  EvidenceAssociation
    name: String!
    # EvidenceAssociation therapy TherapeuticIntervention
    therapy(
        filter: _TherapeuticInterventionFilter
        # id of TherapeuticIntervention
        id: ID
        # ids is list variant of id of TherapeuticIntervention
        ids: [ID]
        orderBy: [_TherapeuticInterventionOrdering]
    ): TherapeuticIntervention
}

# Enum for EvidenceEndpoint
enum EvidenceEndpoint {
    # Value for CompleteResponse
    CompleteResponse
    # Value for DiseaseControlRate
    DiseaseControlRate
    # Value for ObjectiveResponse
    ObjectiveResponse
    # Value for OverallSurvival
    OverallSurvival
    # Value for PartialResponse
    PartialResponse
    # Value for ProgressionFreeSurvival
    ProgressionFreeSurvival
    # Value for ProgressionFreeSurvival12Month
    ProgressionFreeSurvival12Month
    # Value for ProgressionFreeSurvival6Month
    ProgressionFreeSurvival6Month
    # Value for ResponseRate
    ResponseRate
}

# Enum for EvidenceType
enum EvidenceType {
    # Actionable
    Concensus
    # Value for Emerging
    Emerging
}

# Enum for ExtendedBoolean
enum ExtendedBoolean {
    # Value for Any
    Any
    # Value for False
    False
    # Value for True
    True
    # Value for Unknown
    Unknown
}

# GenomicVariant-Node
interface GenomicVariant {
    # internal node id
    _id: Long
    # GenomicVariant clinVarVariant ClinVarVariant
    clinVarVariant(
        # cDot of ClinVarVariant
        cDot: String
        # cDots is list variant of cDot of ClinVarVariant
        cDots: [String]
        filter: _ClinVarVariantFilter
        # gene of ClinVarVariant
        gene: String
        # genes is list variant of gene of ClinVarVariant
        genes: [String]
        # id of ClinVarVariant
        id: ID
        # ids is list variant of id of ClinVarVariant
        ids: [ID]
        orderBy: [_ClinVarVariantOrdering]
        # pDot of ClinVarVariant
        pDot: String
        # pDots is list variant of pDot of ClinVarVariant
        pDots: [String]
        # variantId of ClinVarVariant
        variantId: String
        # variantIds is list variant of variantId of ClinVarVariant
        variantIds: [String]
    ): ClinVarVariant
    # GenomicVariant description EditableStatement
    description(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # GenomicVariant gene OmniGene
    gene(
        filter: _OmniGeneFilter
        # id of OmniGene
        id: ID
        # ids is list variant of id of OmniGene
        ids: [ID]
        # name of OmniGene
        name: String
        # names is list variant of name of OmniGene
        names: [String]
        # namess is list variant of names of OmniGene
        namess: [String]
        orderBy: [_OmniGeneOrdering]
    ): OmniGene!
    # GenomicVariant goVariant GOVariant
    goVariant(
        filter: _GOVariantFilter
        # gene of GOVariant
        gene: String
        # genes is list variant of gene of GOVariant
        genes: [String]
        # goId of GOVariant
        goId: String
        # goIds is list variant of goId of GOVariant
        goIds: [String]
        # id of GOVariant
        id: ID
        # ids is list variant of id of GOVariant
        ids: [ID]
        # mutationType of GOVariant
        mutationType: String
        # mutationTypes is list variant of mutationType of GOVariant
        mutationTypes: [String]
        orderBy: [_GOVariantOrdering]
    ): GOVariant
    # GenomicVariant hotSpotVariant HotSpotVariant
    hotSpotVariant(
        # begin of HotSpotVariant
        begin: String
        # begins is list variant of begin of HotSpotVariant
        begins: [String]
        # end of HotSpotVariant
        end: String
        # ends is list variant of end of HotSpotVariant
        ends: [String]
        filter: _HotSpotVariantFilter
        # gene of HotSpotVariant
        gene: String
        # genes is list variant of gene of HotSpotVariant
        genes: [String]
        # id of HotSpotVariant
        id: ID
        # ids is list variant of id of HotSpotVariant
        ids: [ID]
        # name of HotSpotVariant
        name: String
        # names is list variant of name of HotSpotVariant
        names: [String]
        orderBy: [_HotSpotVariantOrdering]
        # position of HotSpotVariant
        position: Int
        # positions is list variant of position of HotSpotVariant
        positions: [Int]
        # referenceAminoAcid of HotSpotVariant
        referenceAminoAcid: String
        # referenceAminoAcids is list variant of referenceAminoAcid of HotSpotVariant
        referenceAminoAcids: [String]
        # variantAminoAcid of HotSpotVariant
        variantAminoAcid: String
        # variantAminoAcids is list variant of variantAminoAcid of HotSpotVariant
        variantAminoAcids: [String]
    ): HotSpotVariant
    # id of  GenomicVariant
    id: ID!
    # GenomicVariant jaxVariant JaxVariant
    jaxVariant(
        # cDot of JaxVariant
        cDot: String
        # cDots is list variant of cDot of JaxVariant
        cDots: [String]
        filter: _JaxVariantFilter
        # gDot of JaxVariant
        gDot: String
        # gDots is list variant of gDot of JaxVariant
        gDots: [String]
        # id of JaxVariant
        id: ID
        # ids is list variant of id of JaxVariant
        ids: [ID]
        # jaxId of JaxVariant
        jaxId: String
        # jaxIds is list variant of jaxId of JaxVariant
        jaxIds: [String]
        # name of JaxVariant
        name: String
        # names is list variant of name of JaxVariant
        names: [String]
        orderBy: [_JaxVariantOrdering]
        # pDot of JaxVariant
        pDot: String
        # pDots is list variant of pDot of JaxVariant
        pDots: [String]
        # variantType of JaxVariant
        variantType: String
        # variantTypes is list variant of variantType of JaxVariant
        variantTypes: [String]
    ): JaxVariant
    # GenomicVariant name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # GenomicVariant nonCanonicalTranscript EditableStatement
    nonCanonicalTranscript(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement
}

# GenomicVariantMarker-Node
type GenomicVariantMarker implements MarkerComponent {
    # internal node id
    _id: Long
    # GenomicVariantMarker gene OmniGene
    gene(
        filter: _OmniGeneFilter
        # id of OmniGene
        id: ID
        # ids is list variant of id of OmniGene
        ids: [ID]
        # name of OmniGene
        name: String
        # names is list variant of name of OmniGene
        names: [String]
        # namess is list variant of names of OmniGene
        namess: [String]
        orderBy: [_OmniGeneOrdering]
    ): OmniGene!
    # id of  GenomicVariantMarker
    id: ID!
    # GenomicVariantMarker method EditableStatement
    method(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # GenomicVariantMarker name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # GenomicVariantMarker resultString EditableStatement
    resultString(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # GenomicVariantMarker variant GenomicVariant
    variant(
        filter: _GenomicVariantFilter
        # id of GenomicVariant
        id: ID
        # ids is list variant of id of GenomicVariant
        ids: [ID]
        orderBy: [_GenomicVariantOrdering]
    ): GenomicVariant!
}

# GODisease-Node
type GODisease {
    # internal node id
    _id: Long
    # GODisease children GODisease
    children(
        _id: Long
        _ids: [Long]
        filter: _GODiseaseFilter
        first: Int
        # goId of GODisease
        goId: String
        # goIds is list variant of goId of GODisease
        goIds: [String]
        # id of GODisease
        id: ID
        # ids is list variant of id of GODisease
        ids: [ID]
        offset: Int
        orderBy: [_GODiseaseOrdering]
    ): [GODisease]!
    # GODisease definition EditableStatement
    definition(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # goId of  GODisease
    goId: String!
    # id of  GODisease
    id: ID!
    # GODisease jaxDiseases JaxDisease
    jaxDiseases(
        _id: Long
        _ids: [Long]
        filter: _JaxDiseaseFilter
        first: Int
        # id of JaxDisease
        id: ID
        # ids is list variant of id of JaxDisease
        ids: [ID]
        # jaxId of JaxDisease
        jaxId: String
        # jaxIds is list variant of jaxId of JaxDisease
        jaxIds: [String]
        offset: Int
        orderBy: [_JaxDiseaseOrdering]
        # source of JaxDisease
        source: String
        # sources is list variant of source of JaxDisease
        sources: [String]
        # termId of JaxDisease
        termId: String
        # termIds is list variant of termId of JaxDisease
        termIds: [String]
    ): [JaxDisease]!
    # GODisease name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # GODisease parents GODisease
    parents(
        _id: Long
        _ids: [Long]
        filter: _GODiseaseFilter
        first: Int
        # goId of GODisease
        goId: String
        # goIds is list variant of goId of GODisease
        goIds: [String]
        # id of GODisease
        id: ID
        # ids is list variant of id of GODisease
        ids: [ID]
        offset: Int
        orderBy: [_GODiseaseOrdering]
    ): [GODisease]
    # GODisease synonyms EditableStringList
    synonyms(
        # editDate of EditableStringList
        editDate: String
        # editDates is list variant of editDate of EditableStringList
        editDates: [String]
        # field of EditableStringList
        field: String
        # fields is list variant of field of EditableStringList
        fields: [String]
        filter: _EditableStringListFilter
        # id of EditableStringList
        id: ID
        # ids is list variant of id of EditableStringList
        ids: [ID]
        orderBy: [_EditableStringListOrdering]
        # stringList of EditableStringList
        stringList: [String]
        # stringLists is list variant of stringList of EditableStringList
        stringLists: [[String]]
    ): EditableStringList!
    # GODisease xrefs EditableXRefList
    xrefs(
        # editDate of EditableXRefList
        editDate: String
        # editDates is list variant of editDate of EditableXRefList
        editDates: [String]
        # field of EditableXRefList
        field: String
        # fields is list variant of field of EditableXRefList
        fields: [String]
        filter: _EditableXRefListFilter
        # id of EditableXRefList
        id: ID
        # ids is list variant of id of EditableXRefList
        ids: [ID]
        orderBy: [_EditableXRefListOrdering]
    ): EditableXRefList!
}

# GOVariant-Node
type GOVariant {
    # internal node id
    _id: Long
    # gene of  GOVariant
    gene: String!
    # GOVariant genomicVariant GenomicVariant
    genomicVariant(
        filter: _GenomicVariantFilter
        # id of GenomicVariant
        id: ID
        # ids is list variant of id of GenomicVariant
        ids: [ID]
        orderBy: [_GenomicVariantOrdering]
    ): GenomicVariant
    # goId of  GOVariant
    goId: String!
    # id of  GOVariant
    id: ID!
    # GOVariant jaxVariant JaxVariant
    jaxVariant(
        # cDot of JaxVariant
        cDot: String
        # cDots is list variant of cDot of JaxVariant
        cDots: [String]
        filter: _JaxVariantFilter
        # gDot of JaxVariant
        gDot: String
        # gDots is list variant of gDot of JaxVariant
        gDots: [String]
        # id of JaxVariant
        id: ID
        # ids is list variant of id of JaxVariant
        ids: [ID]
        # jaxId of JaxVariant
        jaxId: String
        # jaxIds is list variant of jaxId of JaxVariant
        jaxIds: [String]
        # name of JaxVariant
        name: String
        # names is list variant of name of JaxVariant
        names: [String]
        orderBy: [_JaxVariantOrdering]
        # pDot of JaxVariant
        pDot: String
        # pDots is list variant of pDot of JaxVariant
        pDots: [String]
        # variantType of JaxVariant
        variantType: String
        # variantTypes is list variant of variantType of JaxVariant
        variantTypes: [String]
    ): JaxVariant
    # mutationType of  GOVariant
    mutationType: String!
    # GOVariant name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

# HotSpotVariant-Node
type HotSpotVariant {
    # internal node id
    _id: Long
    # begin of  HotSpotVariant
    begin: String!
    # end of  HotSpotVariant
    end: String!
    # gene of  HotSpotVariant
    gene: String!
    # HotSpotVariant genomicVariant GenomicVariant
    genomicVariant(
        filter: _GenomicVariantFilter
        # id of GenomicVariant
        id: ID
        # ids is list variant of id of GenomicVariant
        ids: [ID]
        orderBy: [_GenomicVariantOrdering]
    ): GenomicVariant
    # id of  HotSpotVariant
    id: ID!
    # name of  HotSpotVariant
    name: String!
    # HotSpotVariant occurrences OncoTreeOccurrence
    occurrences(
        _id: Long
        _ids: [Long]
        filter: _OncoTreeOccurrenceFilter
        first: Int
        # id of OncoTreeOccurrence
        id: ID
        # ids is list variant of id of OncoTreeOccurrence
        ids: [ID]
        offset: Int
        # oncoTreeCode of OncoTreeOccurrence
        oncoTreeCode: String
        # oncoTreeCodes is list variant of oncoTreeCode of OncoTreeOccurrence
        oncoTreeCodes: [String]
        orderBy: [_OncoTreeOccurrenceOrdering]
        # perThousandOccurrence of OncoTreeOccurrence
        perThousandOccurrence: Int
        # perThousandOccurrences is list variant of perThousandOccurrence of OncoTreeOccurrence
        perThousandOccurrences: [Int]
    ): [OncoTreeOccurrence]!
    # position of  HotSpotVariant
    position: Int!
    # referenceAminoAcid of  HotSpotVariant
    referenceAminoAcid: String!
    # variantAminoAcid of  HotSpotVariant
    variantAminoAcid: String!
}

# IHCAssay-Node
type IHCAssay implements ProteinLevelAssay {
    # internal node id
    _id: Long
    # IHCAssay antibodyClone EditableStatement
    antibodyClone(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # IHCAssay comparator EditableAssayComparator
    comparator(
        # comparator of EditableAssayComparator
        comparator: AssayComparator
        # comparators is list variant of comparator of EditableAssayComparator
        comparators: [AssayComparator]
        # editDate of EditableAssayComparator
        editDate: String
        # editDates is list variant of editDate of EditableAssayComparator
        editDates: [String]
        # field of EditableAssayComparator
        field: String
        # fields is list variant of field of EditableAssayComparator
        fields: [String]
        filter: _EditableAssayComparatorFilter
        # id of EditableAssayComparator
        id: ID
        # ids is list variant of id of EditableAssayComparator
        ids: [ID]
        orderBy: [_EditableAssayComparatorOrdering]
    ): EditableAssayComparator!
    # id of  IHCAssay
    id: ID!
    # IHCAssay name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # IHCAssay proteinExpressionMarkers ProteinExpressionMarker
    proteinExpressionMarkers(
        _id: Long
        _ids: [Long]
        filter: _ProteinExpressionMarkerFilter
        first: Int
        # id of ProteinExpressionMarker
        id: ID
        # ids is list variant of id of ProteinExpressionMarker
        ids: [ID]
        offset: Int
        orderBy: [_ProteinExpressionMarkerOrdering]
    ): [ProteinExpressionMarker]!
    # IHCAssay resultMax EditableFloat
    resultMax(
        # editDate of EditableFloat
        editDate: String
        # editDates is list variant of editDate of EditableFloat
        editDates: [String]
        # field of EditableFloat
        field: String
        # fields is list variant of field of EditableFloat
        fields: [String]
        filter: _EditableFloatFilter
        # floatValue of EditableFloat
        floatValue: Float
        # floatValues is list variant of floatValue of EditableFloat
        floatValues: [Float]
        # id of EditableFloat
        id: ID
        # ids is list variant of id of EditableFloat
        ids: [ID]
        orderBy: [_EditableFloatOrdering]
    ): EditableFloat!
    # IHCAssay resultMin EditableFloat
    resultMin(
        # editDate of EditableFloat
        editDate: String
        # editDates is list variant of editDate of EditableFloat
        editDates: [String]
        # field of EditableFloat
        field: String
        # fields is list variant of field of EditableFloat
        fields: [String]
        filter: _EditableFloatFilter
        # floatValue of EditableFloat
        floatValue: Float
        # floatValues is list variant of floatValue of EditableFloat
        floatValues: [Float]
        # id of EditableFloat
        id: ID
        # ids is list variant of id of EditableFloat
        ids: [ID]
        orderBy: [_EditableFloatOrdering]
    ): EditableFloat!
    # IHCAssay resultString EditableStatement
    resultString(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # IHCAssay resultUnits EditableStatement
    resultUnits(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

# Enum for ImmuneCycleRole
enum ImmuneCycleRole {
    # Value for CancerTestisAntigen
    CancerTestisAntigen
    # Value for KillingCancerCells
    KillingCancerCells
    # Value for TCellInfiltration
    TCellInfiltration
    # Value for TCellPriming
    TCellPriming
    # Value for TCellRecognition
    TCellRecognition
    # Value for TCellTrafficking
    TCellTrafficking
    # Value for Unknown
    Unknown
}

# Enum for ImmuneFunction
enum ImmuneFunction {
    # Value for AntiInflammatory
    AntiInflammatory
    # Value for AntiTumorEffector
    AntiTumorEffector
    # Value for BCells
    BCells
    # Value for CoInhibitory
    CoInhibitory
    # Value for CoStimulatory
    CoStimulatory
    # Value for CytotoxicTCellsTRegs
    CytotoxicTCellsTRegs
    # Value for Immunostimulatory
    Immunostimulatory
    # Value for Immunosuppressive
    Immunosuppressive
    # Value for NKCells
    NKCells
    # Value for ProInflammatory
    ProInflammatory
    # Value for Unknown
    Unknown
}

# Enum for ImmunePhenotype
enum ImmunePhenotype {
    # Value for AntiInflammatoryResponse
    AntiInflammatoryResponse
    # Value for CancerTestisAntigen
    CancerTestisAntigen
    # Value for CheckpointBlockadeOther
    CheckpointBlockadeOther
    # Value for CheckpointBlockadePD1CTLA4
    CheckpointBlockadePD1CTLA4
    # Value for MetabolicImmuneEscape
    MetabolicImmuneEscape
    # Value for MyeloidSuppression
    MyeloidSuppression
    # Value for OtherImmunotherapyMarkers
    OtherImmunotherapyMarkers
    # Value for ProInflammatoryResponse
    ProInflammatoryResponse
    # Value for TCellPrimed
    TCellPrimed
    # Value for TumorInfiltratingLymphocytes
    TumorInfiltratingLymphocytes
    # Value for Unknown
    Unknown
}

# Enum for IndelType
enum IndelType {
    # Value for Deletion
    Deletion
    # Value for Duplication
    Duplication
    # Value for Insertion
    Insertion
    # Value for InsertionDeletion
    InsertionDeletion
    # Value for MNV
    MNV
    # Value for SNV
    SNV
}

# InternetReference-Node
type InternetReference implements Reference {
    # internal node id
    _id: Long
    # accessedDate of  InternetReference
    accessedDate: String!
    # id of  InternetReference
    id: ID!
    # shortReference of  InternetReference
    shortReference: String!
    # InternetReference statementsReferenced EditableObject
    statementsReferenced(
        _id: Long
        _ids: [Long]
        # editDate of EditableObject
        editDate: String
        # editDates is list variant of editDate of EditableObject
        editDates: [String]
        # field of EditableObject
        field: String
        # fields is list variant of field of EditableObject
        fields: [String]
        filter: _EditableObjectFilter
        first: Int
        # id of EditableObject
        id: ID
        # ids is list variant of id of EditableObject
        ids: [ID]
        offset: Int
        orderBy: [_EditableObjectOrdering]
    ): [EditableObject!]!
    # webAddress of  InternetReference
    webAddress: String!
}

# JaxDisease-Node
type JaxDisease {
    # internal node id
    _id: Long
    # JaxDisease definition EditableStatement
    definition(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # id of  JaxDisease
    id: ID!
    # jaxId of  JaxDisease
    jaxId: String!
    # JaxDisease name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # source of  JaxDisease
    source: String!
    # termId of  JaxDisease
    termId: String!
}

# JaxDrug-Node
type JaxDrug {
    # internal node id
    _id: Long
    # JaxDrug description EditableStatement
    description(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # JaxDrug drugClasses JaxDrugClass
    drugClasses(
        _id: Long
        _ids: [Long]
        filter: _JaxDrugClassFilter
        first: Int
        # id of JaxDrugClass
        id: ID
        # ids is list variant of id of JaxDrugClass
        ids: [ID]
        # jaxId of JaxDrugClass
        jaxId: String
        # jaxIds is list variant of jaxId of JaxDrugClass
        jaxIds: [String]
        offset: Int
        orderBy: [_JaxDrugClassOrdering]
    ): [JaxDrugClass]!
    # id of  JaxDrug
    id: ID!
    # jaxId of  JaxDrug
    jaxId: String!
    # JaxDrug name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # JaxDrug synonyms EditableStringList
    synonyms(
        # editDate of EditableStringList
        editDate: String
        # editDates is list variant of editDate of EditableStringList
        editDates: [String]
        # field of EditableStringList
        field: String
        # fields is list variant of field of EditableStringList
        fields: [String]
        filter: _EditableStringListFilter
        # id of EditableStringList
        id: ID
        # ids is list variant of id of EditableStringList
        ids: [ID]
        orderBy: [_EditableStringListOrdering]
        # stringList of EditableStringList
        stringList: [String]
        # stringLists is list variant of stringList of EditableStringList
        stringLists: [[String]]
    ): EditableStringList!
    # JaxDrug tradeName EditableStatement
    tradeName(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

# JaxDrugClass-Node
type JaxDrugClass {
    # internal node id
    _id: Long
    # JaxDrugClass drugs JaxDrug
    drugs(
        _id: Long
        _ids: [Long]
        filter: _JaxDrugFilter
        first: Int
        # id of JaxDrug
        id: ID
        # ids is list variant of id of JaxDrug
        ids: [ID]
        # jaxId of JaxDrug
        jaxId: String
        # jaxIds is list variant of jaxId of JaxDrug
        jaxIds: [String]
        offset: Int
        orderBy: [_JaxDrugOrdering]
    ): [JaxDrug]!
    # id of  JaxDrugClass
    id: ID!
    # jaxId of  JaxDrugClass
    jaxId: String!
    # JaxDrugClass name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

# JaxGene-Node
type JaxGene {
    # internal node id
    _id: Long
    # JaxGene canonicalTranscript EditableStatement
    canonicalTranscript(
        _id: Long
        _ids: [Long]
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        first: Int
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        offset: Int
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): [EditableStatement]!
    # chromosome of  JaxGene
    chromosome: String!
    # JaxGene description EditableStatement
    description(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # entrezId of  JaxGene
    entrezId: String!
    # id of  JaxGene
    id: ID!
    # jaxId of  JaxGene
    jaxId: String!
    # name == Gene Symbol
    name: String!
    # JaxGene synonyms EditableStringList
    synonyms(
        # editDate of EditableStringList
        editDate: String
        # editDates is list variant of editDate of EditableStringList
        editDates: [String]
        # field of EditableStringList
        field: String
        # fields is list variant of field of EditableStringList
        fields: [String]
        filter: _EditableStringListFilter
        # id of EditableStringList
        id: ID
        # ids is list variant of id of EditableStringList
        ids: [ID]
        orderBy: [_EditableStringListOrdering]
        # stringList of EditableStringList
        stringList: [String]
        # stringLists is list variant of stringList of EditableStringList
        stringLists: [[String]]
    ): EditableStringList!
}

# JaxVariant-Node
type JaxVariant {
    # internal node id
    _id: Long
    # cDot of  JaxVariant
    cDot: String!
    # JaxVariant description EditableStatement
    description(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # gDot of  JaxVariant
    gDot: String!
    # JaxVariant gene JaxGene
    gene(
        # chromosome of JaxGene
        chromosome: String
        # chromosomes is list variant of chromosome of JaxGene
        chromosomes: [String]
        # entrezId of JaxGene
        entrezId: String
        # entrezIds is list variant of entrezId of JaxGene
        entrezIds: [String]
        filter: _JaxGeneFilter
        # id of JaxGene
        id: ID
        # ids is list variant of id of JaxGene
        ids: [ID]
        # jaxId of JaxGene
        jaxId: String
        # jaxIds is list variant of jaxId of JaxGene
        jaxIds: [String]
        # name of JaxGene
        name: String
        # names is list variant of name of JaxGene
        names: [String]
        orderBy: [_JaxGeneOrdering]
    ): JaxGene!
    # JaxVariant genomicVariant GenomicVariant
    genomicVariant(
        filter: _GenomicVariantFilter
        # id of GenomicVariant
        id: ID
        # ids is list variant of id of GenomicVariant
        ids: [ID]
        orderBy: [_GenomicVariantOrdering]
    ): GenomicVariant
    # JaxVariant goVariant GOVariant
    goVariant(
        filter: _GOVariantFilter
        # gene of GOVariant
        gene: String
        # genes is list variant of gene of GOVariant
        genes: [String]
        # goId of GOVariant
        goId: String
        # goIds is list variant of goId of GOVariant
        goIds: [String]
        # id of GOVariant
        id: ID
        # ids is list variant of id of GOVariant
        ids: [ID]
        # mutationType of GOVariant
        mutationType: String
        # mutationTypes is list variant of mutationType of GOVariant
        mutationTypes: [String]
        orderBy: [_GOVariantOrdering]
    ): GOVariant
    # id of  JaxVariant
    id: ID!
    # jaxId of  JaxVariant
    jaxId: String!
    # name of  JaxVariant
    name: String!
    # pDot of  JaxVariant
    pDot: String!
    # JaxVariant proteinEffect EditableProteinEffect
    proteinEffect(
        # editDate of EditableProteinEffect
        editDate: String
        # editDates is list variant of editDate of EditableProteinEffect
        editDates: [String]
        # field of EditableProteinEffect
        field: String
        # fields is list variant of field of EditableProteinEffect
        fields: [String]
        filter: _EditableProteinEffectFilter
        # id of EditableProteinEffect
        id: ID
        # ids is list variant of id of EditableProteinEffect
        ids: [ID]
        orderBy: [_EditableProteinEffectOrdering]
        # proteinEffect of EditableProteinEffect
        proteinEffect: VariantProteinEffect
        # proteinEffects is list variant of proteinEffect of EditableProteinEffect
        proteinEffects: [VariantProteinEffect]
    ): EditableProteinEffect!
    # JaxVariant transcript EditableStatement
    transcript(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # variantType of  JaxVariant
    variantType: String!
}

# Journal-Node
type Journal {
    # internal node id
    _id: Long
    # id of  Journal
    id: ID!
    # name of  Journal
    name: String!
}

# LiteratureReference-Node
type LiteratureReference implements Reference {
    # DOI of  LiteratureReference
    DOI: String
    # PMID of  LiteratureReference
    PMID: String
    # internal node id
    _id: Long
    # abstract of  LiteratureReference
    abstract: String
    # LiteratureReference authors Author
    authors(
        _id: Long
        _ids: [Long]
        filter: _AuthorFilter
        first: Int
        # firstInitial of Author
        firstInitial: String
        # firstInitials is list variant of firstInitial of Author
        firstInitials: [String]
        # id of Author
        id: ID
        # ids is list variant of id of Author
        ids: [ID]
        offset: Int
        orderBy: [_AuthorOrdering]
        # surname of Author
        surname: String
        # surnames is list variant of surname of Author
        surnames: [String]
    ): [Author!]!
    # firstPage of  LiteratureReference
    firstPage: String!
    # id of  LiteratureReference
    id: ID!
    # LiteratureReference journal Journal
    journal(
        filter: _JournalFilter
        # id of Journal
        id: ID
        # ids is list variant of id of Journal
        ids: [ID]
        # name of Journal
        name: String
        # names is list variant of name of Journal
        names: [String]
        orderBy: [_JournalOrdering]
    ): Journal!
    # lastPage of  LiteratureReference
    lastPage: String!
    # publicationYear of  LiteratureReference
    publicationYear: String!
    # shortReference of  LiteratureReference
    shortReference: String!
    # LiteratureReference statementsReferenced EditableObject
    statementsReferenced(
        _id: Long
        _ids: [Long]
        # editDate of EditableObject
        editDate: String
        # editDates is list variant of editDate of EditableObject
        editDates: [String]
        # field of EditableObject
        field: String
        # fields is list variant of field of EditableObject
        fields: [String]
        filter: _EditableObjectFilter
        first: Int
        # id of EditableObject
        id: ID
        # ids is list variant of id of EditableObject
        ids: [ID]
        offset: Int
        orderBy: [_EditableObjectOrdering]
    ): [EditableObject!]!
    # title of  LiteratureReference
    title: String!
    # volume of  LiteratureReference
    volume: String!
}

# Long type
scalar Long

# MarkerComponent-Node
interface MarkerComponent {
    # internal node id
    _id: Long
    # id of  MarkerComponent
    id: ID!
    # MarkerComponent method EditableStatement
    method(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # MarkerComponent name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # MarkerComponent resultString EditableStatement
    resultString(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

# MarkerProfile-Node
type MarkerProfile implements MarkerComponent {
    # internal node id
    _id: Long
    # MarkerProfile components EditableMarkerComponentList
    components(
        # editDate of EditableMarkerComponentList
        editDate: String
        # editDates is list variant of editDate of EditableMarkerComponentList
        editDates: [String]
        # field of EditableMarkerComponentList
        field: String
        # fields is list variant of field of EditableMarkerComponentList
        fields: [String]
        filter: _EditableMarkerComponentListFilter
        # id of EditableMarkerComponentList
        id: ID
        # ids is list variant of id of EditableMarkerComponentList
        ids: [ID]
        orderBy: [_EditableMarkerComponentListOrdering]
    ): EditableMarkerComponentList!
    # MarkerProfile conjunction EditableOmniConjunction
    conjunction(
        # conjunction of EditableOmniConjunction
        conjunction: OmniConjunction
        # conjunctions is list variant of conjunction of EditableOmniConjunction
        conjunctions: [OmniConjunction]
        # editDate of EditableOmniConjunction
        editDate: String
        # editDates is list variant of editDate of EditableOmniConjunction
        editDates: [String]
        # field of EditableOmniConjunction
        field: String
        # fields is list variant of field of EditableOmniConjunction
        fields: [String]
        filter: _EditableOmniConjunctionFilter
        # id of EditableOmniConjunction
        id: ID
        # ids is list variant of id of EditableOmniConjunction
        ids: [ID]
        orderBy: [_EditableOmniConjunctionOrdering]
    ): EditableOmniConjunction!
    # MarkerProfile evidenceAssociations EvidenceAssociation
    evidenceAssociations(
        _id: Long
        _ids: [Long]
        filter: _EvidenceAssociationFilter
        first: Int
        # id of EvidenceAssociation
        id: ID
        # ids is list variant of id of EvidenceAssociation
        ids: [ID]
        # name of EvidenceAssociation
        name: String
        # names is list variant of name of EvidenceAssociation
        names: [String]
        offset: Int
        orderBy: [_EvidenceAssociationOrdering]
    ): [EvidenceAssociation]
    # id of  MarkerProfile
    id: ID!
    # method here by inheritance bu do not populate in tables
    method(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # MarkerProfile name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # MarkerProfile resultString EditableStatement
    resultString(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

# MCode-Node
type MCode {
    # internal node id
    _id: Long
    # MCode active EditableBoolean
    active(
        # booleanValue of EditableBoolean
        booleanValue: ExtendedBoolean
        # booleanValues is list variant of booleanValue of EditableBoolean
        booleanValues: [ExtendedBoolean]
        # editDate of EditableBoolean
        editDate: String
        # editDates is list variant of editDate of EditableBoolean
        editDates: [String]
        # field of EditableBoolean
        field: String
        # fields is list variant of field of EditableBoolean
        fields: [String]
        filter: _EditableBooleanFilter
        # id of EditableBoolean
        id: ID
        # ids is list variant of id of EditableBoolean
        ids: [ID]
        orderBy: [_EditableBooleanOrdering]
    ): EditableBoolean!
    # MCode children MCode
    children(
        _id: Long
        _ids: [Long]
        filter: _MCodeFilter
        first: Int
        # id of MCode
        id: ID
        # ids is list variant of id of MCode
        ids: [ID]
        # mcodeId of MCode
        mcodeId: String
        # mcodeIds is list variant of mcodeId of MCode
        mcodeIds: [String]
        offset: Int
        orderBy: [_MCodeOrdering]
    ): [MCode]
    # MCode diseasePath EditableStatement
    diseasePath(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # id of  MCode
    id: ID!
    # mcodeId of  MCode
    mcodeId: String!
    # MCode omniDisease OmniDisease
    omniDisease(
        filter: _OmniDiseaseFilter
        # id of OmniDisease
        id: ID
        # ids is list variant of id of OmniDisease
        ids: [ID]
        # omniDiseaseId of OmniDisease
        omniDiseaseId: String
        # omniDiseaseIds is list variant of omniDiseaseId of OmniDisease
        omniDiseaseIds: [String]
        # omniDiseaseType of OmniDisease
        omniDiseaseType: OmniDiseaseType
        # omniDiseaseTypes is list variant of omniDiseaseType of OmniDisease
        omniDiseaseTypes: [OmniDiseaseType]
        orderBy: [_OmniDiseaseOrdering]
    ): OmniDisease!
    # MCode parents MCode
    parents(
        _id: Long
        _ids: [Long]
        filter: _MCodeFilter
        first: Int
        # id of MCode
        id: ID
        # ids is list variant of id of MCode
        ids: [ID]
        # mcodeId of MCode
        mcodeId: String
        # mcodeIds is list variant of mcodeId of MCode
        mcodeIds: [String]
        offset: Int
        orderBy: [_MCodeOrdering]
    ): [MCode]
}

# may want FDA label and/or guideline references?
type MeetingAbstractReference implements Reference {
    # internal node id
    _id: Long
    # abstract of  MeetingAbstractReference
    abstract: String
    # MeetingAbstractReference authors Author
    authors(
        _id: Long
        _ids: [Long]
        filter: _AuthorFilter
        first: Int
        # firstInitial of Author
        firstInitial: String
        # firstInitials is list variant of firstInitial of Author
        firstInitials: [String]
        # id of Author
        id: ID
        # ids is list variant of id of Author
        ids: [ID]
        offset: Int
        orderBy: [_AuthorOrdering]
        # surname of Author
        surname: String
        # surnames is list variant of surname of Author
        surnames: [String]
    ): [Author!]!
    # id of  MeetingAbstractReference
    id: ID!
    # meetingDate of  MeetingAbstractReference
    meetingDate: String!
    # meetingName of  MeetingAbstractReference
    meetingName: String!
    # shortReference of  MeetingAbstractReference
    shortReference: String!
    # MeetingAbstractReference statementsReferenced EditableObject
    statementsReferenced(
        _id: Long
        _ids: [Long]
        # editDate of EditableObject
        editDate: String
        # editDates is list variant of editDate of EditableObject
        editDates: [String]
        # field of EditableObject
        field: String
        # fields is list variant of field of EditableObject
        fields: [String]
        filter: _EditableObjectFilter
        first: Int
        # id of EditableObject
        id: ID
        # ids is list variant of id of EditableObject
        ids: [ID]
        offset: Int
        orderBy: [_EditableObjectOrdering]
    ): [EditableObject!]!
    # title of  MeetingAbstractReference
    title: String!
}

# MSIMarker-Node
type MSIMarker implements MarkerComponent {
    # internal node id
    _id: Long
    # id of  MSIMarker
    id: ID!
    # MSIMarker method EditableStatement
    method(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # MSIMarker name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # MSIMarker resultString EditableStatement
    resultString(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

type MutationType {
    # Adds References to Author entity
    addAuthorReferences(id: ID!, references: [ID!]!): String
    # Adds GenomicVariant to ClinVarVariant entity
    addClinVarVariantGenomicVariant(genomicVariant: [ID!]!, id: ID!): String
    # Adds SignficanceExplanation to ClinVarVariant entity
    addClinVarVariantSignficanceExplanation(
        id: ID!
        signficanceExplanation: [ID!]!
    ): String
    # Adds Significance to ClinVarVariant entity
    addClinVarVariantSignificance(id: ID!, significance: [ID!]!): String
    # Adds References to ClinicalTrial entity
    addClinicalTrialReferences(id: ID!, references: [ID!]!): String
    # Adds Definition to DNAMarker entity
    addDNAMarkerDefinition(definition: [ID!]!, id: ID!): String
    # Adds Method to DNAMarker entity
    addDNAMarkerMethod(id: ID!, method: [ID!]!): String
    # Adds Name to DNAMarker entity
    addDNAMarkerName(id: ID!, name: [ID!]!): String
    # Adds ResultString to DNAMarker entity
    addDNAMarkerResultString(id: ID!, resultString: [ID!]!): String
    # Adds Children to DODisease entity
    addDODiseaseChildren(children: [ID!]!, id: ID!): String
    # Adds Definition to DODisease entity
    addDODiseaseDefinition(definition: [ID!]!, id: ID!): String
    # Adds ExactSynonyms to DODisease entity
    addDODiseaseExactSynonyms(exactSynonyms: [ID!]!, id: ID!): String
    # Adds Name to DODisease entity
    addDODiseaseName(id: ID!, name: [ID!]!): String
    # Adds NarrowSynonyms to DODisease entity
    addDODiseaseNarrowSynonyms(id: ID!, narrowSynonyms: [ID!]!): String
    # Adds Parents to DODisease entity
    addDODiseaseParents(id: ID!, parents: [ID!]!): String
    # Adds RelatedSynonyms to DODisease entity
    addDODiseaseRelatedSynonyms(id: ID!, relatedSynonyms: [ID!]!): String
    # Adds Subsets to DODisease entity
    addDODiseaseSubsets(id: ID!, subsets: [ID!]!): String
    # Adds Xrefs to DODisease entity
    addDODiseaseXrefs(id: ID!, xrefs: [ID!]!): String
    # Adds Definition to DrugCategory entity
    addDrugCategoryDefinition(definition: [ID!]!, id: ID!): String
    # Adds Drugs to DrugCategory entity
    addDrugCategoryDrugs(drugs: [ID!]!, id: ID!): String
    # Adds JaxDrugClass to DrugCategory entity
    addDrugCategoryJaxDrugClass(id: ID!, jaxDrugClass: [ID!]!): String
    # Adds Name to DrugCategory entity
    addDrugCategoryName(id: ID!, name: [ID!]!): String
    # Adds Editor to EditableAssayComparator entity
    addEditableAssayComparatorEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableAssayComparator entity
    addEditableAssayComparatorReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableBoolean entity
    addEditableBooleanEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableBoolean entity
    addEditableBooleanReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableCopyChange entity
    addEditableCopyChangeEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableCopyChange entity
    addEditableCopyChangeReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableDODiseaseList entity
    addEditableDODiseaseListEditor(editor: [ID!]!, id: ID!): String
    # Adds List to EditableDODiseaseList entity
    addEditableDODiseaseListList(id: ID!, list: [ID!]!): String
    # Adds References to EditableDODiseaseList entity
    addEditableDODiseaseListReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableFloat entity
    addEditableFloatEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableFloat entity
    addEditableFloatReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableGODiseaseList entity
    addEditableGODiseaseListEditor(editor: [ID!]!, id: ID!): String
    # Adds List to EditableGODiseaseList entity
    addEditableGODiseaseListList(id: ID!, list: [ID!]!): String
    # Adds References to EditableGODiseaseList entity
    addEditableGODiseaseListReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableImmuneCycleRole entity
    addEditableImmuneCycleRoleEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableImmuneCycleRole entity
    addEditableImmuneCycleRoleReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableImmuneFunction entity
    addEditableImmuneFunctionEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableImmuneFunction entity
    addEditableImmuneFunctionReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableImmunePhenotype entity
    addEditableImmunePhenotypeEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableImmunePhenotype entity
    addEditableImmunePhenotypeReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableInt entity
    addEditableIntEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableInt entity
    addEditableIntReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableJAXDiseaseList entity
    addEditableJAXDiseaseListEditor(editor: [ID!]!, id: ID!): String
    # Adds List to EditableJAXDiseaseList entity
    addEditableJAXDiseaseListList(id: ID!, list: [ID!]!): String
    # Adds References to EditableJAXDiseaseList entity
    addEditableJAXDiseaseListReferences(id: ID!, references: [ID!]!): String
    # Adds Components to EditableMarkerComponentList entity
    addEditableMarkerComponentListComponents(components: [ID!]!, id: ID!): String
    # Adds Editor to EditableMarkerComponentList entity
    addEditableMarkerComponentListEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableMarkerComponentList entity
    addEditableMarkerComponentListReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableObject entity
    addEditableObjectEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableObject entity
    addEditableObjectReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableOmniConjunction entity
    addEditableOmniConjunctionEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableOmniConjunction entity
    addEditableOmniConjunctionReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableOmniGeneList entity
    addEditableOmniGeneListEditor(editor: [ID!]!, id: ID!): String
    # Adds Genes to EditableOmniGeneList entity
    addEditableOmniGeneListGenes(genes: [ID!]!, id: ID!): String
    # Adds References to EditableOmniGeneList entity
    addEditableOmniGeneListReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableOmniGeneReference entity
    addEditableOmniGeneReferenceEditor(editor: [ID!]!, id: ID!): String
    # Adds Gene to EditableOmniGeneReference entity
    addEditableOmniGeneReferenceGene(gene: [ID!]!, id: ID!): String
    # Adds References to EditableOmniGeneReference entity
    addEditableOmniGeneReferenceReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableOmniMapList entity
    addEditableOmniMapListEditor(editor: [ID!]!, id: ID!): String
    # Adds List to EditableOmniMapList entity
    addEditableOmniMapListList(id: ID!, list: [ID!]!): String
    # Adds References to EditableOmniMapList entity
    addEditableOmniMapListReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableOncoTreeDiseaseList entity
    addEditableOncoTreeDiseaseListEditor(editor: [ID!]!, id: ID!): String
    # Adds List to EditableOncoTreeDiseaseList entity
    addEditableOncoTreeDiseaseListList(id: ID!, list: [ID!]!): String
    # Adds References to EditableOncoTreeDiseaseList entity
    addEditableOncoTreeDiseaseListReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableProteinEffect entity
    addEditableProteinEffectEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableProteinEffect entity
    addEditableProteinEffectReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableRNASeqResultType entity
    addEditableRNASeqResultTypeEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableRNASeqResultType entity
    addEditableRNASeqResultTypeReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableStatement entity
    addEditableStatementEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableStatement entity
    addEditableStatementReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableStringList entity
    addEditableStringListEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableStringList entity
    addEditableStringListReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableTMBInterpretation entity
    addEditableTMBInterpretationEditor(editor: [ID!]!, id: ID!): String
    # Adds References to EditableTMBInterpretation entity
    addEditableTMBInterpretationReferences(id: ID!, references: [ID!]!): String
    # Adds Editor to EditableXRefList entity
    addEditableXRefListEditor(editor: [ID!]!, id: ID!): String
    # Adds List to EditableXRefList entity
    addEditableXRefListList(id: ID!, list: [ID!]!): String
    # Adds References to EditableXRefList entity
    addEditableXRefListReferences(id: ID!, references: [ID!]!): String
    # Adds AdverseEvents to Evidence entity
    addEvidenceAdverseEvents(adverseEvents: [ID!]!, id: ID!): String
    # Adds Disease to EvidenceAssociation entity
    addEvidenceAssociationDisease(disease: [ID!]!, id: ID!): String
    # Adds Evidences to EvidenceAssociation entity
    addEvidenceAssociationEvidences(evidences: [ID!]!, id: ID!): String
    # Adds Marker to EvidenceAssociation entity
    addEvidenceAssociationMarker(id: ID!, marker: [ID!]!): String
    # Adds Therapy to EvidenceAssociation entity
    addEvidenceAssociationTherapy(id: ID!, therapy: [ID!]!): String
    # Adds EvidenceAssociation to Evidence entity
    addEvidenceEvidenceAssociation(evidenceAssociation: [ID!]!, id: ID!): String
    # Adds Outcomes to Evidence entity
    addEvidenceOutcomes(id: ID!, outcomes: [ID!]!): String
    # Adds Reference to Evidence entity
    addEvidenceReference(id: ID!, reference: [ID!]!): String
    # Adds Children to GODisease entity
    addGODiseaseChildren(children: [ID!]!, id: ID!): String
    # Adds Definition to GODisease entity
    addGODiseaseDefinition(definition: [ID!]!, id: ID!): String
    # Adds JaxDiseases to GODisease entity
    addGODiseaseJaxDiseases(id: ID!, jaxDiseases: [ID!]!): String
    # Adds Name to GODisease entity
    addGODiseaseName(id: ID!, name: [ID!]!): String
    # Adds Parents to GODisease entity
    addGODiseaseParents(id: ID!, parents: [ID!]!): String
    # Adds Synonyms to GODisease entity
    addGODiseaseSynonyms(id: ID!, synonyms: [ID!]!): String
    # Adds Xrefs to GODisease entity
    addGODiseaseXrefs(id: ID!, xrefs: [ID!]!): String
    # Adds GenomicVariant to GOVariant entity
    addGOVariantGenomicVariant(genomicVariant: [ID!]!, id: ID!): String
    # Adds JaxVariant to GOVariant entity
    addGOVariantJaxVariant(id: ID!, jaxVariant: [ID!]!): String
    # Adds Name to GOVariant entity
    addGOVariantName(id: ID!, name: [ID!]!): String
    # Adds ClinVarVariant to GenomicVariant entity
    addGenomicVariantClinVarVariant(clinVarVariant: [ID!]!, id: ID!): String
    # Adds Description to GenomicVariant entity
    addGenomicVariantDescription(description: [ID!]!, id: ID!): String
    # Adds Gene to GenomicVariant entity
    addGenomicVariantGene(gene: [ID!]!, id: ID!): String
    # Adds GoVariant to GenomicVariant entity
    addGenomicVariantGoVariant(goVariant: [ID!]!, id: ID!): String
    # Adds HotSpotVariant to GenomicVariant entity
    addGenomicVariantHotSpotVariant(hotSpotVariant: [ID!]!, id: ID!): String
    # Adds JaxVariant to GenomicVariant entity
    addGenomicVariantJaxVariant(id: ID!, jaxVariant: [ID!]!): String
    # Adds Gene to GenomicVariantMarker entity
    addGenomicVariantMarkerGene(gene: [ID!]!, id: ID!): String
    # Adds Method to GenomicVariantMarker entity
    addGenomicVariantMarkerMethod(id: ID!, method: [ID!]!): String
    # Adds Name to GenomicVariantMarker entity
    addGenomicVariantMarkerName(id: ID!, name: [ID!]!): String
    # Adds ResultString to GenomicVariantMarker entity
    addGenomicVariantMarkerResultString(id: ID!, resultString: [ID!]!): String
    # Adds Variant to GenomicVariantMarker entity
    addGenomicVariantMarkerVariant(id: ID!, variant: [ID!]!): String
    # Adds Name to GenomicVariant entity
    addGenomicVariantName(id: ID!, name: [ID!]!): String
    # Adds NonCanonicalTranscript to GenomicVariant entity
    addGenomicVariantNonCanonicalTranscript(
        id: ID!
        nonCanonicalTranscript: [ID!]!
    ): String
    # Adds GenomicVariant to HotSpotVariant entity
    addHotSpotVariantGenomicVariant(genomicVariant: [ID!]!, id: ID!): String
    # Adds Occurrences to HotSpotVariant entity
    addHotSpotVariantOccurrences(id: ID!, occurrences: [ID!]!): String
    # Adds AntibodyClone to IHCAssay entity
    addIHCAssayAntibodyClone(antibodyClone: [ID!]!, id: ID!): String
    # Adds Comparator to IHCAssay entity
    addIHCAssayComparator(comparator: [ID!]!, id: ID!): String
    # Adds Name to IHCAssay entity
    addIHCAssayName(id: ID!, name: [ID!]!): String
    # Adds ProteinExpressionMarkers to IHCAssay entity
    addIHCAssayProteinExpressionMarkers(
        id: ID!
        proteinExpressionMarkers: [ID!]!
    ): String
    # Adds ResultMax to IHCAssay entity
    addIHCAssayResultMax(id: ID!, resultMax: [ID!]!): String
    # Adds ResultMin to IHCAssay entity
    addIHCAssayResultMin(id: ID!, resultMin: [ID!]!): String
    # Adds ResultString to IHCAssay entity
    addIHCAssayResultString(id: ID!, resultString: [ID!]!): String
    # Adds ResultUnits to IHCAssay entity
    addIHCAssayResultUnits(id: ID!, resultUnits: [ID!]!): String
    # Adds StatementsReferenced to InternetReference entity
    addInternetReferenceStatementsReferenced(
        id: ID!
        statementsReferenced: [ID!]!
    ): String
    # Adds Definition to JaxDisease entity
    addJaxDiseaseDefinition(definition: [ID!]!, id: ID!): String
    # Adds Name to JaxDisease entity
    addJaxDiseaseName(id: ID!, name: [ID!]!): String
    # Adds Drugs to JaxDrugClass entity
    addJaxDrugClassDrugs(drugs: [ID!]!, id: ID!): String
    # Adds Name to JaxDrugClass entity
    addJaxDrugClassName(id: ID!, name: [ID!]!): String
    # Adds Description to JaxDrug entity
    addJaxDrugDescription(description: [ID!]!, id: ID!): String
    # Adds DrugClasses to JaxDrug entity
    addJaxDrugDrugClasses(drugClasses: [ID!]!, id: ID!): String
    # Adds Name to JaxDrug entity
    addJaxDrugName(id: ID!, name: [ID!]!): String
    # Adds Synonyms to JaxDrug entity
    addJaxDrugSynonyms(id: ID!, synonyms: [ID!]!): String
    # Adds TradeName to JaxDrug entity
    addJaxDrugTradeName(id: ID!, tradeName: [ID!]!): String
    # Adds CanonicalTranscript to JaxGene entity
    addJaxGeneCanonicalTranscript(canonicalTranscript: [ID!]!, id: ID!): String
    # Adds Description to JaxGene entity
    addJaxGeneDescription(description: [ID!]!, id: ID!): String
    # Adds Synonyms to JaxGene entity
    addJaxGeneSynonyms(id: ID!, synonyms: [ID!]!): String
    # Adds Description to JaxVariant entity
    addJaxVariantDescription(description: [ID!]!, id: ID!): String
    # Adds Gene to JaxVariant entity
    addJaxVariantGene(gene: [ID!]!, id: ID!): String
    # Adds GenomicVariant to JaxVariant entity
    addJaxVariantGenomicVariant(genomicVariant: [ID!]!, id: ID!): String
    # Adds GoVariant to JaxVariant entity
    addJaxVariantGoVariant(goVariant: [ID!]!, id: ID!): String
    # Adds ProteinEffect to JaxVariant entity
    addJaxVariantProteinEffect(id: ID!, proteinEffect: [ID!]!): String
    # Adds Transcript to JaxVariant entity
    addJaxVariantTranscript(id: ID!, transcript: [ID!]!): String
    # Adds Authors to LiteratureReference entity
    addLiteratureReferenceAuthors(authors: [ID!]!, id: ID!): String
    # Adds Journal to LiteratureReference entity
    addLiteratureReferenceJournal(id: ID!, journal: [ID!]!): String
    # Adds StatementsReferenced to LiteratureReference entity
    addLiteratureReferenceStatementsReferenced(
        id: ID!
        statementsReferenced: [ID!]!
    ): String
    # Adds Active to MCode entity
    addMCodeActive(active: [ID!]!, id: ID!): String
    # Adds Children to MCode entity
    addMCodeChildren(children: [ID!]!, id: ID!): String
    # Adds DiseasePath to MCode entity
    addMCodeDiseasePath(diseasePath: [ID!]!, id: ID!): String
    # Adds OmniDisease to MCode entity
    addMCodeOmniDisease(id: ID!, omniDisease: [ID!]!): String
    # Adds Parents to MCode entity
    addMCodeParents(id: ID!, parents: [ID!]!): String
    # Adds Method to MSIMarker entity
    addMSIMarkerMethod(id: ID!, method: [ID!]!): String
    # Adds Name to MSIMarker entity
    addMSIMarkerName(id: ID!, name: [ID!]!): String
    # Adds ResultString to MSIMarker entity
    addMSIMarkerResultString(id: ID!, resultString: [ID!]!): String
    # Adds Method to MarkerComponent entity
    addMarkerComponentMethod(id: ID!, method: [ID!]!): String
    # Adds Name to MarkerComponent entity
    addMarkerComponentName(id: ID!, name: [ID!]!): String
    # Adds ResultString to MarkerComponent entity
    addMarkerComponentResultString(id: ID!, resultString: [ID!]!): String
    # Adds Components to MarkerProfile entity
    addMarkerProfileComponents(components: [ID!]!, id: ID!): String
    # Adds Conjunction to MarkerProfile entity
    addMarkerProfileConjunction(conjunction: [ID!]!, id: ID!): String
    # Adds EvidenceAssociations to MarkerProfile entity
    addMarkerProfileEvidenceAssociations(
        evidenceAssociations: [ID!]!
        id: ID!
    ): String
    # Adds Method to MarkerProfile entity
    addMarkerProfileMethod(id: ID!, method: [ID!]!): String
    # Adds Name to MarkerProfile entity
    addMarkerProfileName(id: ID!, name: [ID!]!): String
    # Adds ResultString to MarkerProfile entity
    addMarkerProfileResultString(id: ID!, resultString: [ID!]!): String
    # Adds Authors to MeetingAbstractReference entity
    addMeetingAbstractReferenceAuthors(authors: [ID!]!, id: ID!): String
    # Adds StatementsReferenced to MeetingAbstractReference entity
    addMeetingAbstractReferenceStatementsReferenced(
        id: ID!
        statementsReferenced: [ID!]!
    ): String
    # Adds Description to MyGeneInfoGene entity
    addMyGeneInfoGeneDescription(description: [ID!]!, id: ID!): String
    # Adds UniprotEntry to MyGeneInfoGene entity
    addMyGeneInfoGeneUniprotEntry(id: ID!, uniprotEntry: [ID!]!): String
    # Adds AnnotationDate to NCIDrug entity
    addNCIDrugAnnotationDate(annotationDate: [ID!]!, id: ID!): String
    # Adds ConceptCode to NCIDrug entity
    addNCIDrugConceptCode(conceptCode: [ID!]!, id: ID!): String
    # Adds Definition to NCIDrug entity
    addNCIDrugDefinition(definition: [ID!]!, id: ID!): String
    # Adds DrugCategory to NCIDrug entity
    addNCIDrugDrugCategory(drugCategory: [ID!]!, id: ID!): String
    # Adds Modulator to NCIDrug entity
    addNCIDrugModulator(id: ID!, modulator: [ID!]!): String
    # Adds Name to NCIDrug entity
    addNCIDrugName(id: ID!, name: [ID!]!): String
    # Adds Synonyms to NCIDrug entity
    addNCIDrugSynonyms(id: ID!, synonyms: [ID!]!): String
    # Adds Name to OmniDisease entity
    addOmniDiseaseName(id: ID!, name: [ID!]!): String
    # Adds ComponentOf to OmniDrug entity
    addOmniDrugComponentOf(componentOf: [ID!]!, id: ID!): String
    # Adds Definition to OmniDrug entity
    addOmniDrugDefinition(definition: [ID!]!, id: ID!): String
    # Adds DrugCategories to OmniDrug entity
    addOmniDrugDrugCategories(drugCategories: [ID!]!, id: ID!): String
    # Adds JaxDrug to OmniDrug entity
    addOmniDrugJaxDrug(id: ID!, jaxDrug: [ID!]!): String
    # Adds Name to OmniDrug entity
    addOmniDrugName(id: ID!, name: [ID!]!): String
    # Adds NciDrug to OmniDrug entity
    addOmniDrugNciDrug(id: ID!, nciDrug: [ID!]!): String
    # Adds Synonyms to OmniDrug entity
    addOmniDrugSynonyms(id: ID!, synonyms: [ID!]!): String
    # Adds Target to OmniDrug entity
    addOmniDrugTarget(id: ID!, target: [ID!]!): String
    # Adds TradeName to OmniDrug entity
    addOmniDrugTradeName(id: ID!, tradeName: [ID!]!): String
    # Adds GeneDescription to OmniGene entity
    addOmniGeneGeneDescription(geneDescription: [ID!]!, id: ID!): String
    # Adds JaxGene to OmniGene entity
    addOmniGeneJaxGene(id: ID!, jaxGene: [ID!]!): String
    # Adds MyGeneInfoGene to OmniGene entity
    addOmniGeneMyGeneInfoGene(id: ID!, myGeneInfoGene: [ID!]!): String
    # Adds OncogenicCategory to OmniGene entity
    addOmniGeneOncogenicCategory(id: ID!, oncogenicCategory: [ID!]!): String
    # Adds PanelName to OmniGene entity
    addOmniGenePanelName(id: ID!, panelName: [ID!]!): String
    # Adds Synonyms to OmniGene entity
    addOmniGeneSynonyms(id: ID!, synonyms: [ID!]!): String
    # Adds Transcript to OmniGene entity
    addOmniGeneTranscript(id: ID!, transcript: [ID!]!): String
    # Adds UniprotEntry to OmniGene entity
    addOmniGeneUniprotEntry(id: ID!, uniprotEntry: [ID!]!): String
    # Adds VariantMarkers to OmniGene entity
    addOmniGeneVariantMarkers(id: ID!, variantMarkers: [ID!]!): String
    # Adds Variants to OmniGene entity
    addOmniGeneVariants(id: ID!, variants: [ID!]!): String
    # Adds MCodes to OmniMap entity
    addOmniMapMCodes(id: ID!, mCodes: [ID!]!): String
    # Adds OmniDisease to OmniMap entity
    addOmniMapOmniDisease(id: ID!, omniDisease: [ID!]!): String
    # Adds Children to OncoTreeDisease entity
    addOncoTreeDiseaseChildren(children: [ID!]!, id: ID!): String
    # Adds MainType to OncoTreeDisease entity
    addOncoTreeDiseaseMainType(id: ID!, mainType: [ID!]!): String
    # Adds Name to OncoTreeDisease entity
    addOncoTreeDiseaseName(id: ID!, name: [ID!]!): String
    # Adds Occurrences to OncoTreeDisease entity
    addOncoTreeDiseaseOccurrences(id: ID!, occurrences: [ID!]!): String
    # Adds Parent to OncoTreeDisease entity
    addOncoTreeDiseaseParent(id: ID!, parent: [ID!]!): String
    # Adds Tissue to OncoTreeDisease entity
    addOncoTreeDiseaseTissue(id: ID!, tissue: [ID!]!): String
    # Adds Xrefs to OncoTreeDisease entity
    addOncoTreeDiseaseXrefs(id: ID!, xrefs: [ID!]!): String
    # Adds Disease to OncoTreeOccurrence entity
    addOncoTreeOccurrenceDisease(disease: [ID!]!, id: ID!): String
    # Adds HotSpotVariant to OncoTreeOccurrence entity
    addOncoTreeOccurrenceHotSpotVariant(hotSpotVariant: [ID!]!, id: ID!): String
    # Adds Occurrences to OncoTreeOccurrence entity
    addOncoTreeOccurrenceOccurrences(id: ID!, occurrences: [ID!]!): String
    # Adds PercentOccurrence to OncoTreeOccurrence entity
    addOncoTreeOccurrencePercentOccurrence(
        id: ID!
        percentOccurrence: [ID!]!
    ): String
    # Adds TotalSamples to OncoTreeOccurrence entity
    addOncoTreeOccurrenceTotalSamples(id: ID!, totalSamples: [ID!]!): String
    # Adds Children to OntologicalDisease entity
    addOntologicalDiseaseChildren(children: [ID!]!, id: ID!): String
    # Adds Description to OntologicalDisease entity
    addOntologicalDiseaseDescription(description: [ID!]!, id: ID!): String
    # Adds DoDiseases to OntologicalDisease entity
    addOntologicalDiseaseDoDiseases(doDiseases: [ID!]!, id: ID!): String
    # Adds GoDiseases to OntologicalDisease entity
    addOntologicalDiseaseGoDiseases(goDiseases: [ID!]!, id: ID!): String
    # Adds JaxDiseases to OntologicalDisease entity
    addOntologicalDiseaseJaxDiseases(id: ID!, jaxDiseases: [ID!]!): String
    # Adds Name to OntologicalDisease entity
    addOntologicalDiseaseName(id: ID!, name: [ID!]!): String
    # Adds OmniMaps to OntologicalDisease entity
    addOntologicalDiseaseOmniMaps(id: ID!, omniMaps: [ID!]!): String
    # Adds OncoTreeDiseases to OntologicalDisease entity
    addOntologicalDiseaseOncoTreeDiseases(
        id: ID!
        oncoTreeDiseases: [ID!]!
    ): String
    # Adds Parents to OntologicalDisease entity
    addOntologicalDiseaseParents(id: ID!, parents: [ID!]!): String
    # Adds Synonyms to OntologicalDisease entity
    addOntologicalDiseaseSynonyms(id: ID!, synonyms: [ID!]!): String
    # Adds Xrefs to OntologicalDisease entity
    addOntologicalDiseaseXrefs(id: ID!, xrefs: [ID!]!): String
    # Adds Evidences to Outcome entity
    addOutcomeEvidences(evidences: [ID!]!, id: ID!): String
    # Adds Assay to ProteinExpressionMarker entity
    addProteinExpressionMarkerAssay(assay: [ID!]!, id: ID!): String
    # Adds Genes to ProteinExpressionMarker entity
    addProteinExpressionMarkerGenes(genes: [ID!]!, id: ID!): String
    # Adds ImmuneCycleRoles to ProteinExpressionMarker entity
    addProteinExpressionMarkerImmuneCycleRoles(
        id: ID!
        immuneCycleRoles: [ID!]!
    ): String
    # Adds ImmuneFunctions to ProteinExpressionMarker entity
    addProteinExpressionMarkerImmuneFunctions(
        id: ID!
        immuneFunctions: [ID!]!
    ): String
    # Adds ImmunePhenotypes to ProteinExpressionMarker entity
    addProteinExpressionMarkerImmunePhenotypes(
        id: ID!
        immunePhenotypes: [ID!]!
    ): String
    # Adds Method to ProteinExpressionMarker entity
    addProteinExpressionMarkerMethod(id: ID!, method: [ID!]!): String
    # Adds Name to ProteinExpressionMarker entity
    addProteinExpressionMarkerName(id: ID!, name: [ID!]!): String
    # Adds ResultString to ProteinExpressionMarker entity
    addProteinExpressionMarkerResultString(id: ID!, resultString: [ID!]!): String
    # Adds Synonyms to ProteinExpressionMarker entity
    addProteinExpressionMarkerSynonyms(id: ID!, synonyms: [ID!]!): String
    # Adds Name to ProteinLevelAssay entity
    addProteinLevelAssayName(id: ID!, name: [ID!]!): String
    # Adds Comparator to RNASeqAssay entity
    addRNASeqAssayComparator(comparator: [ID!]!, id: ID!): String
    # Adds Name to RNASeqAssay entity
    addRNASeqAssayName(id: ID!, name: [ID!]!): String
    # Adds ProteinExpressionMarkers to RNASeqAssay entity
    addRNASeqAssayProteinExpressionMarkers(
        id: ID!
        proteinExpressionMarkers: [ID!]!
    ): String
    # Adds ResultMax to RNASeqAssay entity
    addRNASeqAssayResultMax(id: ID!, resultMax: [ID!]!): String
    # Adds ResultMin to RNASeqAssay entity
    addRNASeqAssayResultMin(id: ID!, resultMin: [ID!]!): String
    # Adds ResultType to RNASeqAssay entity
    addRNASeqAssayResultType(id: ID!, resultType: [ID!]!): String
    # Adds Comparator to RNASeqSignatureMarker entity
    addRNASeqSignatureMarkerComparator(comparator: [ID!]!, id: ID!): String
    # Adds Definition to RNASeqSignatureMarker entity
    addRNASeqSignatureMarkerDefinition(definition: [ID!]!, id: ID!): String
    # Adds Interpretations to RNASeqSignatureMarker entity
    addRNASeqSignatureMarkerInterpretations(
        id: ID!
        interpretations: [ID!]!
    ): String
    # Adds MarkerProfile to RNASeqSignatureMarker entity
    addRNASeqSignatureMarkerMarkerProfile(id: ID!, markerProfile: [ID!]!): String
    # Adds Method to RNASeqSignatureMarker entity
    addRNASeqSignatureMarkerMethod(id: ID!, method: [ID!]!): String
    # Adds Name to RNASeqSignatureMarker entity
    addRNASeqSignatureMarkerName(id: ID!, name: [ID!]!): String
    # Adds ResultMax to RNASeqSignatureMarker entity
    addRNASeqSignatureMarkerResultMax(id: ID!, resultMax: [ID!]!): String
    # Adds ResultMin to RNASeqSignatureMarker entity
    addRNASeqSignatureMarkerResultMin(id: ID!, resultMin: [ID!]!): String
    # Adds ResultString to RNASeqSignatureMarker entity
    addRNASeqSignatureMarkerResultString(id: ID!, resultString: [ID!]!): String
    # Adds StatementsReferenced to Reference entity
    addReferenceStatementsReferenced(
        id: ID!
        statementsReferenced: [ID!]!
    ): String
    # Adds Children to TCode entity
    addTCodeChildren(children: [ID!]!, id: ID!): String
    # Adds Parents to TCode entity
    addTCodeParents(id: ID!, parents: [ID!]!): String
    # Adds TissuePath to TCode entity
    addTCodeTissuePath(id: ID!, tissuePath: [ID!]!): String
    # Adds Comparator to TMBMarker entity
    addTMBMarkerComparator(comparator: [ID!]!, id: ID!): String
    # Adds Interpretations to TMBMarker entity
    addTMBMarkerInterpretations(id: ID!, interpretations: [ID!]!): String
    # Adds Method to TMBMarker entity
    addTMBMarkerMethod(id: ID!, method: [ID!]!): String
    # Adds Name to TMBMarker entity
    addTMBMarkerName(id: ID!, name: [ID!]!): String
    # Adds ResultMax to TMBMarker entity
    addTMBMarkerResultMax(id: ID!, resultMax: [ID!]!): String
    # Adds ResultMin to TMBMarker entity
    addTMBMarkerResultMin(id: ID!, resultMin: [ID!]!): String
    # Adds ResultString to TMBMarker entity
    addTMBMarkerResultString(id: ID!, resultString: [ID!]!): String
    # Adds ResultUnits to TMBMarker entity
    addTMBMarkerResultUnits(id: ID!, resultUnits: [ID!]!): String
    # Adds ConcurrentWith to TherapeuticIntervention entity
    addTherapeuticInterventionConcurrentWith(
        concurrentWith: [ID!]!
        id: ID!
    ): String
    # Adds Definition to TherapeuticIntervention entity
    addTherapeuticInterventionDefinition(definition: [ID!]!, id: ID!): String
    # Adds EvidenceAssociations to TherapeuticIntervention entity
    addTherapeuticInterventionEvidenceAssociations(
        evidenceAssociations: [ID!]!
        id: ID!
    ): String
    # Adds FollowedBy to TherapeuticIntervention entity
    addTherapeuticInterventionFollowedBy(followedBy: [ID!]!, id: ID!): String
    # Adds Name to TherapeuticIntervention entity
    addTherapeuticInterventionName(id: ID!, name: [ID!]!): String
    # Adds PrecededBy to TherapeuticIntervention entity
    addTherapeuticInterventionPrecededBy(id: ID!, precededBy: [ID!]!): String
    # Adds Therapy to TherapeuticIntervention entity
    addTherapeuticInterventionTherapy(id: ID!, therapy: [ID!]!): String
    # Adds ComponentOf to TherapyComponent entity
    addTherapyComponentComponentOf(componentOf: [ID!]!, id: ID!): String
    # Adds Name to TherapyComponent entity
    addTherapyComponentName(id: ID!, name: [ID!]!): String
    # Adds ComponentOf to Therapy entity
    addTherapyComponentOf(componentOf: [ID!]!, id: ID!): String
    # Adds Components to Therapy entity
    addTherapyComponents(components: [ID!]!, id: ID!): String
    # Adds Definition to Therapy entity
    addTherapyDefinition(definition: [ID!]!, id: ID!): String
    # Adds Name to Therapy entity
    addTherapyName(id: ID!, name: [ID!]!): String
    # Adds Function to UniprotEntry entity
    addUniprotEntryFunction(function: [ID!]!, id: ID!): String
    # Adds Gene to UniprotEntry entity
    addUniprotEntryGene(gene: [ID!]!, id: ID!): String
    # Adds EditedStatements to User entity
    addUserEditedStatements(editedStatements: [ID!]!, id: ID!): String
    # Adds ClinVarVariant to VariantCNV entity
    addVariantCNVClinVarVariant(clinVarVariant: [ID!]!, id: ID!): String
    # Adds CopyChange to VariantCNV entity
    addVariantCNVCopyChange(copyChange: [ID!]!, id: ID!): String
    # Adds Description to VariantCNV entity
    addVariantCNVDescription(description: [ID!]!, id: ID!): String
    # Adds Gene to VariantCNV entity
    addVariantCNVGene(gene: [ID!]!, id: ID!): String
    # Adds GoVariant to VariantCNV entity
    addVariantCNVGoVariant(goVariant: [ID!]!, id: ID!): String
    # Adds HotSpotVariant to VariantCNV entity
    addVariantCNVHotSpotVariant(hotSpotVariant: [ID!]!, id: ID!): String
    # Adds JaxVariant to VariantCNV entity
    addVariantCNVJaxVariant(id: ID!, jaxVariant: [ID!]!): String
    # Adds Name to VariantCNV entity
    addVariantCNVName(id: ID!, name: [ID!]!): String
    # Adds NonCanonicalTranscript to VariantCNV entity
    addVariantCNVNonCanonicalTranscript(
        id: ID!
        nonCanonicalTranscript: [ID!]!
    ): String
    # Adds ClinVarVariant to VariantFusion entity
    addVariantFusionClinVarVariant(clinVarVariant: [ID!]!, id: ID!): String
    # Adds CopyChange to VariantFusion entity
    addVariantFusionCopyChange(copyChange: [ID!]!, id: ID!): String
    # Adds Description to VariantFusion entity
    addVariantFusionDescription(description: [ID!]!, id: ID!): String
    # Adds Exon3Prime to VariantFusion entity
    addVariantFusionExon3Prime(exon3Prime: [ID!]!, id: ID!): String
    # Adds Exon5Prime to VariantFusion entity
    addVariantFusionExon5Prime(exon5Prime: [ID!]!, id: ID!): String
    # Adds Gene to VariantFusion entity
    addVariantFusionGene(gene: [ID!]!, id: ID!): String
    # Adds Gene3Prime to VariantFusion entity
    addVariantFusionGene3Prime(gene3Prime: [ID!]!, id: ID!): String
    # Adds Gene5Prime to VariantFusion entity
    addVariantFusionGene5Prime(gene5Prime: [ID!]!, id: ID!): String
    # Adds GoVariant to VariantFusion entity
    addVariantFusionGoVariant(goVariant: [ID!]!, id: ID!): String
    # Adds HotSpotVariant to VariantFusion entity
    addVariantFusionHotSpotVariant(hotSpotVariant: [ID!]!, id: ID!): String
    # Adds JaxVariant to VariantFusion entity
    addVariantFusionJaxVariant(id: ID!, jaxVariant: [ID!]!): String
    # Adds Name to VariantFusion entity
    addVariantFusionName(id: ID!, name: [ID!]!): String
    # Adds NonCanonicalTranscript to VariantFusion entity
    addVariantFusionNonCanonicalTranscript(
        id: ID!
        nonCanonicalTranscript: [ID!]!
    ): String
    # Adds ClinVarVariant to VariantRegion entity
    addVariantRegionClinVarVariant(clinVarVariant: [ID!]!, id: ID!): String
    # Adds Description to VariantRegion entity
    addVariantRegionDescription(description: [ID!]!, id: ID!): String
    # Adds Gene to VariantRegion entity
    addVariantRegionGene(gene: [ID!]!, id: ID!): String
    # Adds GoVariant to VariantRegion entity
    addVariantRegionGoVariant(goVariant: [ID!]!, id: ID!): String
    # Adds HotSpotVariant to VariantRegion entity
    addVariantRegionHotSpotVariant(hotSpotVariant: [ID!]!, id: ID!): String
    # Adds IsDeleterious to VariantRegion entity
    addVariantRegionIsDeleterious(id: ID!, isDeleterious: [ID!]!): String
    # Adds IsFrameshift to VariantRegion entity
    addVariantRegionIsFrameshift(id: ID!, isFrameshift: [ID!]!): String
    # Adds IsTruncating to VariantRegion entity
    addVariantRegionIsTruncating(id: ID!, isTruncating: [ID!]!): String
    # Adds JaxVariant to VariantRegion entity
    addVariantRegionJaxVariant(id: ID!, jaxVariant: [ID!]!): String
    # Adds Name to VariantRegion entity
    addVariantRegionName(id: ID!, name: [ID!]!): String
    # Adds NonCanonicalTranscript to VariantRegion entity
    addVariantRegionNonCanonicalTranscript(
        id: ID!
        nonCanonicalTranscript: [ID!]!
    ): String
    # Adds ProteinEffect to VariantRegion entity
    addVariantRegionProteinEffect(id: ID!, proteinEffect: [ID!]!): String
    # Adds RegionValue to VariantRegion entity
    addVariantRegionRegionValue(id: ID!, regionValue: [ID!]!): String
    # Adds CDot to VariantSNVIndel entity
    addVariantSNVIndelCDot(cDot: [ID!]!, id: ID!): String
    # Adds ClinVarVariant to VariantSNVIndel entity
    addVariantSNVIndelClinVarVariant(clinVarVariant: [ID!]!, id: ID!): String
    # Adds Description to VariantSNVIndel entity
    addVariantSNVIndelDescription(description: [ID!]!, id: ID!): String
    # Adds Exon to VariantSNVIndel entity
    addVariantSNVIndelExon(exon: [ID!]!, id: ID!): String
    # Adds GDot to VariantSNVIndel entity
    addVariantSNVIndelGDot(gDot: [ID!]!, id: ID!): String
    # Adds Gene to VariantSNVIndel entity
    addVariantSNVIndelGene(gene: [ID!]!, id: ID!): String
    # Adds GoVariant to VariantSNVIndel entity
    addVariantSNVIndelGoVariant(goVariant: [ID!]!, id: ID!): String
    # Adds HotSpotVariant to VariantSNVIndel entity
    addVariantSNVIndelHotSpotVariant(hotSpotVariant: [ID!]!, id: ID!): String
    # Adds JaxVariant to VariantSNVIndel entity
    addVariantSNVIndelJaxVariant(id: ID!, jaxVariant: [ID!]!): String
    # Adds Name to VariantSNVIndel entity
    addVariantSNVIndelName(id: ID!, name: [ID!]!): String
    # Adds NonCanonicalTranscript to VariantSNVIndel entity
    addVariantSNVIndelNonCanonicalTranscript(
        id: ID!
        nonCanonicalTranscript: [ID!]!
    ): String
    # Adds PDot to VariantSNVIndel entity
    addVariantSNVIndelPDot(id: ID!, pDot: [ID!]!): String
    # Adds ProteinEffect to VariantSNVIndel entity
    addVariantSNVIndelProteinEffect(id: ID!, proteinEffect: [ID!]!): String
    # Creates a AdverseEvent entity
    createAdverseEvent(grade: Int, id: ID!, name: String!): String
    # Creates a Author entity
    createAuthor(firstInitial: String!, id: ID!, surname: String!): String
    # Creates a ClinVarVariant entity
    createClinVarVariant(
        cDot: String!
        gene: String!
        id: ID!
        pDot: String!
        variantId: String!
    ): String
    # Creates a ClinicalTrial entity
    createClinicalTrial(
        acronym: String
        briefTitle: String
        id: ID!
        name: String!
        officialTitle: String!
        resource: String!
        resourceId: String!
    ): String
    # Creates a DNAMarker entity
    createDNAMarker(id: ID!, markerType: DNAMarkerType!): String
    # Creates a DODisease entity
    createDODisease(doId: String!, id: ID!): String
    # Creates a DrugCategory entity
    createDrugCategory(id: ID!): String
    # Creates a EditableAssayComparator entity
    createEditableAssayComparator(
        comparator: AssayComparator!
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Creates a EditableBoolean entity
    createEditableBoolean(
        booleanValue: ExtendedBoolean!
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Creates a EditableCopyChange entity
    createEditableCopyChange(
        cnvType: CNVType!
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Creates a EditableDODiseaseList entity
    createEditableDODiseaseList(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Creates a EditableFloat entity
    createEditableFloat(
        editDate: String!
        field: String!
        floatValue: Float!
        id: ID!
    ): String
    # Creates a EditableGODiseaseList entity
    createEditableGODiseaseList(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Creates a EditableImmuneCycleRole entity
    createEditableImmuneCycleRole(
        editDate: String!
        field: String!
        id: ID!
        immuneCycleRole: ImmuneCycleRole!
    ): String
    # Creates a EditableImmuneFunction entity
    createEditableImmuneFunction(
        editDate: String!
        field: String!
        id: ID!
        immuneFunction: ImmuneFunction!
    ): String
    # Creates a EditableImmunePhenotype entity
    createEditableImmunePhenotype(
        editDate: String!
        field: String!
        id: ID!
        immunePhenotype: ImmunePhenotype!
    ): String
    # Creates a EditableInt entity
    createEditableInt(
        editDate: String!
        field: String!
        id: ID!
        intValue: Int!
    ): String
    # Creates a EditableJAXDiseaseList entity
    createEditableJAXDiseaseList(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Creates a EditableMarkerComponentList entity
    createEditableMarkerComponentList(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Creates a EditableObject entity
    createEditableObject(editDate: String!, field: String!, id: ID!): String
    # Creates a EditableOmniConjunction entity
    createEditableOmniConjunction(
        conjunction: OmniConjunction!
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Creates a EditableOmniGeneList entity
    createEditableOmniGeneList(editDate: String!, field: String!, id: ID!): String
    # Creates a EditableOmniGeneReference entity
    createEditableOmniGeneReference(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Creates a EditableOmniMapList entity
    createEditableOmniMapList(editDate: String!, field: String!, id: ID!): String
    # Creates a EditableOncoTreeDiseaseList entity
    createEditableOncoTreeDiseaseList(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Creates a EditableProteinEffect entity
    createEditableProteinEffect(
        editDate: String!
        field: String!
        id: ID!
        proteinEffect: VariantProteinEffect!
    ): String
    # Creates a EditableRNASeqResultType entity
    createEditableRNASeqResultType(
        editDate: String!
        field: String!
        id: ID!
        resultType: RNASeqResultType!
    ): String
    # Creates a EditableStatement entity
    createEditableStatement(
        editDate: String!
        field: String!
        id: ID!
        statement: String!
    ): String
    # Creates a EditableStringList entity
    createEditableStringList(
        editDate: String!
        field: String!
        id: ID!
        stringList: [String]!
    ): String
    # Creates a EditableTMBInterpretation entity
    createEditableTMBInterpretation(
        editDate: String!
        field: String!
        id: ID!
        tmbInterpretation: TMBInterpretationType!
    ): String
    # Creates a EditableXRefList entity
    createEditableXRefList(editDate: String!, field: String!, id: ID!): String
    # Creates a Evidence entity
    createEvidence(
        ampCapAscoTier: String!
        approvalStatus: String!
        evidenceType: EvidenceType!
        id: ID!
        notes: String!
        responseType: ResponseType!
    ): String
    # Creates a EvidenceAssociation entity
    createEvidenceAssociation(id: ID!, name: String!): String
    # Creates a GODisease entity
    createGODisease(goId: String!, id: ID!): String
    # Creates a GOVariant entity
    createGOVariant(
        gene: String!
        goId: String!
        id: ID!
        mutationType: String!
    ): String
    # Creates a GenomicVariant entity
    createGenomicVariant(id: ID!): String
    # Creates a GenomicVariantMarker entity
    createGenomicVariantMarker(id: ID!): String
    # Creates a HotSpotVariant entity
    createHotSpotVariant(
        begin: String!
        end: String!
        gene: String!
        id: ID!
        name: String!
        position: Int!
        referenceAminoAcid: String!
        variantAminoAcid: String!
    ): String
    # Creates a IHCAssay entity
    createIHCAssay(id: ID!): String
    # Creates a InternetReference entity
    createInternetReference(
        accessedDate: String!
        id: ID!
        shortReference: String!
        webAddress: String!
    ): String
    # Creates a JaxDisease entity
    createJaxDisease(
        id: ID!
        jaxId: String!
        source: String!
        termId: String!
    ): String
    # Creates a JaxDrug entity
    createJaxDrug(id: ID!, jaxId: String!): String
    # Creates a JaxDrugClass entity
    createJaxDrugClass(id: ID!, jaxId: String!): String
    # Creates a JaxGene entity
    createJaxGene(
        chromosome: String!
        entrezId: String!
        id: ID!
        jaxId: String!
        name: String!
    ): String
    # Creates a JaxVariant entity
    createJaxVariant(
        cDot: String!
        gDot: String!
        id: ID!
        jaxId: String!
        name: String!
        pDot: String!
        variantType: String!
    ): String
    # Creates a Journal entity
    createJournal(id: ID!, name: String!): String
    # Creates a LiteratureReference entity
    createLiteratureReference(
        DOI: String
        PMID: String
        abstract: String
        firstPage: String!
        id: ID!
        lastPage: String!
        publicationYear: String!
        shortReference: String!
        title: String!
        volume: String!
    ): String
    # Creates a MCode entity
    createMCode(id: ID!, mcodeId: String!): String
    # Creates a MSIMarker entity
    createMSIMarker(id: ID!): String
    # Creates a MarkerComponent entity
    createMarkerComponent(id: ID!): String
    # Creates a MarkerProfile entity
    createMarkerProfile(id: ID!): String
    # Creates a MeetingAbstractReference entity
    createMeetingAbstractReference(
        abstract: String
        id: ID!
        meetingDate: String!
        meetingName: String!
        shortReference: String!
        title: String!
    ): String
    # Creates a MyGeneInfoGene entity
    createMyGeneInfoGene(
        chromosome: String!
        end: Int
        entrezId: String!
        id: ID!
        name: String!
        start: Int
        strand: Strand!
    ): String
    # Creates a NCIDrug entity
    createNCIDrug(id: ID!, isAntineoplastic: Boolean!, isImmuno: Boolean!): String
    # Creates a OmniDisease entity
    createOmniDisease(
        id: ID!
        omniDiseaseId: String!
        omniDiseaseType: OmniDiseaseType!
    ): String
    # Creates a OmniDrug entity
    createOmniDrug(id: ID!): String
    # Creates a OmniGene entity
    createOmniGene(id: ID!, name: String!, names: String!): String
    # Creates a OmniMap entity
    createOmniMap(id: ID!): String
    # Creates a OncoTreeDisease entity
    createOncoTreeDisease(code: String!, id: ID!): String
    # Creates a OncoTreeOccurrence entity
    createOncoTreeOccurrence(
        id: ID!
        oncoTreeCode: String!
        perThousandOccurrence: Int!
    ): String
    # Creates a OntologicalDisease entity
    createOntologicalDisease(id: ID!): String
    # Creates a Outcome entity
    createOutcome(
        ConfidenceIntervalHi: Float
        ConfidenceIntervalLo: Float
        ConfidenceIntervalType: String
        clinicalCharacteristics: [String]
        dose: Int
        doseUnit: String
        endpoint: EvidenceEndpoint
        groupSize: Int
        id: ID!
        notes: String
        observation: String
        observationMethod: String
        outcome: Float!
        outcomeRangeMax: Float
        outcomeRangeMin: Float
        outcomeUnit: String!
        treatmentGroup: String
    ): String
    # Creates a ProteinExpressionMarker entity
    createProteinExpressionMarker(id: ID!): String
    # Creates a ProteinLevelAssay entity
    createProteinLevelAssay(id: ID!): String
    # Creates a RNASeqAssay entity
    createRNASeqAssay(id: ID!): String
    # Creates a RNASeqSignatureMarker entity
    createRNASeqSignatureMarker(id: ID!): String
    # Creates a Reference entity
    createReference(id: ID!, shortReference: String!): String
    # Creates a TCode entity
    createTCode(id: ID!, tcodeId: String!): String
    # Creates a TMBMarker entity
    createTMBMarker(id: ID!): String
    # Creates a Target entity
    createTarget(id: ID!, name: String!): String
    # Creates a TherapeuticIntervention entity
    createTherapeuticIntervention(id: ID!): String
    # Creates a Therapy entity
    createTherapy(conjunction: OmniConjunction!, id: ID!): String
    # Creates a TherapyComponent entity
    createTherapyComponent(id: ID!): String
    # Creates a UniprotEntry entity
    createUniprotEntry(
        accessionNumber: String!
        id: ID!
        name: String!
        uniprotId: String!
    ): String
    # Creates a User entity
    createUser(
        id: ID!
        isAdmin: Boolean!
        isEditor: Boolean!
        name: String!
        password: String!
    ): String
    # Creates a VariantCNV entity
    createVariantCNV(id: ID!): String
    # Creates a VariantFusion entity
    createVariantFusion(id: ID!): String
    # Creates a VariantRegion entity
    createVariantRegion(
        id: ID!
        indelType: IndelType!
        regionType: RegionType!
        variantType: VariantType!
    ): String
    # Creates a VariantSNVIndel entity
    createVariantSNVIndel(
        id: ID!
        indelType: IndelType!
        variantType: VariantType!
    ): String
    # Creates a XRef entity
    createXRef(id: ID!, source: String!, sourceId: String!): String
    # Deletes a AdverseEvent entity
    deleteAdverseEvent(id: ID!): String
    # Deletes a Author entity
    deleteAuthor(id: ID!): String
    # Deletes References from Author entity
    deleteAuthorReferences(id: ID!, references: [ID!]!): String
    # Deletes a ClinVarVariant entity
    deleteClinVarVariant(id: ID!): String
    # Deletes GenomicVariant from ClinVarVariant entity
    deleteClinVarVariantGenomicVariant(genomicVariant: [ID!]!, id: ID!): String
    # Deletes SignficanceExplanation from ClinVarVariant entity
    deleteClinVarVariantSignficanceExplanation(
        id: ID!
        signficanceExplanation: [ID!]!
    ): String
    # Deletes Significance from ClinVarVariant entity
    deleteClinVarVariantSignificance(id: ID!, significance: [ID!]!): String
    # Deletes a ClinicalTrial entity
    deleteClinicalTrial(id: ID!): String
    # Deletes References from ClinicalTrial entity
    deleteClinicalTrialReferences(id: ID!, references: [ID!]!): String
    # Deletes a DNAMarker entity
    deleteDNAMarker(id: ID!): String
    # Deletes Definition from DNAMarker entity
    deleteDNAMarkerDefinition(definition: [ID!]!, id: ID!): String
    # Deletes Method from DNAMarker entity
    deleteDNAMarkerMethod(id: ID!, method: [ID!]!): String
    # Deletes Name from DNAMarker entity
    deleteDNAMarkerName(id: ID!, name: [ID!]!): String
    # Deletes ResultString from DNAMarker entity
    deleteDNAMarkerResultString(id: ID!, resultString: [ID!]!): String
    # Deletes a DODisease entity
    deleteDODisease(id: ID!): String
    # Deletes Children from DODisease entity
    deleteDODiseaseChildren(children: [ID!]!, id: ID!): String
    # Deletes Definition from DODisease entity
    deleteDODiseaseDefinition(definition: [ID!]!, id: ID!): String
    # Deletes ExactSynonyms from DODisease entity
    deleteDODiseaseExactSynonyms(exactSynonyms: [ID!]!, id: ID!): String
    # Deletes Name from DODisease entity
    deleteDODiseaseName(id: ID!, name: [ID!]!): String
    # Deletes NarrowSynonyms from DODisease entity
    deleteDODiseaseNarrowSynonyms(id: ID!, narrowSynonyms: [ID!]!): String
    # Deletes Parents from DODisease entity
    deleteDODiseaseParents(id: ID!, parents: [ID!]!): String
    # Deletes RelatedSynonyms from DODisease entity
    deleteDODiseaseRelatedSynonyms(id: ID!, relatedSynonyms: [ID!]!): String
    # Deletes Subsets from DODisease entity
    deleteDODiseaseSubsets(id: ID!, subsets: [ID!]!): String
    # Deletes Xrefs from DODisease entity
    deleteDODiseaseXrefs(id: ID!, xrefs: [ID!]!): String
    # Deletes a DrugCategory entity
    deleteDrugCategory(id: ID!): String
    # Deletes Definition from DrugCategory entity
    deleteDrugCategoryDefinition(definition: [ID!]!, id: ID!): String
    # Deletes Drugs from DrugCategory entity
    deleteDrugCategoryDrugs(drugs: [ID!]!, id: ID!): String
    # Deletes JaxDrugClass from DrugCategory entity
    deleteDrugCategoryJaxDrugClass(id: ID!, jaxDrugClass: [ID!]!): String
    # Deletes Name from DrugCategory entity
    deleteDrugCategoryName(id: ID!, name: [ID!]!): String
    # Deletes a EditableAssayComparator entity
    deleteEditableAssayComparator(id: ID!): String
    # Deletes Editor from EditableAssayComparator entity
    deleteEditableAssayComparatorEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableAssayComparator entity
    deleteEditableAssayComparatorReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableBoolean entity
    deleteEditableBoolean(id: ID!): String
    # Deletes Editor from EditableBoolean entity
    deleteEditableBooleanEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableBoolean entity
    deleteEditableBooleanReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableCopyChange entity
    deleteEditableCopyChange(id: ID!): String
    # Deletes Editor from EditableCopyChange entity
    deleteEditableCopyChangeEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableCopyChange entity
    deleteEditableCopyChangeReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableDODiseaseList entity
    deleteEditableDODiseaseList(id: ID!): String
    # Deletes Editor from EditableDODiseaseList entity
    deleteEditableDODiseaseListEditor(editor: [ID!]!, id: ID!): String
    # Deletes List from EditableDODiseaseList entity
    deleteEditableDODiseaseListList(id: ID!, list: [ID!]!): String
    # Deletes References from EditableDODiseaseList entity
    deleteEditableDODiseaseListReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableFloat entity
    deleteEditableFloat(id: ID!): String
    # Deletes Editor from EditableFloat entity
    deleteEditableFloatEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableFloat entity
    deleteEditableFloatReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableGODiseaseList entity
    deleteEditableGODiseaseList(id: ID!): String
    # Deletes Editor from EditableGODiseaseList entity
    deleteEditableGODiseaseListEditor(editor: [ID!]!, id: ID!): String
    # Deletes List from EditableGODiseaseList entity
    deleteEditableGODiseaseListList(id: ID!, list: [ID!]!): String
    # Deletes References from EditableGODiseaseList entity
    deleteEditableGODiseaseListReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableImmuneCycleRole entity
    deleteEditableImmuneCycleRole(id: ID!): String
    # Deletes Editor from EditableImmuneCycleRole entity
    deleteEditableImmuneCycleRoleEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableImmuneCycleRole entity
    deleteEditableImmuneCycleRoleReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableImmuneFunction entity
    deleteEditableImmuneFunction(id: ID!): String
    # Deletes Editor from EditableImmuneFunction entity
    deleteEditableImmuneFunctionEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableImmuneFunction entity
    deleteEditableImmuneFunctionReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableImmunePhenotype entity
    deleteEditableImmunePhenotype(id: ID!): String
    # Deletes Editor from EditableImmunePhenotype entity
    deleteEditableImmunePhenotypeEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableImmunePhenotype entity
    deleteEditableImmunePhenotypeReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableInt entity
    deleteEditableInt(id: ID!): String
    # Deletes Editor from EditableInt entity
    deleteEditableIntEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableInt entity
    deleteEditableIntReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableJAXDiseaseList entity
    deleteEditableJAXDiseaseList(id: ID!): String
    # Deletes Editor from EditableJAXDiseaseList entity
    deleteEditableJAXDiseaseListEditor(editor: [ID!]!, id: ID!): String
    # Deletes List from EditableJAXDiseaseList entity
    deleteEditableJAXDiseaseListList(id: ID!, list: [ID!]!): String
    # Deletes References from EditableJAXDiseaseList entity
    deleteEditableJAXDiseaseListReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableMarkerComponentList entity
    deleteEditableMarkerComponentList(id: ID!): String
    # Deletes Components from EditableMarkerComponentList entity
    deleteEditableMarkerComponentListComponents(
        components: [ID!]!
        id: ID!
    ): String
    # Deletes Editor from EditableMarkerComponentList entity
    deleteEditableMarkerComponentListEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableMarkerComponentList entity
    deleteEditableMarkerComponentListReferences(
        id: ID!
        references: [ID!]!
    ): String
    # Deletes a EditableObject entity
    deleteEditableObject(id: ID!): String
    # Deletes Editor from EditableObject entity
    deleteEditableObjectEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableObject entity
    deleteEditableObjectReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableOmniConjunction entity
    deleteEditableOmniConjunction(id: ID!): String
    # Deletes Editor from EditableOmniConjunction entity
    deleteEditableOmniConjunctionEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableOmniConjunction entity
    deleteEditableOmniConjunctionReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableOmniGeneList entity
    deleteEditableOmniGeneList(id: ID!): String
    # Deletes Editor from EditableOmniGeneList entity
    deleteEditableOmniGeneListEditor(editor: [ID!]!, id: ID!): String
    # Deletes Genes from EditableOmniGeneList entity
    deleteEditableOmniGeneListGenes(genes: [ID!]!, id: ID!): String
    # Deletes References from EditableOmniGeneList entity
    deleteEditableOmniGeneListReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableOmniGeneReference entity
    deleteEditableOmniGeneReference(id: ID!): String
    # Deletes Editor from EditableOmniGeneReference entity
    deleteEditableOmniGeneReferenceEditor(editor: [ID!]!, id: ID!): String
    # Deletes Gene from EditableOmniGeneReference entity
    deleteEditableOmniGeneReferenceGene(gene: [ID!]!, id: ID!): String
    # Deletes References from EditableOmniGeneReference entity
    deleteEditableOmniGeneReferenceReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableOmniMapList entity
    deleteEditableOmniMapList(id: ID!): String
    # Deletes Editor from EditableOmniMapList entity
    deleteEditableOmniMapListEditor(editor: [ID!]!, id: ID!): String
    # Deletes List from EditableOmniMapList entity
    deleteEditableOmniMapListList(id: ID!, list: [ID!]!): String
    # Deletes References from EditableOmniMapList entity
    deleteEditableOmniMapListReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableOncoTreeDiseaseList entity
    deleteEditableOncoTreeDiseaseList(id: ID!): String
    # Deletes Editor from EditableOncoTreeDiseaseList entity
    deleteEditableOncoTreeDiseaseListEditor(editor: [ID!]!, id: ID!): String
    # Deletes List from EditableOncoTreeDiseaseList entity
    deleteEditableOncoTreeDiseaseListList(id: ID!, list: [ID!]!): String
    # Deletes References from EditableOncoTreeDiseaseList entity
    deleteEditableOncoTreeDiseaseListReferences(
        id: ID!
        references: [ID!]!
    ): String
    # Deletes a EditableProteinEffect entity
    deleteEditableProteinEffect(id: ID!): String
    # Deletes Editor from EditableProteinEffect entity
    deleteEditableProteinEffectEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableProteinEffect entity
    deleteEditableProteinEffectReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableRNASeqResultType entity
    deleteEditableRNASeqResultType(id: ID!): String
    # Deletes Editor from EditableRNASeqResultType entity
    deleteEditableRNASeqResultTypeEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableRNASeqResultType entity
    deleteEditableRNASeqResultTypeReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableStatement entity
    deleteEditableStatement(id: ID!): String
    # Deletes Editor from EditableStatement entity
    deleteEditableStatementEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableStatement entity
    deleteEditableStatementReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableStringList entity
    deleteEditableStringList(id: ID!): String
    # Deletes Editor from EditableStringList entity
    deleteEditableStringListEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableStringList entity
    deleteEditableStringListReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableTMBInterpretation entity
    deleteEditableTMBInterpretation(id: ID!): String
    # Deletes Editor from EditableTMBInterpretation entity
    deleteEditableTMBInterpretationEditor(editor: [ID!]!, id: ID!): String
    # Deletes References from EditableTMBInterpretation entity
    deleteEditableTMBInterpretationReferences(id: ID!, references: [ID!]!): String
    # Deletes a EditableXRefList entity
    deleteEditableXRefList(id: ID!): String
    # Deletes Editor from EditableXRefList entity
    deleteEditableXRefListEditor(editor: [ID!]!, id: ID!): String
    # Deletes List from EditableXRefList entity
    deleteEditableXRefListList(id: ID!, list: [ID!]!): String
    # Deletes References from EditableXRefList entity
    deleteEditableXRefListReferences(id: ID!, references: [ID!]!): String
    # Deletes a Evidence entity
    deleteEvidence(id: ID!): String
    # Deletes AdverseEvents from Evidence entity
    deleteEvidenceAdverseEvents(adverseEvents: [ID!]!, id: ID!): String
    # Deletes a EvidenceAssociation entity
    deleteEvidenceAssociation(id: ID!): String
    # Deletes Disease from EvidenceAssociation entity
    deleteEvidenceAssociationDisease(disease: [ID!]!, id: ID!): String
    # Deletes Evidences from EvidenceAssociation entity
    deleteEvidenceAssociationEvidences(evidences: [ID!]!, id: ID!): String
    # Deletes Marker from EvidenceAssociation entity
    deleteEvidenceAssociationMarker(id: ID!, marker: [ID!]!): String
    # Deletes Therapy from EvidenceAssociation entity
    deleteEvidenceAssociationTherapy(id: ID!, therapy: [ID!]!): String
    # Deletes EvidenceAssociation from Evidence entity
    deleteEvidenceEvidenceAssociation(
        evidenceAssociation: [ID!]!
        id: ID!
    ): String
    # Deletes Outcomes from Evidence entity
    deleteEvidenceOutcomes(id: ID!, outcomes: [ID!]!): String
    # Deletes Reference from Evidence entity
    deleteEvidenceReference(id: ID!, reference: [ID!]!): String
    # Deletes a GODisease entity
    deleteGODisease(id: ID!): String
    # Deletes Children from GODisease entity
    deleteGODiseaseChildren(children: [ID!]!, id: ID!): String
    # Deletes Definition from GODisease entity
    deleteGODiseaseDefinition(definition: [ID!]!, id: ID!): String
    # Deletes JaxDiseases from GODisease entity
    deleteGODiseaseJaxDiseases(id: ID!, jaxDiseases: [ID!]!): String
    # Deletes Name from GODisease entity
    deleteGODiseaseName(id: ID!, name: [ID!]!): String
    # Deletes Parents from GODisease entity
    deleteGODiseaseParents(id: ID!, parents: [ID!]!): String
    # Deletes Synonyms from GODisease entity
    deleteGODiseaseSynonyms(id: ID!, synonyms: [ID!]!): String
    # Deletes Xrefs from GODisease entity
    deleteGODiseaseXrefs(id: ID!, xrefs: [ID!]!): String
    # Deletes a GOVariant entity
    deleteGOVariant(id: ID!): String
    # Deletes GenomicVariant from GOVariant entity
    deleteGOVariantGenomicVariant(genomicVariant: [ID!]!, id: ID!): String
    # Deletes JaxVariant from GOVariant entity
    deleteGOVariantJaxVariant(id: ID!, jaxVariant: [ID!]!): String
    # Deletes Name from GOVariant entity
    deleteGOVariantName(id: ID!, name: [ID!]!): String
    # Deletes a GenomicVariant entity
    deleteGenomicVariant(id: ID!): String
    # Deletes ClinVarVariant from GenomicVariant entity
    deleteGenomicVariantClinVarVariant(clinVarVariant: [ID!]!, id: ID!): String
    # Deletes Description from GenomicVariant entity
    deleteGenomicVariantDescription(description: [ID!]!, id: ID!): String
    # Deletes Gene from GenomicVariant entity
    deleteGenomicVariantGene(gene: [ID!]!, id: ID!): String
    # Deletes GoVariant from GenomicVariant entity
    deleteGenomicVariantGoVariant(goVariant: [ID!]!, id: ID!): String
    # Deletes HotSpotVariant from GenomicVariant entity
    deleteGenomicVariantHotSpotVariant(hotSpotVariant: [ID!]!, id: ID!): String
    # Deletes JaxVariant from GenomicVariant entity
    deleteGenomicVariantJaxVariant(id: ID!, jaxVariant: [ID!]!): String
    # Deletes a GenomicVariantMarker entity
    deleteGenomicVariantMarker(id: ID!): String
    # Deletes Gene from GenomicVariantMarker entity
    deleteGenomicVariantMarkerGene(gene: [ID!]!, id: ID!): String
    # Deletes Method from GenomicVariantMarker entity
    deleteGenomicVariantMarkerMethod(id: ID!, method: [ID!]!): String
    # Deletes Name from GenomicVariantMarker entity
    deleteGenomicVariantMarkerName(id: ID!, name: [ID!]!): String
    # Deletes ResultString from GenomicVariantMarker entity
    deleteGenomicVariantMarkerResultString(id: ID!, resultString: [ID!]!): String
    # Deletes Variant from GenomicVariantMarker entity
    deleteGenomicVariantMarkerVariant(id: ID!, variant: [ID!]!): String
    # Deletes Name from GenomicVariant entity
    deleteGenomicVariantName(id: ID!, name: [ID!]!): String
    # Deletes NonCanonicalTranscript from GenomicVariant entity
    deleteGenomicVariantNonCanonicalTranscript(
        id: ID!
        nonCanonicalTranscript: [ID!]!
    ): String
    # Deletes a HotSpotVariant entity
    deleteHotSpotVariant(id: ID!): String
    # Deletes GenomicVariant from HotSpotVariant entity
    deleteHotSpotVariantGenomicVariant(genomicVariant: [ID!]!, id: ID!): String
    # Deletes Occurrences from HotSpotVariant entity
    deleteHotSpotVariantOccurrences(id: ID!, occurrences: [ID!]!): String
    # Deletes a IHCAssay entity
    deleteIHCAssay(id: ID!): String
    # Deletes AntibodyClone from IHCAssay entity
    deleteIHCAssayAntibodyClone(antibodyClone: [ID!]!, id: ID!): String
    # Deletes Comparator from IHCAssay entity
    deleteIHCAssayComparator(comparator: [ID!]!, id: ID!): String
    # Deletes Name from IHCAssay entity
    deleteIHCAssayName(id: ID!, name: [ID!]!): String
    # Deletes ProteinExpressionMarkers from IHCAssay entity
    deleteIHCAssayProteinExpressionMarkers(
        id: ID!
        proteinExpressionMarkers: [ID!]!
    ): String
    # Deletes ResultMax from IHCAssay entity
    deleteIHCAssayResultMax(id: ID!, resultMax: [ID!]!): String
    # Deletes ResultMin from IHCAssay entity
    deleteIHCAssayResultMin(id: ID!, resultMin: [ID!]!): String
    # Deletes ResultString from IHCAssay entity
    deleteIHCAssayResultString(id: ID!, resultString: [ID!]!): String
    # Deletes ResultUnits from IHCAssay entity
    deleteIHCAssayResultUnits(id: ID!, resultUnits: [ID!]!): String
    # Deletes a InternetReference entity
    deleteInternetReference(id: ID!): String
    # Deletes StatementsReferenced from InternetReference entity
    deleteInternetReferenceStatementsReferenced(
        id: ID!
        statementsReferenced: [ID!]!
    ): String
    # Deletes a JaxDisease entity
    deleteJaxDisease(id: ID!): String
    # Deletes Definition from JaxDisease entity
    deleteJaxDiseaseDefinition(definition: [ID!]!, id: ID!): String
    # Deletes Name from JaxDisease entity
    deleteJaxDiseaseName(id: ID!, name: [ID!]!): String
    # Deletes a JaxDrug entity
    deleteJaxDrug(id: ID!): String
    # Deletes a JaxDrugClass entity
    deleteJaxDrugClass(id: ID!): String
    # Deletes Drugs from JaxDrugClass entity
    deleteJaxDrugClassDrugs(drugs: [ID!]!, id: ID!): String
    # Deletes Name from JaxDrugClass entity
    deleteJaxDrugClassName(id: ID!, name: [ID!]!): String
    # Deletes Description from JaxDrug entity
    deleteJaxDrugDescription(description: [ID!]!, id: ID!): String
    # Deletes DrugClasses from JaxDrug entity
    deleteJaxDrugDrugClasses(drugClasses: [ID!]!, id: ID!): String
    # Deletes Name from JaxDrug entity
    deleteJaxDrugName(id: ID!, name: [ID!]!): String
    # Deletes Synonyms from JaxDrug entity
    deleteJaxDrugSynonyms(id: ID!, synonyms: [ID!]!): String
    # Deletes TradeName from JaxDrug entity
    deleteJaxDrugTradeName(id: ID!, tradeName: [ID!]!): String
    # Deletes a JaxGene entity
    deleteJaxGene(id: ID!): String
    # Deletes CanonicalTranscript from JaxGene entity
    deleteJaxGeneCanonicalTranscript(canonicalTranscript: [ID!]!, id: ID!): String
    # Deletes Description from JaxGene entity
    deleteJaxGeneDescription(description: [ID!]!, id: ID!): String
    # Deletes Synonyms from JaxGene entity
    deleteJaxGeneSynonyms(id: ID!, synonyms: [ID!]!): String
    # Deletes a JaxVariant entity
    deleteJaxVariant(id: ID!): String
    # Deletes Description from JaxVariant entity
    deleteJaxVariantDescription(description: [ID!]!, id: ID!): String
    # Deletes Gene from JaxVariant entity
    deleteJaxVariantGene(gene: [ID!]!, id: ID!): String
    # Deletes GenomicVariant from JaxVariant entity
    deleteJaxVariantGenomicVariant(genomicVariant: [ID!]!, id: ID!): String
    # Deletes GoVariant from JaxVariant entity
    deleteJaxVariantGoVariant(goVariant: [ID!]!, id: ID!): String
    # Deletes ProteinEffect from JaxVariant entity
    deleteJaxVariantProteinEffect(id: ID!, proteinEffect: [ID!]!): String
    # Deletes Transcript from JaxVariant entity
    deleteJaxVariantTranscript(id: ID!, transcript: [ID!]!): String
    # Deletes a Journal entity
    deleteJournal(id: ID!): String
    # Deletes a LiteratureReference entity
    deleteLiteratureReference(id: ID!): String
    # Deletes Authors from LiteratureReference entity
    deleteLiteratureReferenceAuthors(authors: [ID!]!, id: ID!): String
    # Deletes Journal from LiteratureReference entity
    deleteLiteratureReferenceJournal(id: ID!, journal: [ID!]!): String
    # Deletes StatementsReferenced from LiteratureReference entity
    deleteLiteratureReferenceStatementsReferenced(
        id: ID!
        statementsReferenced: [ID!]!
    ): String
    # Deletes a MCode entity
    deleteMCode(id: ID!): String
    # Deletes Active from MCode entity
    deleteMCodeActive(active: [ID!]!, id: ID!): String
    # Deletes Children from MCode entity
    deleteMCodeChildren(children: [ID!]!, id: ID!): String
    # Deletes DiseasePath from MCode entity
    deleteMCodeDiseasePath(diseasePath: [ID!]!, id: ID!): String
    # Deletes OmniDisease from MCode entity
    deleteMCodeOmniDisease(id: ID!, omniDisease: [ID!]!): String
    # Deletes Parents from MCode entity
    deleteMCodeParents(id: ID!, parents: [ID!]!): String
    # Deletes a MSIMarker entity
    deleteMSIMarker(id: ID!): String
    # Deletes Method from MSIMarker entity
    deleteMSIMarkerMethod(id: ID!, method: [ID!]!): String
    # Deletes Name from MSIMarker entity
    deleteMSIMarkerName(id: ID!, name: [ID!]!): String
    # Deletes ResultString from MSIMarker entity
    deleteMSIMarkerResultString(id: ID!, resultString: [ID!]!): String
    # Deletes a MarkerComponent entity
    deleteMarkerComponent(id: ID!): String
    # Deletes Method from MarkerComponent entity
    deleteMarkerComponentMethod(id: ID!, method: [ID!]!): String
    # Deletes Name from MarkerComponent entity
    deleteMarkerComponentName(id: ID!, name: [ID!]!): String
    # Deletes ResultString from MarkerComponent entity
    deleteMarkerComponentResultString(id: ID!, resultString: [ID!]!): String
    # Deletes a MarkerProfile entity
    deleteMarkerProfile(id: ID!): String
    # Deletes Components from MarkerProfile entity
    deleteMarkerProfileComponents(components: [ID!]!, id: ID!): String
    # Deletes Conjunction from MarkerProfile entity
    deleteMarkerProfileConjunction(conjunction: [ID!]!, id: ID!): String
    # Deletes EvidenceAssociations from MarkerProfile entity
    deleteMarkerProfileEvidenceAssociations(
        evidenceAssociations: [ID!]!
        id: ID!
    ): String
    # Deletes Method from MarkerProfile entity
    deleteMarkerProfileMethod(id: ID!, method: [ID!]!): String
    # Deletes Name from MarkerProfile entity
    deleteMarkerProfileName(id: ID!, name: [ID!]!): String
    # Deletes ResultString from MarkerProfile entity
    deleteMarkerProfileResultString(id: ID!, resultString: [ID!]!): String
    # Deletes a MeetingAbstractReference entity
    deleteMeetingAbstractReference(id: ID!): String
    # Deletes Authors from MeetingAbstractReference entity
    deleteMeetingAbstractReferenceAuthors(authors: [ID!]!, id: ID!): String
    # Deletes StatementsReferenced from MeetingAbstractReference entity
    deleteMeetingAbstractReferenceStatementsReferenced(
        id: ID!
        statementsReferenced: [ID!]!
    ): String
    # Deletes a MyGeneInfoGene entity
    deleteMyGeneInfoGene(id: ID!): String
    # Deletes Description from MyGeneInfoGene entity
    deleteMyGeneInfoGeneDescription(description: [ID!]!, id: ID!): String
    # Deletes UniprotEntry from MyGeneInfoGene entity
    deleteMyGeneInfoGeneUniprotEntry(id: ID!, uniprotEntry: [ID!]!): String
    # Deletes a NCIDrug entity
    deleteNCIDrug(id: ID!): String
    # Deletes AnnotationDate from NCIDrug entity
    deleteNCIDrugAnnotationDate(annotationDate: [ID!]!, id: ID!): String
    # Deletes ConceptCode from NCIDrug entity
    deleteNCIDrugConceptCode(conceptCode: [ID!]!, id: ID!): String
    # Deletes Definition from NCIDrug entity
    deleteNCIDrugDefinition(definition: [ID!]!, id: ID!): String
    # Deletes DrugCategory from NCIDrug entity
    deleteNCIDrugDrugCategory(drugCategory: [ID!]!, id: ID!): String
    # Deletes Modulator from NCIDrug entity
    deleteNCIDrugModulator(id: ID!, modulator: [ID!]!): String
    # Deletes Name from NCIDrug entity
    deleteNCIDrugName(id: ID!, name: [ID!]!): String
    # Deletes Synonyms from NCIDrug entity
    deleteNCIDrugSynonyms(id: ID!, synonyms: [ID!]!): String
    # Deletes a OmniDisease entity
    deleteOmniDisease(id: ID!): String
    # Deletes Name from OmniDisease entity
    deleteOmniDiseaseName(id: ID!, name: [ID!]!): String
    # Deletes a OmniDrug entity
    deleteOmniDrug(id: ID!): String
    # Deletes ComponentOf from OmniDrug entity
    deleteOmniDrugComponentOf(componentOf: [ID!]!, id: ID!): String
    # Deletes Definition from OmniDrug entity
    deleteOmniDrugDefinition(definition: [ID!]!, id: ID!): String
    # Deletes DrugCategories from OmniDrug entity
    deleteOmniDrugDrugCategories(drugCategories: [ID!]!, id: ID!): String
    # Deletes JaxDrug from OmniDrug entity
    deleteOmniDrugJaxDrug(id: ID!, jaxDrug: [ID!]!): String
    # Deletes Name from OmniDrug entity
    deleteOmniDrugName(id: ID!, name: [ID!]!): String
    # Deletes NciDrug from OmniDrug entity
    deleteOmniDrugNciDrug(id: ID!, nciDrug: [ID!]!): String
    # Deletes Synonyms from OmniDrug entity
    deleteOmniDrugSynonyms(id: ID!, synonyms: [ID!]!): String
    # Deletes Target from OmniDrug entity
    deleteOmniDrugTarget(id: ID!, target: [ID!]!): String
    # Deletes TradeName from OmniDrug entity
    deleteOmniDrugTradeName(id: ID!, tradeName: [ID!]!): String
    # Deletes a OmniGene entity
    deleteOmniGene(id: ID!): String
    # Deletes GeneDescription from OmniGene entity
    deleteOmniGeneGeneDescription(geneDescription: [ID!]!, id: ID!): String
    # Deletes JaxGene from OmniGene entity
    deleteOmniGeneJaxGene(id: ID!, jaxGene: [ID!]!): String
    # Deletes MyGeneInfoGene from OmniGene entity
    deleteOmniGeneMyGeneInfoGene(id: ID!, myGeneInfoGene: [ID!]!): String
    # Deletes OncogenicCategory from OmniGene entity
    deleteOmniGeneOncogenicCategory(id: ID!, oncogenicCategory: [ID!]!): String
    # Deletes PanelName from OmniGene entity
    deleteOmniGenePanelName(id: ID!, panelName: [ID!]!): String
    # Deletes Synonyms from OmniGene entity
    deleteOmniGeneSynonyms(id: ID!, synonyms: [ID!]!): String
    # Deletes Transcript from OmniGene entity
    deleteOmniGeneTranscript(id: ID!, transcript: [ID!]!): String
    # Deletes UniprotEntry from OmniGene entity
    deleteOmniGeneUniprotEntry(id: ID!, uniprotEntry: [ID!]!): String
    # Deletes VariantMarkers from OmniGene entity
    deleteOmniGeneVariantMarkers(id: ID!, variantMarkers: [ID!]!): String
    # Deletes Variants from OmniGene entity
    deleteOmniGeneVariants(id: ID!, variants: [ID!]!): String
    # Deletes a OmniMap entity
    deleteOmniMap(id: ID!): String
    # Deletes MCodes from OmniMap entity
    deleteOmniMapMCodes(id: ID!, mCodes: [ID!]!): String
    # Deletes OmniDisease from OmniMap entity
    deleteOmniMapOmniDisease(id: ID!, omniDisease: [ID!]!): String
    # Deletes a OncoTreeDisease entity
    deleteOncoTreeDisease(id: ID!): String
    # Deletes Children from OncoTreeDisease entity
    deleteOncoTreeDiseaseChildren(children: [ID!]!, id: ID!): String
    # Deletes MainType from OncoTreeDisease entity
    deleteOncoTreeDiseaseMainType(id: ID!, mainType: [ID!]!): String
    # Deletes Name from OncoTreeDisease entity
    deleteOncoTreeDiseaseName(id: ID!, name: [ID!]!): String
    # Deletes Occurrences from OncoTreeDisease entity
    deleteOncoTreeDiseaseOccurrences(id: ID!, occurrences: [ID!]!): String
    # Deletes Parent from OncoTreeDisease entity
    deleteOncoTreeDiseaseParent(id: ID!, parent: [ID!]!): String
    # Deletes Tissue from OncoTreeDisease entity
    deleteOncoTreeDiseaseTissue(id: ID!, tissue: [ID!]!): String
    # Deletes Xrefs from OncoTreeDisease entity
    deleteOncoTreeDiseaseXrefs(id: ID!, xrefs: [ID!]!): String
    # Deletes a OncoTreeOccurrence entity
    deleteOncoTreeOccurrence(id: ID!): String
    # Deletes Disease from OncoTreeOccurrence entity
    deleteOncoTreeOccurrenceDisease(disease: [ID!]!, id: ID!): String
    # Deletes HotSpotVariant from OncoTreeOccurrence entity
    deleteOncoTreeOccurrenceHotSpotVariant(
        hotSpotVariant: [ID!]!
        id: ID!
    ): String
    # Deletes Occurrences from OncoTreeOccurrence entity
    deleteOncoTreeOccurrenceOccurrences(id: ID!, occurrences: [ID!]!): String
    # Deletes PercentOccurrence from OncoTreeOccurrence entity
    deleteOncoTreeOccurrencePercentOccurrence(
        id: ID!
        percentOccurrence: [ID!]!
    ): String
    # Deletes TotalSamples from OncoTreeOccurrence entity
    deleteOncoTreeOccurrenceTotalSamples(id: ID!, totalSamples: [ID!]!): String
    # Deletes a OntologicalDisease entity
    deleteOntologicalDisease(id: ID!): String
    # Deletes Children from OntologicalDisease entity
    deleteOntologicalDiseaseChildren(children: [ID!]!, id: ID!): String
    # Deletes Description from OntologicalDisease entity
    deleteOntologicalDiseaseDescription(description: [ID!]!, id: ID!): String
    # Deletes DoDiseases from OntologicalDisease entity
    deleteOntologicalDiseaseDoDiseases(doDiseases: [ID!]!, id: ID!): String
    # Deletes GoDiseases from OntologicalDisease entity
    deleteOntologicalDiseaseGoDiseases(goDiseases: [ID!]!, id: ID!): String
    # Deletes JaxDiseases from OntologicalDisease entity
    deleteOntologicalDiseaseJaxDiseases(id: ID!, jaxDiseases: [ID!]!): String
    # Deletes Name from OntologicalDisease entity
    deleteOntologicalDiseaseName(id: ID!, name: [ID!]!): String
    # Deletes OmniMaps from OntologicalDisease entity
    deleteOntologicalDiseaseOmniMaps(id: ID!, omniMaps: [ID!]!): String
    # Deletes OncoTreeDiseases from OntologicalDisease entity
    deleteOntologicalDiseaseOncoTreeDiseases(
        id: ID!
        oncoTreeDiseases: [ID!]!
    ): String
    # Deletes Parents from OntologicalDisease entity
    deleteOntologicalDiseaseParents(id: ID!, parents: [ID!]!): String
    # Deletes Synonyms from OntologicalDisease entity
    deleteOntologicalDiseaseSynonyms(id: ID!, synonyms: [ID!]!): String
    # Deletes Xrefs from OntologicalDisease entity
    deleteOntologicalDiseaseXrefs(id: ID!, xrefs: [ID!]!): String
    # Deletes a Outcome entity
    deleteOutcome(id: ID!): String
    # Deletes Evidences from Outcome entity
    deleteOutcomeEvidences(evidences: [ID!]!, id: ID!): String
    # Deletes a ProteinExpressionMarker entity
    deleteProteinExpressionMarker(id: ID!): String
    # Deletes Assay from ProteinExpressionMarker entity
    deleteProteinExpressionMarkerAssay(assay: [ID!]!, id: ID!): String
    # Deletes Genes from ProteinExpressionMarker entity
    deleteProteinExpressionMarkerGenes(genes: [ID!]!, id: ID!): String
    # Deletes ImmuneCycleRoles from ProteinExpressionMarker entity
    deleteProteinExpressionMarkerImmuneCycleRoles(
        id: ID!
        immuneCycleRoles: [ID!]!
    ): String
    # Deletes ImmuneFunctions from ProteinExpressionMarker entity
    deleteProteinExpressionMarkerImmuneFunctions(
        id: ID!
        immuneFunctions: [ID!]!
    ): String
    # Deletes ImmunePhenotypes from ProteinExpressionMarker entity
    deleteProteinExpressionMarkerImmunePhenotypes(
        id: ID!
        immunePhenotypes: [ID!]!
    ): String
    # Deletes Method from ProteinExpressionMarker entity
    deleteProteinExpressionMarkerMethod(id: ID!, method: [ID!]!): String
    # Deletes Name from ProteinExpressionMarker entity
    deleteProteinExpressionMarkerName(id: ID!, name: [ID!]!): String
    # Deletes ResultString from ProteinExpressionMarker entity
    deleteProteinExpressionMarkerResultString(
        id: ID!
        resultString: [ID!]!
    ): String
    # Deletes Synonyms from ProteinExpressionMarker entity
    deleteProteinExpressionMarkerSynonyms(id: ID!, synonyms: [ID!]!): String
    # Deletes a ProteinLevelAssay entity
    deleteProteinLevelAssay(id: ID!): String
    # Deletes Name from ProteinLevelAssay entity
    deleteProteinLevelAssayName(id: ID!, name: [ID!]!): String
    # Deletes a RNASeqAssay entity
    deleteRNASeqAssay(id: ID!): String
    # Deletes Comparator from RNASeqAssay entity
    deleteRNASeqAssayComparator(comparator: [ID!]!, id: ID!): String
    # Deletes Name from RNASeqAssay entity
    deleteRNASeqAssayName(id: ID!, name: [ID!]!): String
    # Deletes ProteinExpressionMarkers from RNASeqAssay entity
    deleteRNASeqAssayProteinExpressionMarkers(
        id: ID!
        proteinExpressionMarkers: [ID!]!
    ): String
    # Deletes ResultMax from RNASeqAssay entity
    deleteRNASeqAssayResultMax(id: ID!, resultMax: [ID!]!): String
    # Deletes ResultMin from RNASeqAssay entity
    deleteRNASeqAssayResultMin(id: ID!, resultMin: [ID!]!): String
    # Deletes ResultType from RNASeqAssay entity
    deleteRNASeqAssayResultType(id: ID!, resultType: [ID!]!): String
    # Deletes a RNASeqSignatureMarker entity
    deleteRNASeqSignatureMarker(id: ID!): String
    # Deletes Comparator from RNASeqSignatureMarker entity
    deleteRNASeqSignatureMarkerComparator(comparator: [ID!]!, id: ID!): String
    # Deletes Definition from RNASeqSignatureMarker entity
    deleteRNASeqSignatureMarkerDefinition(definition: [ID!]!, id: ID!): String
    # Deletes Interpretations from RNASeqSignatureMarker entity
    deleteRNASeqSignatureMarkerInterpretations(
        id: ID!
        interpretations: [ID!]!
    ): String
    # Deletes MarkerProfile from RNASeqSignatureMarker entity
    deleteRNASeqSignatureMarkerMarkerProfile(
        id: ID!
        markerProfile: [ID!]!
    ): String
    # Deletes Method from RNASeqSignatureMarker entity
    deleteRNASeqSignatureMarkerMethod(id: ID!, method: [ID!]!): String
    # Deletes Name from RNASeqSignatureMarker entity
    deleteRNASeqSignatureMarkerName(id: ID!, name: [ID!]!): String
    # Deletes ResultMax from RNASeqSignatureMarker entity
    deleteRNASeqSignatureMarkerResultMax(id: ID!, resultMax: [ID!]!): String
    # Deletes ResultMin from RNASeqSignatureMarker entity
    deleteRNASeqSignatureMarkerResultMin(id: ID!, resultMin: [ID!]!): String
    # Deletes ResultString from RNASeqSignatureMarker entity
    deleteRNASeqSignatureMarkerResultString(id: ID!, resultString: [ID!]!): String
    # Deletes a Reference entity
    deleteReference(id: ID!): String
    # Deletes StatementsReferenced from Reference entity
    deleteReferenceStatementsReferenced(
        id: ID!
        statementsReferenced: [ID!]!
    ): String
    # Deletes a TCode entity
    deleteTCode(id: ID!): String
    # Deletes Children from TCode entity
    deleteTCodeChildren(children: [ID!]!, id: ID!): String
    # Deletes Parents from TCode entity
    deleteTCodeParents(id: ID!, parents: [ID!]!): String
    # Deletes TissuePath from TCode entity
    deleteTCodeTissuePath(id: ID!, tissuePath: [ID!]!): String
    # Deletes a TMBMarker entity
    deleteTMBMarker(id: ID!): String
    # Deletes Comparator from TMBMarker entity
    deleteTMBMarkerComparator(comparator: [ID!]!, id: ID!): String
    # Deletes Interpretations from TMBMarker entity
    deleteTMBMarkerInterpretations(id: ID!, interpretations: [ID!]!): String
    # Deletes Method from TMBMarker entity
    deleteTMBMarkerMethod(id: ID!, method: [ID!]!): String
    # Deletes Name from TMBMarker entity
    deleteTMBMarkerName(id: ID!, name: [ID!]!): String
    # Deletes ResultMax from TMBMarker entity
    deleteTMBMarkerResultMax(id: ID!, resultMax: [ID!]!): String
    # Deletes ResultMin from TMBMarker entity
    deleteTMBMarkerResultMin(id: ID!, resultMin: [ID!]!): String
    # Deletes ResultString from TMBMarker entity
    deleteTMBMarkerResultString(id: ID!, resultString: [ID!]!): String
    # Deletes ResultUnits from TMBMarker entity
    deleteTMBMarkerResultUnits(id: ID!, resultUnits: [ID!]!): String
    # Deletes a Target entity
    deleteTarget(id: ID!): String
    # Deletes a TherapeuticIntervention entity
    deleteTherapeuticIntervention(id: ID!): String
    # Deletes ConcurrentWith from TherapeuticIntervention entity
    deleteTherapeuticInterventionConcurrentWith(
        concurrentWith: [ID!]!
        id: ID!
    ): String
    # Deletes Definition from TherapeuticIntervention entity
    deleteTherapeuticInterventionDefinition(definition: [ID!]!, id: ID!): String
    # Deletes EvidenceAssociations from TherapeuticIntervention entity
    deleteTherapeuticInterventionEvidenceAssociations(
        evidenceAssociations: [ID!]!
        id: ID!
    ): String
    # Deletes FollowedBy from TherapeuticIntervention entity
    deleteTherapeuticInterventionFollowedBy(followedBy: [ID!]!, id: ID!): String
    # Deletes Name from TherapeuticIntervention entity
    deleteTherapeuticInterventionName(id: ID!, name: [ID!]!): String
    # Deletes PrecededBy from TherapeuticIntervention entity
    deleteTherapeuticInterventionPrecededBy(id: ID!, precededBy: [ID!]!): String
    # Deletes Therapy from TherapeuticIntervention entity
    deleteTherapeuticInterventionTherapy(id: ID!, therapy: [ID!]!): String
    # Deletes a Therapy entity
    deleteTherapy(id: ID!): String
    # Deletes a TherapyComponent entity
    deleteTherapyComponent(id: ID!): String
    # Deletes ComponentOf from TherapyComponent entity
    deleteTherapyComponentComponentOf(componentOf: [ID!]!, id: ID!): String
    # Deletes Name from TherapyComponent entity
    deleteTherapyComponentName(id: ID!, name: [ID!]!): String
    # Deletes ComponentOf from Therapy entity
    deleteTherapyComponentOf(componentOf: [ID!]!, id: ID!): String
    # Deletes Components from Therapy entity
    deleteTherapyComponents(components: [ID!]!, id: ID!): String
    # Deletes Definition from Therapy entity
    deleteTherapyDefinition(definition: [ID!]!, id: ID!): String
    # Deletes Name from Therapy entity
    deleteTherapyName(id: ID!, name: [ID!]!): String
    # Deletes a UniprotEntry entity
    deleteUniprotEntry(id: ID!): String
    # Deletes Function from UniprotEntry entity
    deleteUniprotEntryFunction(function: [ID!]!, id: ID!): String
    # Deletes Gene from UniprotEntry entity
    deleteUniprotEntryGene(gene: [ID!]!, id: ID!): String
    # Deletes a User entity
    deleteUser(id: ID!): String
    # Deletes EditedStatements from User entity
    deleteUserEditedStatements(editedStatements: [ID!]!, id: ID!): String
    # Deletes a VariantCNV entity
    deleteVariantCNV(id: ID!): String
    # Deletes ClinVarVariant from VariantCNV entity
    deleteVariantCNVClinVarVariant(clinVarVariant: [ID!]!, id: ID!): String
    # Deletes CopyChange from VariantCNV entity
    deleteVariantCNVCopyChange(copyChange: [ID!]!, id: ID!): String
    # Deletes Description from VariantCNV entity
    deleteVariantCNVDescription(description: [ID!]!, id: ID!): String
    # Deletes Gene from VariantCNV entity
    deleteVariantCNVGene(gene: [ID!]!, id: ID!): String
    # Deletes GoVariant from VariantCNV entity
    deleteVariantCNVGoVariant(goVariant: [ID!]!, id: ID!): String
    # Deletes HotSpotVariant from VariantCNV entity
    deleteVariantCNVHotSpotVariant(hotSpotVariant: [ID!]!, id: ID!): String
    # Deletes JaxVariant from VariantCNV entity
    deleteVariantCNVJaxVariant(id: ID!, jaxVariant: [ID!]!): String
    # Deletes Name from VariantCNV entity
    deleteVariantCNVName(id: ID!, name: [ID!]!): String
    # Deletes NonCanonicalTranscript from VariantCNV entity
    deleteVariantCNVNonCanonicalTranscript(
        id: ID!
        nonCanonicalTranscript: [ID!]!
    ): String
    # Deletes a VariantFusion entity
    deleteVariantFusion(id: ID!): String
    # Deletes ClinVarVariant from VariantFusion entity
    deleteVariantFusionClinVarVariant(clinVarVariant: [ID!]!, id: ID!): String
    # Deletes CopyChange from VariantFusion entity
    deleteVariantFusionCopyChange(copyChange: [ID!]!, id: ID!): String
    # Deletes Description from VariantFusion entity
    deleteVariantFusionDescription(description: [ID!]!, id: ID!): String
    # Deletes Exon3Prime from VariantFusion entity
    deleteVariantFusionExon3Prime(exon3Prime: [ID!]!, id: ID!): String
    # Deletes Exon5Prime from VariantFusion entity
    deleteVariantFusionExon5Prime(exon5Prime: [ID!]!, id: ID!): String
    # Deletes Gene from VariantFusion entity
    deleteVariantFusionGene(gene: [ID!]!, id: ID!): String
    # Deletes Gene3Prime from VariantFusion entity
    deleteVariantFusionGene3Prime(gene3Prime: [ID!]!, id: ID!): String
    # Deletes Gene5Prime from VariantFusion entity
    deleteVariantFusionGene5Prime(gene5Prime: [ID!]!, id: ID!): String
    # Deletes GoVariant from VariantFusion entity
    deleteVariantFusionGoVariant(goVariant: [ID!]!, id: ID!): String
    # Deletes HotSpotVariant from VariantFusion entity
    deleteVariantFusionHotSpotVariant(hotSpotVariant: [ID!]!, id: ID!): String
    # Deletes JaxVariant from VariantFusion entity
    deleteVariantFusionJaxVariant(id: ID!, jaxVariant: [ID!]!): String
    # Deletes Name from VariantFusion entity
    deleteVariantFusionName(id: ID!, name: [ID!]!): String
    # Deletes NonCanonicalTranscript from VariantFusion entity
    deleteVariantFusionNonCanonicalTranscript(
        id: ID!
        nonCanonicalTranscript: [ID!]!
    ): String
    # Deletes a VariantRegion entity
    deleteVariantRegion(id: ID!): String
    # Deletes ClinVarVariant from VariantRegion entity
    deleteVariantRegionClinVarVariant(clinVarVariant: [ID!]!, id: ID!): String
    # Deletes Description from VariantRegion entity
    deleteVariantRegionDescription(description: [ID!]!, id: ID!): String
    # Deletes Gene from VariantRegion entity
    deleteVariantRegionGene(gene: [ID!]!, id: ID!): String
    # Deletes GoVariant from VariantRegion entity
    deleteVariantRegionGoVariant(goVariant: [ID!]!, id: ID!): String
    # Deletes HotSpotVariant from VariantRegion entity
    deleteVariantRegionHotSpotVariant(hotSpotVariant: [ID!]!, id: ID!): String
    # Deletes IsDeleterious from VariantRegion entity
    deleteVariantRegionIsDeleterious(id: ID!, isDeleterious: [ID!]!): String
    # Deletes IsFrameshift from VariantRegion entity
    deleteVariantRegionIsFrameshift(id: ID!, isFrameshift: [ID!]!): String
    # Deletes IsTruncating from VariantRegion entity
    deleteVariantRegionIsTruncating(id: ID!, isTruncating: [ID!]!): String
    # Deletes JaxVariant from VariantRegion entity
    deleteVariantRegionJaxVariant(id: ID!, jaxVariant: [ID!]!): String
    # Deletes Name from VariantRegion entity
    deleteVariantRegionName(id: ID!, name: [ID!]!): String
    # Deletes NonCanonicalTranscript from VariantRegion entity
    deleteVariantRegionNonCanonicalTranscript(
        id: ID!
        nonCanonicalTranscript: [ID!]!
    ): String
    # Deletes ProteinEffect from VariantRegion entity
    deleteVariantRegionProteinEffect(id: ID!, proteinEffect: [ID!]!): String
    # Deletes RegionValue from VariantRegion entity
    deleteVariantRegionRegionValue(id: ID!, regionValue: [ID!]!): String
    # Deletes a VariantSNVIndel entity
    deleteVariantSNVIndel(id: ID!): String
    # Deletes CDot from VariantSNVIndel entity
    deleteVariantSNVIndelCDot(cDot: [ID!]!, id: ID!): String
    # Deletes ClinVarVariant from VariantSNVIndel entity
    deleteVariantSNVIndelClinVarVariant(clinVarVariant: [ID!]!, id: ID!): String
    # Deletes Description from VariantSNVIndel entity
    deleteVariantSNVIndelDescription(description: [ID!]!, id: ID!): String
    # Deletes Exon from VariantSNVIndel entity
    deleteVariantSNVIndelExon(exon: [ID!]!, id: ID!): String
    # Deletes GDot from VariantSNVIndel entity
    deleteVariantSNVIndelGDot(gDot: [ID!]!, id: ID!): String
    # Deletes Gene from VariantSNVIndel entity
    deleteVariantSNVIndelGene(gene: [ID!]!, id: ID!): String
    # Deletes GoVariant from VariantSNVIndel entity
    deleteVariantSNVIndelGoVariant(goVariant: [ID!]!, id: ID!): String
    # Deletes HotSpotVariant from VariantSNVIndel entity
    deleteVariantSNVIndelHotSpotVariant(hotSpotVariant: [ID!]!, id: ID!): String
    # Deletes JaxVariant from VariantSNVIndel entity
    deleteVariantSNVIndelJaxVariant(id: ID!, jaxVariant: [ID!]!): String
    # Deletes Name from VariantSNVIndel entity
    deleteVariantSNVIndelName(id: ID!, name: [ID!]!): String
    # Deletes NonCanonicalTranscript from VariantSNVIndel entity
    deleteVariantSNVIndelNonCanonicalTranscript(
        id: ID!
        nonCanonicalTranscript: [ID!]!
    ): String
    # Deletes PDot from VariantSNVIndel entity
    deleteVariantSNVIndelPDot(id: ID!, pDot: [ID!]!): String
    # Deletes ProteinEffect from VariantSNVIndel entity
    deleteVariantSNVIndelProteinEffect(id: ID!, proteinEffect: [ID!]!): String
    # Deletes a XRef entity
    deleteXRef(id: ID!): String
    # Merge a AdverseEvent entity
    mergeAdverseEvent(grade: Int, id: ID!, name: String!): String
    # Merge a Author entity
    mergeAuthor(firstInitial: String!, id: ID!, surname: String!): String
    # Merge a ClinVarVariant entity
    mergeClinVarVariant(
        cDot: String!
        gene: String!
        id: ID!
        pDot: String!
        variantId: String!
    ): String
    # Merge a ClinicalTrial entity
    mergeClinicalTrial(
        acronym: String
        briefTitle: String
        id: ID!
        name: String!
        officialTitle: String!
        resource: String!
        resourceId: String!
    ): String
    # Merge a DNAMarker entity
    mergeDNAMarker(id: ID!, markerType: DNAMarkerType!): String
    # Merge a DODisease entity
    mergeDODisease(doId: String!, id: ID!): String
    # Merge a DrugCategory entity
    mergeDrugCategory(id: ID!): String
    # Merge a EditableAssayComparator entity
    mergeEditableAssayComparator(
        comparator: AssayComparator!
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Merge a EditableBoolean entity
    mergeEditableBoolean(
        booleanValue: ExtendedBoolean!
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Merge a EditableCopyChange entity
    mergeEditableCopyChange(
        cnvType: CNVType!
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Merge a EditableDODiseaseList entity
    mergeEditableDODiseaseList(editDate: String!, field: String!, id: ID!): String
    # Merge a EditableFloat entity
    mergeEditableFloat(
        editDate: String!
        field: String!
        floatValue: Float!
        id: ID!
    ): String
    # Merge a EditableGODiseaseList entity
    mergeEditableGODiseaseList(editDate: String!, field: String!, id: ID!): String
    # Merge a EditableImmuneCycleRole entity
    mergeEditableImmuneCycleRole(
        editDate: String!
        field: String!
        id: ID!
        immuneCycleRole: ImmuneCycleRole!
    ): String
    # Merge a EditableImmuneFunction entity
    mergeEditableImmuneFunction(
        editDate: String!
        field: String!
        id: ID!
        immuneFunction: ImmuneFunction!
    ): String
    # Merge a EditableImmunePhenotype entity
    mergeEditableImmunePhenotype(
        editDate: String!
        field: String!
        id: ID!
        immunePhenotype: ImmunePhenotype!
    ): String
    # Merge a EditableInt entity
    mergeEditableInt(
        editDate: String!
        field: String!
        id: ID!
        intValue: Int!
    ): String
    # Merge a EditableJAXDiseaseList entity
    mergeEditableJAXDiseaseList(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Merge a EditableMarkerComponentList entity
    mergeEditableMarkerComponentList(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Merge a EditableObject entity
    mergeEditableObject(editDate: String!, field: String!, id: ID!): String
    # Merge a EditableOmniConjunction entity
    mergeEditableOmniConjunction(
        conjunction: OmniConjunction!
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Merge a EditableOmniGeneList entity
    mergeEditableOmniGeneList(editDate: String!, field: String!, id: ID!): String
    # Merge a EditableOmniGeneReference entity
    mergeEditableOmniGeneReference(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Merge a EditableOmniMapList entity
    mergeEditableOmniMapList(editDate: String!, field: String!, id: ID!): String
    # Merge a EditableOncoTreeDiseaseList entity
    mergeEditableOncoTreeDiseaseList(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Merge a EditableProteinEffect entity
    mergeEditableProteinEffect(
        editDate: String!
        field: String!
        id: ID!
        proteinEffect: VariantProteinEffect!
    ): String
    # Merge a EditableRNASeqResultType entity
    mergeEditableRNASeqResultType(
        editDate: String!
        field: String!
        id: ID!
        resultType: RNASeqResultType!
    ): String
    # Merge a EditableStatement entity
    mergeEditableStatement(
        editDate: String!
        field: String!
        id: ID!
        statement: String!
    ): String
    # Merge a EditableStringList entity
    mergeEditableStringList(
        editDate: String!
        field: String!
        id: ID!
        stringList: [String]!
    ): String
    # Merge a EditableTMBInterpretation entity
    mergeEditableTMBInterpretation(
        editDate: String!
        field: String!
        id: ID!
        tmbInterpretation: TMBInterpretationType!
    ): String
    # Merge a EditableXRefList entity
    mergeEditableXRefList(editDate: String!, field: String!, id: ID!): String
    # Merge a Evidence entity
    mergeEvidence(
        ampCapAscoTier: String!
        approvalStatus: String!
        evidenceType: EvidenceType!
        id: ID!
        notes: String!
        responseType: ResponseType!
    ): String
    # Merge a EvidenceAssociation entity
    mergeEvidenceAssociation(id: ID!, name: String!): String
    # Merge a GODisease entity
    mergeGODisease(goId: String!, id: ID!): String
    # Merge a GOVariant entity
    mergeGOVariant(
        gene: String!
        goId: String!
        id: ID!
        mutationType: String!
    ): String
    # Merge a GenomicVariant entity
    mergeGenomicVariant(id: ID!): String
    # Merge a GenomicVariantMarker entity
    mergeGenomicVariantMarker(id: ID!): String
    # Merge a HotSpotVariant entity
    mergeHotSpotVariant(
        begin: String!
        end: String!
        gene: String!
        id: ID!
        name: String!
        position: Int!
        referenceAminoAcid: String!
        variantAminoAcid: String!
    ): String
    # Merge a IHCAssay entity
    mergeIHCAssay(id: ID!): String
    # Merge a InternetReference entity
    mergeInternetReference(
        accessedDate: String!
        id: ID!
        shortReference: String!
        webAddress: String!
    ): String
    # Merge a JaxDisease entity
    mergeJaxDisease(
        id: ID!
        jaxId: String!
        source: String!
        termId: String!
    ): String
    # Merge a JaxDrug entity
    mergeJaxDrug(id: ID!, jaxId: String!): String
    # Merge a JaxDrugClass entity
    mergeJaxDrugClass(id: ID!, jaxId: String!): String
    # Merge a JaxGene entity
    mergeJaxGene(
        chromosome: String!
        entrezId: String!
        id: ID!
        jaxId: String!
        name: String!
    ): String
    # Merge a JaxVariant entity
    mergeJaxVariant(
        cDot: String!
        gDot: String!
        id: ID!
        jaxId: String!
        name: String!
        pDot: String!
        variantType: String!
    ): String
    # Merge a Journal entity
    mergeJournal(id: ID!, name: String!): String
    # Merge a LiteratureReference entity
    mergeLiteratureReference(
        DOI: String
        PMID: String
        abstract: String
        firstPage: String!
        id: ID!
        lastPage: String!
        publicationYear: String!
        shortReference: String!
        title: String!
        volume: String!
    ): String
    # Merge a MCode entity
    mergeMCode(id: ID!, mcodeId: String!): String
    # Merge a MSIMarker entity
    mergeMSIMarker(id: ID!): String
    # Merge a MarkerComponent entity
    mergeMarkerComponent(id: ID!): String
    # Merge a MarkerProfile entity
    mergeMarkerProfile(id: ID!): String
    # Merge a MeetingAbstractReference entity
    mergeMeetingAbstractReference(
        abstract: String
        id: ID!
        meetingDate: String!
        meetingName: String!
        shortReference: String!
        title: String!
    ): String
    # Merge a MyGeneInfoGene entity
    mergeMyGeneInfoGene(
        chromosome: String!
        end: Int
        entrezId: String!
        id: ID!
        name: String!
        start: Int
        strand: Strand!
    ): String
    # Merge a NCIDrug entity
    mergeNCIDrug(id: ID!, isAntineoplastic: Boolean!, isImmuno: Boolean!): String
    # Merge a OmniDisease entity
    mergeOmniDisease(
        id: ID!
        omniDiseaseId: String!
        omniDiseaseType: OmniDiseaseType!
    ): String
    # Merge a OmniDrug entity
    mergeOmniDrug(id: ID!): String
    # Merge a OmniGene entity
    mergeOmniGene(id: ID!, name: String!, names: String!): String
    # Merge a OmniMap entity
    mergeOmniMap(id: ID!): String
    # Merge a OncoTreeDisease entity
    mergeOncoTreeDisease(code: String!, id: ID!): String
    # Merge a OncoTreeOccurrence entity
    mergeOncoTreeOccurrence(
        id: ID!
        oncoTreeCode: String!
        perThousandOccurrence: Int!
    ): String
    # Merge a OntologicalDisease entity
    mergeOntologicalDisease(id: ID!): String
    # Merge a Outcome entity
    mergeOutcome(
        ConfidenceIntervalHi: Float
        ConfidenceIntervalLo: Float
        ConfidenceIntervalType: String
        clinicalCharacteristics: [String]
        dose: Int
        doseUnit: String
        endpoint: EvidenceEndpoint
        groupSize: Int
        id: ID!
        notes: String
        observation: String
        observationMethod: String
        outcome: Float!
        outcomeRangeMax: Float
        outcomeRangeMin: Float
        outcomeUnit: String!
        treatmentGroup: String
    ): String
    # Merge a ProteinExpressionMarker entity
    mergeProteinExpressionMarker(id: ID!): String
    # Merge a ProteinLevelAssay entity
    mergeProteinLevelAssay(id: ID!): String
    # Merge a RNASeqAssay entity
    mergeRNASeqAssay(id: ID!): String
    # Merge a RNASeqSignatureMarker entity
    mergeRNASeqSignatureMarker(id: ID!): String
    # Merge a Reference entity
    mergeReference(id: ID!, shortReference: String!): String
    # Merge a TCode entity
    mergeTCode(id: ID!, tcodeId: String!): String
    # Merge a TMBMarker entity
    mergeTMBMarker(id: ID!): String
    # Merge a Target entity
    mergeTarget(id: ID!, name: String!): String
    # Merge a TherapeuticIntervention entity
    mergeTherapeuticIntervention(id: ID!): String
    # Merge a Therapy entity
    mergeTherapy(conjunction: OmniConjunction!, id: ID!): String
    # Merge a TherapyComponent entity
    mergeTherapyComponent(id: ID!): String
    # Merge a UniprotEntry entity
    mergeUniprotEntry(
        accessionNumber: String!
        id: ID!
        name: String!
        uniprotId: String!
    ): String
    # Merge a User entity
    mergeUser(
        id: ID!
        isAdmin: Boolean!
        isEditor: Boolean!
        name: String!
        password: String!
    ): String
    # Merge a VariantCNV entity
    mergeVariantCNV(id: ID!): String
    # Merge a VariantFusion entity
    mergeVariantFusion(id: ID!): String
    # Merge a VariantRegion entity
    mergeVariantRegion(
        id: ID!
        indelType: IndelType!
        regionType: RegionType!
        variantType: VariantType!
    ): String
    # Merge a VariantSNVIndel entity
    mergeVariantSNVIndel(
        id: ID!
        indelType: IndelType!
        variantType: VariantType!
    ): String
    # Merge a XRef entity
    mergeXRef(id: ID!, source: String!, sourceId: String!): String
    # Updates a AdverseEvent entity
    updateAdverseEvent(grade: Int, id: ID!, name: String!): String
    # Updates a Author entity
    updateAuthor(firstInitial: String!, id: ID!, surname: String!): String
    # Updates a ClinVarVariant entity
    updateClinVarVariant(
        cDot: String!
        gene: String!
        id: ID!
        pDot: String!
        variantId: String!
    ): String
    # Updates a ClinicalTrial entity
    updateClinicalTrial(
        acronym: String
        briefTitle: String
        id: ID!
        name: String!
        officialTitle: String!
        resource: String!
        resourceId: String!
    ): String
    # Updates a DNAMarker entity
    updateDNAMarker(id: ID!, markerType: DNAMarkerType!): String
    # Updates a DODisease entity
    updateDODisease(doId: String!, id: ID!): String
    # Updates a DrugCategory entity
    updateDrugCategory(id: ID!): String
    # Updates a EditableAssayComparator entity
    updateEditableAssayComparator(
        comparator: AssayComparator!
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Updates a EditableBoolean entity
    updateEditableBoolean(
        booleanValue: ExtendedBoolean!
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Updates a EditableCopyChange entity
    updateEditableCopyChange(
        cnvType: CNVType!
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Updates a EditableDODiseaseList entity
    updateEditableDODiseaseList(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Updates a EditableFloat entity
    updateEditableFloat(
        editDate: String!
        field: String!
        floatValue: Float!
        id: ID!
    ): String
    # Updates a EditableGODiseaseList entity
    updateEditableGODiseaseList(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Updates a EditableImmuneCycleRole entity
    updateEditableImmuneCycleRole(
        editDate: String!
        field: String!
        id: ID!
        immuneCycleRole: ImmuneCycleRole!
    ): String
    # Updates a EditableImmuneFunction entity
    updateEditableImmuneFunction(
        editDate: String!
        field: String!
        id: ID!
        immuneFunction: ImmuneFunction!
    ): String
    # Updates a EditableImmunePhenotype entity
    updateEditableImmunePhenotype(
        editDate: String!
        field: String!
        id: ID!
        immunePhenotype: ImmunePhenotype!
    ): String
    # Updates a EditableInt entity
    updateEditableInt(
        editDate: String!
        field: String!
        id: ID!
        intValue: Int!
    ): String
    # Updates a EditableJAXDiseaseList entity
    updateEditableJAXDiseaseList(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Updates a EditableMarkerComponentList entity
    updateEditableMarkerComponentList(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Updates a EditableObject entity
    updateEditableObject(editDate: String!, field: String!, id: ID!): String
    # Updates a EditableOmniConjunction entity
    updateEditableOmniConjunction(
        conjunction: OmniConjunction!
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Updates a EditableOmniGeneList entity
    updateEditableOmniGeneList(editDate: String!, field: String!, id: ID!): String
    # Updates a EditableOmniGeneReference entity
    updateEditableOmniGeneReference(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Updates a EditableOmniMapList entity
    updateEditableOmniMapList(editDate: String!, field: String!, id: ID!): String
    # Updates a EditableOncoTreeDiseaseList entity
    updateEditableOncoTreeDiseaseList(
        editDate: String!
        field: String!
        id: ID!
    ): String
    # Updates a EditableProteinEffect entity
    updateEditableProteinEffect(
        editDate: String!
        field: String!
        id: ID!
        proteinEffect: VariantProteinEffect!
    ): String
    # Updates a EditableRNASeqResultType entity
    updateEditableRNASeqResultType(
        editDate: String!
        field: String!
        id: ID!
        resultType: RNASeqResultType!
    ): String
    # Updates a EditableStatement entity
    updateEditableStatement(
        editDate: String!
        field: String!
        id: ID!
        statement: String!
    ): String
    # Updates a EditableStringList entity
    updateEditableStringList(
        editDate: String!
        field: String!
        id: ID!
        stringList: [String]!
    ): String
    # Updates a EditableTMBInterpretation entity
    updateEditableTMBInterpretation(
        editDate: String!
        field: String!
        id: ID!
        tmbInterpretation: TMBInterpretationType!
    ): String
    # Updates a EditableXRefList entity
    updateEditableXRefList(editDate: String!, field: String!, id: ID!): String
    # Updates a Evidence entity
    updateEvidence(
        ampCapAscoTier: String!
        approvalStatus: String!
        evidenceType: EvidenceType!
        id: ID!
        notes: String!
        responseType: ResponseType!
    ): String
    # Updates a EvidenceAssociation entity
    updateEvidenceAssociation(id: ID!, name: String!): String
    # Updates a GODisease entity
    updateGODisease(goId: String!, id: ID!): String
    # Updates a GOVariant entity
    updateGOVariant(
        gene: String!
        goId: String!
        id: ID!
        mutationType: String!
    ): String
    # Updates a GenomicVariant entity
    updateGenomicVariant(id: ID!): String
    # Updates a GenomicVariantMarker entity
    updateGenomicVariantMarker(id: ID!): String
    # Updates a HotSpotVariant entity
    updateHotSpotVariant(
        begin: String!
        end: String!
        gene: String!
        id: ID!
        name: String!
        position: Int!
        referenceAminoAcid: String!
        variantAminoAcid: String!
    ): String
    # Updates a IHCAssay entity
    updateIHCAssay(id: ID!): String
    # Updates a InternetReference entity
    updateInternetReference(
        accessedDate: String!
        id: ID!
        shortReference: String!
        webAddress: String!
    ): String
    # Updates a JaxDisease entity
    updateJaxDisease(
        id: ID!
        jaxId: String!
        source: String!
        termId: String!
    ): String
    # Updates a JaxDrug entity
    updateJaxDrug(id: ID!, jaxId: String!): String
    # Updates a JaxDrugClass entity
    updateJaxDrugClass(id: ID!, jaxId: String!): String
    # Updates a JaxGene entity
    updateJaxGene(
        chromosome: String!
        entrezId: String!
        id: ID!
        jaxId: String!
        name: String!
    ): String
    # Updates a JaxVariant entity
    updateJaxVariant(
        cDot: String!
        gDot: String!
        id: ID!
        jaxId: String!
        name: String!
        pDot: String!
        variantType: String!
    ): String
    # Updates a Journal entity
    updateJournal(id: ID!, name: String!): String
    # Updates a LiteratureReference entity
    updateLiteratureReference(
        DOI: String
        PMID: String
        abstract: String
        firstPage: String!
        id: ID!
        lastPage: String!
        publicationYear: String!
        shortReference: String!
        title: String!
        volume: String!
    ): String
    # Updates a MCode entity
    updateMCode(id: ID!, mcodeId: String!): String
    # Updates a MSIMarker entity
    updateMSIMarker(id: ID!): String
    # Updates a MarkerComponent entity
    updateMarkerComponent(id: ID!): String
    # Updates a MarkerProfile entity
    updateMarkerProfile(id: ID!): String
    # Updates a MeetingAbstractReference entity
    updateMeetingAbstractReference(
        abstract: String
        id: ID!
        meetingDate: String!
        meetingName: String!
        shortReference: String!
        title: String!
    ): String
    # Updates a MyGeneInfoGene entity
    updateMyGeneInfoGene(
        chromosome: String!
        end: Int
        entrezId: String!
        id: ID!
        name: String!
        start: Int
        strand: Strand!
    ): String
    # Updates a NCIDrug entity
    updateNCIDrug(id: ID!, isAntineoplastic: Boolean!, isImmuno: Boolean!): String
    # Updates a OmniDisease entity
    updateOmniDisease(
        id: ID!
        omniDiseaseId: String!
        omniDiseaseType: OmniDiseaseType!
    ): String
    # Updates a OmniDrug entity
    updateOmniDrug(id: ID!): String
    # Updates a OmniGene entity
    updateOmniGene(id: ID!, name: String!, names: String!): String
    # Updates a OmniMap entity
    updateOmniMap(id: ID!): String
    # Updates a OncoTreeDisease entity
    updateOncoTreeDisease(code: String!, id: ID!): String
    # Updates a OncoTreeOccurrence entity
    updateOncoTreeOccurrence(
        id: ID!
        oncoTreeCode: String!
        perThousandOccurrence: Int!
    ): String
    # Updates a OntologicalDisease entity
    updateOntologicalDisease(id: ID!): String
    # Updates a Outcome entity
    updateOutcome(
        ConfidenceIntervalHi: Float
        ConfidenceIntervalLo: Float
        ConfidenceIntervalType: String
        clinicalCharacteristics: [String]
        dose: Int
        doseUnit: String
        endpoint: EvidenceEndpoint
        groupSize: Int
        id: ID!
        notes: String
        observation: String
        observationMethod: String
        outcome: Float!
        outcomeRangeMax: Float
        outcomeRangeMin: Float
        outcomeUnit: String!
        treatmentGroup: String
    ): String
    # Updates a ProteinExpressionMarker entity
    updateProteinExpressionMarker(id: ID!): String
    # Updates a ProteinLevelAssay entity
    updateProteinLevelAssay(id: ID!): String
    # Updates a RNASeqAssay entity
    updateRNASeqAssay(id: ID!): String
    # Updates a RNASeqSignatureMarker entity
    updateRNASeqSignatureMarker(id: ID!): String
    # Updates a Reference entity
    updateReference(id: ID!, shortReference: String!): String
    # Updates a TCode entity
    updateTCode(id: ID!, tcodeId: String!): String
    # Updates a TMBMarker entity
    updateTMBMarker(id: ID!): String
    # Updates a Target entity
    updateTarget(id: ID!, name: String!): String
    # Updates a TherapeuticIntervention entity
    updateTherapeuticIntervention(id: ID!): String
    # Updates a Therapy entity
    updateTherapy(conjunction: OmniConjunction!, id: ID!): String
    # Updates a TherapyComponent entity
    updateTherapyComponent(id: ID!): String
    # Updates a UniprotEntry entity
    updateUniprotEntry(
        accessionNumber: String!
        id: ID!
        name: String!
        uniprotId: String!
    ): String
    # Updates a User entity
    updateUser(
        id: ID!
        isAdmin: Boolean!
        isEditor: Boolean!
        name: String!
        password: String!
    ): String
    # Updates a VariantCNV entity
    updateVariantCNV(id: ID!): String
    # Updates a VariantFusion entity
    updateVariantFusion(id: ID!): String
    # Updates a VariantRegion entity
    updateVariantRegion(
        id: ID!
        indelType: IndelType!
        regionType: RegionType!
        variantType: VariantType!
    ): String
    # Updates a VariantSNVIndel entity
    updateVariantSNVIndel(
        id: ID!
        indelType: IndelType!
        variantType: VariantType!
    ): String
    # Updates a XRef entity
    updateXRef(id: ID!, source: String!, sourceId: String!): String
}

# MyGeneInfoGene-Node
type MyGeneInfoGene {
    # internal node id
    _id: Long
    # chromosome of  MyGeneInfoGene
    chromosome: String!
    # MyGeneInfoGene description EditableStatement
    description(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # end of  MyGeneInfoGene
    end: Int
    # entrezId of  MyGeneInfoGene
    entrezId: String!
    # id of  MyGeneInfoGene
    id: ID!
    # name of  MyGeneInfoGene
    name: String!
    # start of  MyGeneInfoGene
    start: Int
    # strand of  MyGeneInfoGene
    strand: Strand!
    # MyGeneInfoGene uniprotEntry UniprotEntry
    uniprotEntry(
        # accessionNumber of UniprotEntry
        accessionNumber: String
        # accessionNumbers is list variant of accessionNumber of UniprotEntry
        accessionNumbers: [String]
        filter: _UniprotEntryFilter
        # id of UniprotEntry
        id: ID
        # ids is list variant of id of UniprotEntry
        ids: [ID]
        # name of UniprotEntry
        name: String
        # names is list variant of name of UniprotEntry
        names: [String]
        orderBy: [_UniprotEntryOrdering]
        # uniprotId of UniprotEntry
        uniprotId: String
        # uniprotIds is list variant of uniprotId of UniprotEntry
        uniprotIds: [String]
    ): UniprotEntry!
}

# NCIDrug-Node
type NCIDrug {
    # internal node id
    _id: Long
    # NCIDrug annotationDate EditableStatement
    annotationDate(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # NCIDrug conceptCode EditableStatement
    conceptCode(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # NCIDrug definition EditableStatement
    definition(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # NCIDrug drugCategory EditableStatement
    drugCategory(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # id of  NCIDrug
    id: ID!
    # isAntineoplastic of  NCIDrug
    isAntineoplastic: Boolean!
    # isImmuno of  NCIDrug
    isImmuno: Boolean!
    # NCIDrug modulator EditableStatement
    modulator(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # NCIDrug name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # NCIDrug synonyms EditableStringList
    synonyms(
        # editDate of EditableStringList
        editDate: String
        # editDates is list variant of editDate of EditableStringList
        editDates: [String]
        # field of EditableStringList
        field: String
        # fields is list variant of field of EditableStringList
        fields: [String]
        filter: _EditableStringListFilter
        # id of EditableStringList
        id: ID
        # ids is list variant of id of EditableStringList
        ids: [ID]
        orderBy: [_EditableStringListOrdering]
        # stringList of EditableStringList
        stringList: [String]
        # stringLists is list variant of stringList of EditableStringList
        stringLists: [[String]]
    ): EditableStringList!
}

# Enum for OmniConjunction
enum OmniConjunction {
    # Value for All
    All
    # Value for Any
    Any
    # Value for None
    None
}

# OmniDisease-Node
type OmniDisease {
    # internal node id
    _id: Long
    # id of  OmniDisease
    id: ID!
    # OmniDisease name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # omniDiseaseId of  OmniDisease
    omniDiseaseId: String!
    # omniDiseaseType of  OmniDisease
    omniDiseaseType: OmniDiseaseType!
}

# Enum for OmniDiseaseType
enum OmniDiseaseType {
    # Value for Hematologic
    Hematologic
    # Value for Other
    Other
    # Value for SolidTumor
    SolidTumor
}

# OmniDrug-Node
type OmniDrug implements TherapyComponent {
    # internal node id
    _id: Long
    # OmniDrug componentOf Therapy
    componentOf(
        _id: Long
        _ids: [Long]
        # conjunction of Therapy
        conjunction: OmniConjunction
        # conjunctions is list variant of conjunction of Therapy
        conjunctions: [OmniConjunction]
        filter: _TherapyFilter
        first: Int
        # id of Therapy
        id: ID
        # ids is list variant of id of Therapy
        ids: [ID]
        offset: Int
        orderBy: [_TherapyOrdering]
    ): [Therapy]!
    # OmniDrug definition EditableStatement
    definition(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # OmniDrug drugCategories DrugCategory
    drugCategories(
        _id: Long
        _ids: [Long]
        filter: _DrugCategoryFilter
        first: Int
        # id of DrugCategory
        id: ID
        # ids is list variant of id of DrugCategory
        ids: [ID]
        offset: Int
        orderBy: [_DrugCategoryOrdering]
    ): [DrugCategory]!
    # id of  OmniDrug
    id: ID!
    # OmniDrug jaxDrug JaxDrug
    jaxDrug(
        filter: _JaxDrugFilter
        # id of JaxDrug
        id: ID
        # ids is list variant of id of JaxDrug
        ids: [ID]
        # jaxId of JaxDrug
        jaxId: String
        # jaxIds is list variant of jaxId of JaxDrug
        jaxIds: [String]
        orderBy: [_JaxDrugOrdering]
    ): JaxDrug
    # OmniDrug name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # OmniDrug nciDrug NCIDrug
    nciDrug(
        filter: _NCIDrugFilter
        # id of NCIDrug
        id: ID
        # ids is list variant of id of NCIDrug
        ids: [ID]
        # isAntineoplastic of NCIDrug
        isAntineoplastic: Boolean
        # isAntineoplastics is list variant of isAntineoplastic of NCIDrug
        isAntineoplastics: [Boolean]
        # isImmuno of NCIDrug
        isImmuno: Boolean
        # isImmunos is list variant of isImmuno of NCIDrug
        isImmunos: [Boolean]
        orderBy: [_NCIDrugOrdering]
    ): NCIDrug
    # OmniDrug synonyms EditableStringList
    synonyms(
        # editDate of EditableStringList
        editDate: String
        # editDates is list variant of editDate of EditableStringList
        editDates: [String]
        # field of EditableStringList
        field: String
        # fields is list variant of field of EditableStringList
        fields: [String]
        filter: _EditableStringListFilter
        # id of EditableStringList
        id: ID
        # ids is list variant of id of EditableStringList
        ids: [ID]
        orderBy: [_EditableStringListOrdering]
        # stringList of EditableStringList
        stringList: [String]
        # stringLists is list variant of stringList of EditableStringList
        stringLists: [[String]]
    ): EditableStringList!
    # OmniDrug target Target
    target(
        _id: Long
        _ids: [Long]
        filter: _TargetFilter
        first: Int
        # id of Target
        id: ID
        # ids is list variant of id of Target
        ids: [ID]
        # name of Target
        name: String
        # names is list variant of name of Target
        names: [String]
        offset: Int
        orderBy: [_TargetOrdering]
    ): [Target]!
    # OmniDrug tradeName EditableStatement
    tradeName(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

# OmniGene-Node
type OmniGene implements Target {
    # internal node id
    _id: Long
    # OmniGene geneDescription EditableStatement
    geneDescription(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # id of  OmniGene
    id: ID!
    # OmniGene jaxGene JaxGene
    jaxGene(
        # chromosome of JaxGene
        chromosome: String
        # chromosomes is list variant of chromosome of JaxGene
        chromosomes: [String]
        # entrezId of JaxGene
        entrezId: String
        # entrezIds is list variant of entrezId of JaxGene
        entrezIds: [String]
        filter: _JaxGeneFilter
        # id of JaxGene
        id: ID
        # ids is list variant of id of JaxGene
        ids: [ID]
        # jaxId of JaxGene
        jaxId: String
        # jaxIds is list variant of jaxId of JaxGene
        jaxIds: [String]
        # name of JaxGene
        name: String
        # names is list variant of name of JaxGene
        names: [String]
        orderBy: [_JaxGeneOrdering]
    ): JaxGene
    # OmniGene myGeneInfoGene MyGeneInfoGene
    myGeneInfoGene(
        # chromosome of MyGeneInfoGene
        chromosome: String
        # chromosomes is list variant of chromosome of MyGeneInfoGene
        chromosomes: [String]
        # end of MyGeneInfoGene
        end: Int
        # ends is list variant of end of MyGeneInfoGene
        ends: [Int]
        # entrezId of MyGeneInfoGene
        entrezId: String
        # entrezIds is list variant of entrezId of MyGeneInfoGene
        entrezIds: [String]
        filter: _MyGeneInfoGeneFilter
        # id of MyGeneInfoGene
        id: ID
        # ids is list variant of id of MyGeneInfoGene
        ids: [ID]
        # name of MyGeneInfoGene
        name: String
        # names is list variant of name of MyGeneInfoGene
        names: [String]
        orderBy: [_MyGeneInfoGeneOrdering]
        # start of MyGeneInfoGene
        start: Int
        # starts is list variant of start of MyGeneInfoGene
        starts: [Int]
        # strand of MyGeneInfoGene
        strand: Strand
        # strands is list variant of strand of MyGeneInfoGene
        strands: [Strand]
    ): MyGeneInfoGene!
    # name of  OmniGene
    name: String!
    # names of  OmniGene
    names: String!
    # OmniGene oncogenicCategory EditableStatement
    oncogenicCategory(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # names is pipe delimited list of name, and current panelName, and synonyms,
    # updated after each change to panel or syn list, for query only
    panelName(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # OmniGene synonyms EditableStringList
    synonyms(
        # editDate of EditableStringList
        editDate: String
        # editDates is list variant of editDate of EditableStringList
        editDates: [String]
        # field of EditableStringList
        field: String
        # fields is list variant of field of EditableStringList
        fields: [String]
        filter: _EditableStringListFilter
        # id of EditableStringList
        id: ID
        # ids is list variant of id of EditableStringList
        ids: [ID]
        orderBy: [_EditableStringListOrdering]
        # stringList of EditableStringList
        stringList: [String]
        # stringLists is list variant of stringList of EditableStringList
        stringLists: [[String]]
    ): EditableStringList!
    # OmniGene transcript EditableStatement
    transcript(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # OmniGene uniprotEntry UniprotEntry
    uniprotEntry(
        # accessionNumber of UniprotEntry
        accessionNumber: String
        # accessionNumbers is list variant of accessionNumber of UniprotEntry
        accessionNumbers: [String]
        filter: _UniprotEntryFilter
        # id of UniprotEntry
        id: ID
        # ids is list variant of id of UniprotEntry
        ids: [ID]
        # name of UniprotEntry
        name: String
        # names is list variant of name of UniprotEntry
        names: [String]
        orderBy: [_UniprotEntryOrdering]
        # uniprotId of UniprotEntry
        uniprotId: String
        # uniprotIds is list variant of uniprotId of UniprotEntry
        uniprotIds: [String]
    ): UniprotEntry
    # OmniGene variantMarkers GenomicVariantMarker
    variantMarkers(
        _id: Long
        _ids: [Long]
        filter: _GenomicVariantMarkerFilter
        first: Int
        # id of GenomicVariantMarker
        id: ID
        # ids is list variant of id of GenomicVariantMarker
        ids: [ID]
        offset: Int
        orderBy: [_GenomicVariantMarkerOrdering]
    ): [GenomicVariantMarker]!
    # OmniGene variants GenomicVariant
    variants(
        _id: Long
        _ids: [Long]
        filter: _GenomicVariantFilter
        first: Int
        # id of GenomicVariant
        id: ID
        # ids is list variant of id of GenomicVariant
        ids: [ID]
        offset: Int
        orderBy: [_GenomicVariantOrdering]
    ): [GenomicVariant]!
}

# OmniMap-Node
type OmniMap {
    # internal node id
    _id: Long
    # id of  OmniMap
    id: ID!
    # OmniMap mCodes MCode
    mCodes(
        _id: Long
        _ids: [Long]
        filter: _MCodeFilter
        first: Int
        # id of MCode
        id: ID
        # ids is list variant of id of MCode
        ids: [ID]
        # mcodeId of MCode
        mcodeId: String
        # mcodeIds is list variant of mcodeId of MCode
        mcodeIds: [String]
        offset: Int
        orderBy: [_MCodeOrdering]
    ): [MCode]!
    # OmniMap omniDisease OmniDisease
    omniDisease(
        filter: _OmniDiseaseFilter
        # id of OmniDisease
        id: ID
        # ids is list variant of id of OmniDisease
        ids: [ID]
        # omniDiseaseId of OmniDisease
        omniDiseaseId: String
        # omniDiseaseIds is list variant of omniDiseaseId of OmniDisease
        omniDiseaseIds: [String]
        # omniDiseaseType of OmniDisease
        omniDiseaseType: OmniDiseaseType
        # omniDiseaseTypes is list variant of omniDiseaseType of OmniDisease
        omniDiseaseTypes: [OmniDiseaseType]
        orderBy: [_OmniDiseaseOrdering]
    ): OmniDisease!
}

# OncoTreeDisease-Node
type OncoTreeDisease {
    # internal node id
    _id: Long
    # OncoTreeDisease children OncoTreeDisease
    children(
        _id: Long
        _ids: [Long]
        # code of OncoTreeDisease
        code: String
        # codes is list variant of code of OncoTreeDisease
        codes: [String]
        filter: _OncoTreeDiseaseFilter
        first: Int
        # id of OncoTreeDisease
        id: ID
        # ids is list variant of id of OncoTreeDisease
        ids: [ID]
        offset: Int
        orderBy: [_OncoTreeDiseaseOrdering]
    ): [OncoTreeDisease]!
    # code of  OncoTreeDisease
    code: String!
    # id of  OncoTreeDisease
    id: ID!
    # OncoTreeDisease mainType EditableStatement
    mainType(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # OncoTreeDisease name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # OncoTreeDisease occurrences OncoTreeOccurrence
    occurrences(
        _id: Long
        _ids: [Long]
        filter: _OncoTreeOccurrenceFilter
        first: Int
        # id of OncoTreeOccurrence
        id: ID
        # ids is list variant of id of OncoTreeOccurrence
        ids: [ID]
        offset: Int
        # oncoTreeCode of OncoTreeOccurrence
        oncoTreeCode: String
        # oncoTreeCodes is list variant of oncoTreeCode of OncoTreeOccurrence
        oncoTreeCodes: [String]
        orderBy: [_OncoTreeOccurrenceOrdering]
        # perThousandOccurrence of OncoTreeOccurrence
        perThousandOccurrence: Int
        # perThousandOccurrences is list variant of perThousandOccurrence of OncoTreeOccurrence
        perThousandOccurrences: [Int]
    ): [OncoTreeOccurrence]!
    # OncoTreeDisease parent OncoTreeDisease
    parent(
        _id: Long
        _ids: [Long]
        # code of OncoTreeDisease
        code: String
        # codes is list variant of code of OncoTreeDisease
        codes: [String]
        filter: _OncoTreeDiseaseFilter
        first: Int
        # id of OncoTreeDisease
        id: ID
        # ids is list variant of id of OncoTreeDisease
        ids: [ID]
        offset: Int
        orderBy: [_OncoTreeDiseaseOrdering]
    ): [OncoTreeDisease]
    # OncoTreeDisease tissue EditableStatement
    tissue(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # OncoTreeDisease xrefs EditableXRefList
    xrefs(
        # editDate of EditableXRefList
        editDate: String
        # editDates is list variant of editDate of EditableXRefList
        editDates: [String]
        # field of EditableXRefList
        field: String
        # fields is list variant of field of EditableXRefList
        fields: [String]
        filter: _EditableXRefListFilter
        # id of EditableXRefList
        id: ID
        # ids is list variant of id of EditableXRefList
        ids: [ID]
        orderBy: [_EditableXRefListOrdering]
    ): EditableXRefList!
}

# OncoTreeOccurrence-Node
type OncoTreeOccurrence {
    # internal node id
    _id: Long
    # OncoTreeOccurrence disease OncoTreeDisease
    disease(
        # code of OncoTreeDisease
        code: String
        # codes is list variant of code of OncoTreeDisease
        codes: [String]
        filter: _OncoTreeDiseaseFilter
        # id of OncoTreeDisease
        id: ID
        # ids is list variant of id of OncoTreeDisease
        ids: [ID]
        orderBy: [_OncoTreeDiseaseOrdering]
    ): OncoTreeDisease!
    # OncoTreeOccurrence hotSpotVariant HotSpotVariant
    hotSpotVariant(
        _id: Long
        _ids: [Long]
        # begin of HotSpotVariant
        begin: String
        # begins is list variant of begin of HotSpotVariant
        begins: [String]
        # end of HotSpotVariant
        end: String
        # ends is list variant of end of HotSpotVariant
        ends: [String]
        filter: _HotSpotVariantFilter
        first: Int
        # gene of HotSpotVariant
        gene: String
        # genes is list variant of gene of HotSpotVariant
        genes: [String]
        # id of HotSpotVariant
        id: ID
        # ids is list variant of id of HotSpotVariant
        ids: [ID]
        # name of HotSpotVariant
        name: String
        # names is list variant of name of HotSpotVariant
        names: [String]
        offset: Int
        orderBy: [_HotSpotVariantOrdering]
        # position of HotSpotVariant
        position: Int
        # positions is list variant of position of HotSpotVariant
        positions: [Int]
        # referenceAminoAcid of HotSpotVariant
        referenceAminoAcid: String
        # referenceAminoAcids is list variant of referenceAminoAcid of HotSpotVariant
        referenceAminoAcids: [String]
        # variantAminoAcid of HotSpotVariant
        variantAminoAcid: String
        # variantAminoAcids is list variant of variantAminoAcid of HotSpotVariant
        variantAminoAcids: [String]
    ): [HotSpotVariant]!
    # id of  OncoTreeOccurrence
    id: ID!
    # OncoTreeOccurrence occurrences EditableInt
    occurrences(
        # editDate of EditableInt
        editDate: String
        # editDates is list variant of editDate of EditableInt
        editDates: [String]
        # field of EditableInt
        field: String
        # fields is list variant of field of EditableInt
        fields: [String]
        filter: _EditableIntFilter
        # id of EditableInt
        id: ID
        # ids is list variant of id of EditableInt
        ids: [ID]
        # intValue of EditableInt
        intValue: Int
        # intValues is list variant of intValue of EditableInt
        intValues: [Int]
        orderBy: [_EditableIntOrdering]
    ): EditableInt!
    # oncoTreeCode of  OncoTreeOccurrence
    oncoTreeCode: String!
    # perThousandOccurrence of  OncoTreeOccurrence
    perThousandOccurrence: Int!
    # OncoTreeOccurrence percentOccurrence EditableStatement
    percentOccurrence(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # OncoTreeOccurrence totalSamples EditableInt
    totalSamples(
        # editDate of EditableInt
        editDate: String
        # editDates is list variant of editDate of EditableInt
        editDates: [String]
        # field of EditableInt
        field: String
        # fields is list variant of field of EditableInt
        fields: [String]
        filter: _EditableIntFilter
        # id of EditableInt
        id: ID
        # ids is list variant of id of EditableInt
        ids: [ID]
        # intValue of EditableInt
        intValue: Int
        # intValues is list variant of intValue of EditableInt
        intValues: [Int]
        orderBy: [_EditableIntOrdering]
    ): EditableInt!
}

# OntologicalDisease-Node
type OntologicalDisease {
    # internal node id
    _id: Long
    # OntologicalDisease children OntologicalDisease
    children(
        _id: Long
        _ids: [Long]
        filter: _OntologicalDiseaseFilter
        first: Int
        # id of OntologicalDisease
        id: ID
        # ids is list variant of id of OntologicalDisease
        ids: [ID]
        offset: Int
        orderBy: [_OntologicalDiseaseOrdering]
    ): [OntologicalDisease]!
    # OntologicalDisease description EditableStatement
    description(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # OntologicalDisease doDiseases EditableDODiseaseList
    doDiseases(
        # editDate of EditableDODiseaseList
        editDate: String
        # editDates is list variant of editDate of EditableDODiseaseList
        editDates: [String]
        # field of EditableDODiseaseList
        field: String
        # fields is list variant of field of EditableDODiseaseList
        fields: [String]
        filter: _EditableDODiseaseListFilter
        # id of EditableDODiseaseList
        id: ID
        # ids is list variant of id of EditableDODiseaseList
        ids: [ID]
        orderBy: [_EditableDODiseaseListOrdering]
    ): EditableDODiseaseList!
    # OntologicalDisease goDiseases EditableGODiseaseList
    goDiseases(
        # editDate of EditableGODiseaseList
        editDate: String
        # editDates is list variant of editDate of EditableGODiseaseList
        editDates: [String]
        # field of EditableGODiseaseList
        field: String
        # fields is list variant of field of EditableGODiseaseList
        fields: [String]
        filter: _EditableGODiseaseListFilter
        # id of EditableGODiseaseList
        id: ID
        # ids is list variant of id of EditableGODiseaseList
        ids: [ID]
        orderBy: [_EditableGODiseaseListOrdering]
    ): EditableGODiseaseList!
    # id of  OntologicalDisease
    id: ID!
    # OntologicalDisease jaxDiseases EditableJAXDiseaseList
    jaxDiseases(
        # editDate of EditableJAXDiseaseList
        editDate: String
        # editDates is list variant of editDate of EditableJAXDiseaseList
        editDates: [String]
        # field of EditableJAXDiseaseList
        field: String
        # fields is list variant of field of EditableJAXDiseaseList
        fields: [String]
        filter: _EditableJAXDiseaseListFilter
        # id of EditableJAXDiseaseList
        id: ID
        # ids is list variant of id of EditableJAXDiseaseList
        ids: [ID]
        orderBy: [_EditableJAXDiseaseListOrdering]
    ): EditableJAXDiseaseList!
    # OntologicalDisease name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # OntologicalDisease omniMaps EditableOmniMapList
    omniMaps(
        # editDate of EditableOmniMapList
        editDate: String
        # editDates is list variant of editDate of EditableOmniMapList
        editDates: [String]
        # field of EditableOmniMapList
        field: String
        # fields is list variant of field of EditableOmniMapList
        fields: [String]
        filter: _EditableOmniMapListFilter
        # id of EditableOmniMapList
        id: ID
        # ids is list variant of id of EditableOmniMapList
        ids: [ID]
        orderBy: [_EditableOmniMapListOrdering]
    ): EditableOmniMapList!
    # OntologicalDisease oncoTreeDiseases EditableOncoTreeDiseaseList
    oncoTreeDiseases(
        # editDate of EditableOncoTreeDiseaseList
        editDate: String
        # editDates is list variant of editDate of EditableOncoTreeDiseaseList
        editDates: [String]
        # field of EditableOncoTreeDiseaseList
        field: String
        # fields is list variant of field of EditableOncoTreeDiseaseList
        fields: [String]
        filter: _EditableOncoTreeDiseaseListFilter
        # id of EditableOncoTreeDiseaseList
        id: ID
        # ids is list variant of id of EditableOncoTreeDiseaseList
        ids: [ID]
        orderBy: [_EditableOncoTreeDiseaseListOrdering]
    ): EditableOncoTreeDiseaseList!
    # OntologicalDisease parents OntologicalDisease
    parents(
        _id: Long
        _ids: [Long]
        filter: _OntologicalDiseaseFilter
        first: Int
        # id of OntologicalDisease
        id: ID
        # ids is list variant of id of OntologicalDisease
        ids: [ID]
        offset: Int
        orderBy: [_OntologicalDiseaseOrdering]
    ): [OntologicalDisease]
    # OntologicalDisease synonyms EditableStringList
    synonyms(
        # editDate of EditableStringList
        editDate: String
        # editDates is list variant of editDate of EditableStringList
        editDates: [String]
        # field of EditableStringList
        field: String
        # fields is list variant of field of EditableStringList
        fields: [String]
        filter: _EditableStringListFilter
        # id of EditableStringList
        id: ID
        # ids is list variant of id of EditableStringList
        ids: [ID]
        orderBy: [_EditableStringListOrdering]
        # stringList of EditableStringList
        stringList: [String]
        # stringLists is list variant of stringList of EditableStringList
        stringLists: [[String]]
    ): EditableStringList!
    # OntologicalDisease xrefs EditableXRefList
    xrefs(
        # editDate of EditableXRefList
        editDate: String
        # editDates is list variant of editDate of EditableXRefList
        editDates: [String]
        # field of EditableXRefList
        field: String
        # fields is list variant of field of EditableXRefList
        fields: [String]
        filter: _EditableXRefListFilter
        # id of EditableXRefList
        id: ID
        # ids is list variant of id of EditableXRefList
        ids: [ID]
        orderBy: [_EditableXRefListOrdering]
    ): EditableXRefList!
}

# Outcome-Node
type Outcome {
    # ConfidenceIntervalHi of  Outcome
    ConfidenceIntervalHi: Float
    # ConfidenceIntervalLo of  Outcome
    ConfidenceIntervalLo: Float
    # ConfidenceIntervalType of  Outcome
    ConfidenceIntervalType: String
    # internal node id
    _id: Long
    # clinicalCharacteristics of  Outcome
    clinicalCharacteristics: [String]
    # dose of  Outcome
    dose: Int
    # doseUnit of  Outcome
    doseUnit: String
    # endpoint of  Outcome
    endpoint: EvidenceEndpoint
    # it is unlikely that an Outcome would be mapped to more than one evidence, but set as array just in case
    evidences(
        _id: Long
        _ids: [Long]
        # ampCapAscoTier of Evidence
        ampCapAscoTier: String
        # ampCapAscoTiers is list variant of ampCapAscoTier of Evidence
        ampCapAscoTiers: [String]
        # approvalStatus of Evidence
        approvalStatus: String
        # approvalStatuss is list variant of approvalStatus of Evidence
        approvalStatuss: [String]
        # evidenceType of Evidence
        evidenceType: EvidenceType
        # evidenceTypes is list variant of evidenceType of Evidence
        evidenceTypes: [EvidenceType]
        filter: _EvidenceFilter
        first: Int
        # id of Evidence
        id: ID
        # ids is list variant of id of Evidence
        ids: [ID]
        # notes of Evidence
        notes: String
        # notess is list variant of notes of Evidence
        notess: [String]
        offset: Int
        orderBy: [_EvidenceOrdering]
        # responseType of Evidence
        responseType: ResponseType
        # responseTypes is list variant of responseType of Evidence
        responseTypes: [ResponseType]
    ): [Evidence]!
    # groupSize of  Outcome
    groupSize: Int
    # id of  Outcome
    id: ID!
    # notes of  Outcome
    notes: String
    # observation of  Outcome
    observation: String
    # observationMethod of  Outcome
    observationMethod: String
    # outcome of  Outcome
    outcome: Float!
    # outcomeRangeMax of  Outcome
    outcomeRangeMax: Float
    # outcomeRangeMin of  Outcome
    outcomeRangeMin: Float
    # outcomeUnit of  Outcome
    outcomeUnit: String!
    # treatmentGroup of  Outcome
    treatmentGroup: String
}

# ProteinExpressionMarker-Node
type ProteinExpressionMarker implements MarkerComponent {
    # internal node id
    _id: Long
    # assay is either IHCAssay or  RNASeqAssay
    assay(
        filter: _ProteinLevelAssayFilter
        # id of ProteinLevelAssay
        id: ID
        # ids is list variant of id of ProteinLevelAssay
        ids: [ID]
        orderBy: [_ProteinLevelAssayOrdering]
    ): ProteinLevelAssay!
    # ProteinExpressionMarker genes EditableOmniGeneList
    genes(
        # editDate of EditableOmniGeneList
        editDate: String
        # editDates is list variant of editDate of EditableOmniGeneList
        editDates: [String]
        # field of EditableOmniGeneList
        field: String
        # fields is list variant of field of EditableOmniGeneList
        fields: [String]
        filter: _EditableOmniGeneListFilter
        # id of EditableOmniGeneList
        id: ID
        # ids is list variant of id of EditableOmniGeneList
        ids: [ID]
        orderBy: [_EditableOmniGeneListOrdering]
    ): EditableOmniGeneList!
    # id of  ProteinExpressionMarker
    id: ID!
    # ProteinExpressionMarker immuneCycleRoles EditableImmuneCycleRole
    immuneCycleRoles(
        _id: Long
        _ids: [Long]
        # editDate of EditableImmuneCycleRole
        editDate: String
        # editDates is list variant of editDate of EditableImmuneCycleRole
        editDates: [String]
        # field of EditableImmuneCycleRole
        field: String
        # fields is list variant of field of EditableImmuneCycleRole
        fields: [String]
        filter: _EditableImmuneCycleRoleFilter
        first: Int
        # id of EditableImmuneCycleRole
        id: ID
        # ids is list variant of id of EditableImmuneCycleRole
        ids: [ID]
        # immuneCycleRole of EditableImmuneCycleRole
        immuneCycleRole: ImmuneCycleRole
        # immuneCycleRoles is list variant of immuneCycleRole of EditableImmuneCycleRole
        immuneCycleRoles: [ImmuneCycleRole]
        offset: Int
        orderBy: [_EditableImmuneCycleRoleOrdering]
    ): [EditableImmuneCycleRole]!
    # ProteinExpressionMarker immuneFunctions EditableImmuneFunction
    immuneFunctions(
        _id: Long
        _ids: [Long]
        # editDate of EditableImmuneFunction
        editDate: String
        # editDates is list variant of editDate of EditableImmuneFunction
        editDates: [String]
        # field of EditableImmuneFunction
        field: String
        # fields is list variant of field of EditableImmuneFunction
        fields: [String]
        filter: _EditableImmuneFunctionFilter
        first: Int
        # id of EditableImmuneFunction
        id: ID
        # ids is list variant of id of EditableImmuneFunction
        ids: [ID]
        # immuneFunction of EditableImmuneFunction
        immuneFunction: ImmuneFunction
        # immuneFunctions is list variant of immuneFunction of EditableImmuneFunction
        immuneFunctions: [ImmuneFunction]
        offset: Int
        orderBy: [_EditableImmuneFunctionOrdering]
    ): [EditableImmuneFunction]!
    # ProteinExpressionMarker immunePhenotypes EditableImmunePhenotype
    immunePhenotypes(
        _id: Long
        _ids: [Long]
        # editDate of EditableImmunePhenotype
        editDate: String
        # editDates is list variant of editDate of EditableImmunePhenotype
        editDates: [String]
        # field of EditableImmunePhenotype
        field: String
        # fields is list variant of field of EditableImmunePhenotype
        fields: [String]
        filter: _EditableImmunePhenotypeFilter
        first: Int
        # id of EditableImmunePhenotype
        id: ID
        # ids is list variant of id of EditableImmunePhenotype
        ids: [ID]
        # immunePhenotype of EditableImmunePhenotype
        immunePhenotype: ImmunePhenotype
        # immunePhenotypes is list variant of immunePhenotype of EditableImmunePhenotype
        immunePhenotypes: [ImmunePhenotype]
        offset: Int
        orderBy: [_EditableImmunePhenotypeOrdering]
    ): [EditableImmunePhenotype]!
    # ProteinExpressionMarker method EditableStatement
    method(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # ProteinExpressionMarker name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # ProteinExpressionMarker resultString EditableStatement
    resultString(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # ProteinExpressionMarker synonyms EditableStringList
    synonyms(
        # editDate of EditableStringList
        editDate: String
        # editDates is list variant of editDate of EditableStringList
        editDates: [String]
        # field of EditableStringList
        field: String
        # fields is list variant of field of EditableStringList
        fields: [String]
        filter: _EditableStringListFilter
        # id of EditableStringList
        id: ID
        # ids is list variant of id of EditableStringList
        ids: [ID]
        orderBy: [_EditableStringListOrdering]
        # stringList of EditableStringList
        stringList: [String]
        # stringLists is list variant of stringList of EditableStringList
        stringLists: [[String]]
    ): EditableStringList!
}

# ProteinLevelAssay-Node
interface ProteinLevelAssay {
    # internal node id
    _id: Long
    # id of  ProteinLevelAssay
    id: ID!
    # ProteinLevelAssay name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

type QueryType {
    AdverseEvent(
        _id: Long
        _ids: [Long]
        filter: _AdverseEventFilter
        first: Int
        # grade of AdverseEvent
        grade: Int
        # grades is list variant of grade of AdverseEvent
        grades: [Int]
        # id of AdverseEvent
        id: ID
        # ids is list variant of id of AdverseEvent
        ids: [ID]
        # name of AdverseEvent
        name: String
        # names is list variant of name of AdverseEvent
        names: [String]
        offset: Int
        orderBy: [_AdverseEventOrdering]
    ): [AdverseEvent]
    Author(
        _id: Long
        _ids: [Long]
        filter: _AuthorFilter
        first: Int
        # firstInitial of Author
        firstInitial: String
        # firstInitials is list variant of firstInitial of Author
        firstInitials: [String]
        # id of Author
        id: ID
        # ids is list variant of id of Author
        ids: [ID]
        offset: Int
        orderBy: [_AuthorOrdering]
        # surname of Author
        surname: String
        # surnames is list variant of surname of Author
        surnames: [String]
    ): [Author]
    ClinVarVariant(
        _id: Long
        _ids: [Long]
        # cDot of ClinVarVariant
        cDot: String
        # cDots is list variant of cDot of ClinVarVariant
        cDots: [String]
        filter: _ClinVarVariantFilter
        first: Int
        # gene of ClinVarVariant
        gene: String
        # genes is list variant of gene of ClinVarVariant
        genes: [String]
        # id of ClinVarVariant
        id: ID
        # ids is list variant of id of ClinVarVariant
        ids: [ID]
        offset: Int
        orderBy: [_ClinVarVariantOrdering]
        # pDot of ClinVarVariant
        pDot: String
        # pDots is list variant of pDot of ClinVarVariant
        pDots: [String]
        # variantId of ClinVarVariant
        variantId: String
        # variantIds is list variant of variantId of ClinVarVariant
        variantIds: [String]
    ): [ClinVarVariant]
    ClinicalTrial(
        _id: Long
        _ids: [Long]
        # acronym of ClinicalTrial
        acronym: String
        # acronyms is list variant of acronym of ClinicalTrial
        acronyms: [String]
        # briefTitle of ClinicalTrial
        briefTitle: String
        # briefTitles is list variant of briefTitle of ClinicalTrial
        briefTitles: [String]
        filter: _ClinicalTrialFilter
        first: Int
        # id of ClinicalTrial
        id: ID
        # ids is list variant of id of ClinicalTrial
        ids: [ID]
        # name of ClinicalTrial
        name: String
        # names is list variant of name of ClinicalTrial
        names: [String]
        # officialTitle of ClinicalTrial
        officialTitle: String
        # officialTitles is list variant of officialTitle of ClinicalTrial
        officialTitles: [String]
        offset: Int
        orderBy: [_ClinicalTrialOrdering]
        # resource of ClinicalTrial
        resource: String
        # resourceId of ClinicalTrial
        resourceId: String
        # resourceIds is list variant of resourceId of ClinicalTrial
        resourceIds: [String]
        # resources is list variant of resource of ClinicalTrial
        resources: [String]
    ): [ClinicalTrial]
    DNAMarker(
        _id: Long
        _ids: [Long]
        filter: _DNAMarkerFilter
        first: Int
        # id of DNAMarker
        id: ID
        # ids is list variant of id of DNAMarker
        ids: [ID]
        # markerType of DNAMarker
        markerType: DNAMarkerType
        # markerTypes is list variant of markerType of DNAMarker
        markerTypes: [DNAMarkerType]
        offset: Int
        orderBy: [_DNAMarkerOrdering]
    ): [DNAMarker]
    DODisease(
        _id: Long
        _ids: [Long]
        # doId of DODisease
        doId: String
        # doIds is list variant of doId of DODisease
        doIds: [String]
        filter: _DODiseaseFilter
        first: Int
        # id of DODisease
        id: ID
        # ids is list variant of id of DODisease
        ids: [ID]
        offset: Int
        orderBy: [_DODiseaseOrdering]
    ): [DODisease]
    DrugCategory(
        _id: Long
        _ids: [Long]
        filter: _DrugCategoryFilter
        first: Int
        # id of DrugCategory
        id: ID
        # ids is list variant of id of DrugCategory
        ids: [ID]
        offset: Int
        orderBy: [_DrugCategoryOrdering]
    ): [DrugCategory]
    EditableAssayComparator(
        _id: Long
        _ids: [Long]
        # comparator of EditableAssayComparator
        comparator: AssayComparator
        # comparators is list variant of comparator of EditableAssayComparator
        comparators: [AssayComparator]
        # editDate of EditableAssayComparator
        editDate: String
        # editDates is list variant of editDate of EditableAssayComparator
        editDates: [String]
        # field of EditableAssayComparator
        field: String
        # fields is list variant of field of EditableAssayComparator
        fields: [String]
        filter: _EditableAssayComparatorFilter
        first: Int
        # id of EditableAssayComparator
        id: ID
        # ids is list variant of id of EditableAssayComparator
        ids: [ID]
        offset: Int
        orderBy: [_EditableAssayComparatorOrdering]
    ): [EditableAssayComparator]
    EditableBoolean(
        _id: Long
        _ids: [Long]
        # booleanValue of EditableBoolean
        booleanValue: ExtendedBoolean
        # booleanValues is list variant of booleanValue of EditableBoolean
        booleanValues: [ExtendedBoolean]
        # editDate of EditableBoolean
        editDate: String
        # editDates is list variant of editDate of EditableBoolean
        editDates: [String]
        # field of EditableBoolean
        field: String
        # fields is list variant of field of EditableBoolean
        fields: [String]
        filter: _EditableBooleanFilter
        first: Int
        # id of EditableBoolean
        id: ID
        # ids is list variant of id of EditableBoolean
        ids: [ID]
        offset: Int
        orderBy: [_EditableBooleanOrdering]
    ): [EditableBoolean]
    EditableCopyChange(
        _id: Long
        _ids: [Long]
        # cnvType of EditableCopyChange
        cnvType: CNVType
        # cnvTypes is list variant of cnvType of EditableCopyChange
        cnvTypes: [CNVType]
        # editDate of EditableCopyChange
        editDate: String
        # editDates is list variant of editDate of EditableCopyChange
        editDates: [String]
        # field of EditableCopyChange
        field: String
        # fields is list variant of field of EditableCopyChange
        fields: [String]
        filter: _EditableCopyChangeFilter
        first: Int
        # id of EditableCopyChange
        id: ID
        # ids is list variant of id of EditableCopyChange
        ids: [ID]
        offset: Int
        orderBy: [_EditableCopyChangeOrdering]
    ): [EditableCopyChange]
    EditableDODiseaseList(
        _id: Long
        _ids: [Long]
        # editDate of EditableDODiseaseList
        editDate: String
        # editDates is list variant of editDate of EditableDODiseaseList
        editDates: [String]
        # field of EditableDODiseaseList
        field: String
        # fields is list variant of field of EditableDODiseaseList
        fields: [String]
        filter: _EditableDODiseaseListFilter
        first: Int
        # id of EditableDODiseaseList
        id: ID
        # ids is list variant of id of EditableDODiseaseList
        ids: [ID]
        offset: Int
        orderBy: [_EditableDODiseaseListOrdering]
    ): [EditableDODiseaseList]
    EditableFloat(
        _id: Long
        _ids: [Long]
        # editDate of EditableFloat
        editDate: String
        # editDates is list variant of editDate of EditableFloat
        editDates: [String]
        # field of EditableFloat
        field: String
        # fields is list variant of field of EditableFloat
        fields: [String]
        filter: _EditableFloatFilter
        first: Int
        # floatValue of EditableFloat
        floatValue: Float
        # floatValues is list variant of floatValue of EditableFloat
        floatValues: [Float]
        # id of EditableFloat
        id: ID
        # ids is list variant of id of EditableFloat
        ids: [ID]
        offset: Int
        orderBy: [_EditableFloatOrdering]
    ): [EditableFloat]
    EditableGODiseaseList(
        _id: Long
        _ids: [Long]
        # editDate of EditableGODiseaseList
        editDate: String
        # editDates is list variant of editDate of EditableGODiseaseList
        editDates: [String]
        # field of EditableGODiseaseList
        field: String
        # fields is list variant of field of EditableGODiseaseList
        fields: [String]
        filter: _EditableGODiseaseListFilter
        first: Int
        # id of EditableGODiseaseList
        id: ID
        # ids is list variant of id of EditableGODiseaseList
        ids: [ID]
        offset: Int
        orderBy: [_EditableGODiseaseListOrdering]
    ): [EditableGODiseaseList]
    EditableImmuneCycleRole(
        _id: Long
        _ids: [Long]
        # editDate of EditableImmuneCycleRole
        editDate: String
        # editDates is list variant of editDate of EditableImmuneCycleRole
        editDates: [String]
        # field of EditableImmuneCycleRole
        field: String
        # fields is list variant of field of EditableImmuneCycleRole
        fields: [String]
        filter: _EditableImmuneCycleRoleFilter
        first: Int
        # id of EditableImmuneCycleRole
        id: ID
        # ids is list variant of id of EditableImmuneCycleRole
        ids: [ID]
        # immuneCycleRole of EditableImmuneCycleRole
        immuneCycleRole: ImmuneCycleRole
        # immuneCycleRoles is list variant of immuneCycleRole of EditableImmuneCycleRole
        immuneCycleRoles: [ImmuneCycleRole]
        offset: Int
        orderBy: [_EditableImmuneCycleRoleOrdering]
    ): [EditableImmuneCycleRole]
    EditableImmuneFunction(
        _id: Long
        _ids: [Long]
        # editDate of EditableImmuneFunction
        editDate: String
        # editDates is list variant of editDate of EditableImmuneFunction
        editDates: [String]
        # field of EditableImmuneFunction
        field: String
        # fields is list variant of field of EditableImmuneFunction
        fields: [String]
        filter: _EditableImmuneFunctionFilter
        first: Int
        # id of EditableImmuneFunction
        id: ID
        # ids is list variant of id of EditableImmuneFunction
        ids: [ID]
        # immuneFunction of EditableImmuneFunction
        immuneFunction: ImmuneFunction
        # immuneFunctions is list variant of immuneFunction of EditableImmuneFunction
        immuneFunctions: [ImmuneFunction]
        offset: Int
        orderBy: [_EditableImmuneFunctionOrdering]
    ): [EditableImmuneFunction]
    EditableImmunePhenotype(
        _id: Long
        _ids: [Long]
        # editDate of EditableImmunePhenotype
        editDate: String
        # editDates is list variant of editDate of EditableImmunePhenotype
        editDates: [String]
        # field of EditableImmunePhenotype
        field: String
        # fields is list variant of field of EditableImmunePhenotype
        fields: [String]
        filter: _EditableImmunePhenotypeFilter
        first: Int
        # id of EditableImmunePhenotype
        id: ID
        # ids is list variant of id of EditableImmunePhenotype
        ids: [ID]
        # immunePhenotype of EditableImmunePhenotype
        immunePhenotype: ImmunePhenotype
        # immunePhenotypes is list variant of immunePhenotype of EditableImmunePhenotype
        immunePhenotypes: [ImmunePhenotype]
        offset: Int
        orderBy: [_EditableImmunePhenotypeOrdering]
    ): [EditableImmunePhenotype]
    EditableInt(
        _id: Long
        _ids: [Long]
        # editDate of EditableInt
        editDate: String
        # editDates is list variant of editDate of EditableInt
        editDates: [String]
        # field of EditableInt
        field: String
        # fields is list variant of field of EditableInt
        fields: [String]
        filter: _EditableIntFilter
        first: Int
        # id of EditableInt
        id: ID
        # ids is list variant of id of EditableInt
        ids: [ID]
        # intValue of EditableInt
        intValue: Int
        # intValues is list variant of intValue of EditableInt
        intValues: [Int]
        offset: Int
        orderBy: [_EditableIntOrdering]
    ): [EditableInt]
    EditableJAXDiseaseList(
        _id: Long
        _ids: [Long]
        # editDate of EditableJAXDiseaseList
        editDate: String
        # editDates is list variant of editDate of EditableJAXDiseaseList
        editDates: [String]
        # field of EditableJAXDiseaseList
        field: String
        # fields is list variant of field of EditableJAXDiseaseList
        fields: [String]
        filter: _EditableJAXDiseaseListFilter
        first: Int
        # id of EditableJAXDiseaseList
        id: ID
        # ids is list variant of id of EditableJAXDiseaseList
        ids: [ID]
        offset: Int
        orderBy: [_EditableJAXDiseaseListOrdering]
    ): [EditableJAXDiseaseList]
    EditableMarkerComponentList(
        _id: Long
        _ids: [Long]
        # editDate of EditableMarkerComponentList
        editDate: String
        # editDates is list variant of editDate of EditableMarkerComponentList
        editDates: [String]
        # field of EditableMarkerComponentList
        field: String
        # fields is list variant of field of EditableMarkerComponentList
        fields: [String]
        filter: _EditableMarkerComponentListFilter
        first: Int
        # id of EditableMarkerComponentList
        id: ID
        # ids is list variant of id of EditableMarkerComponentList
        ids: [ID]
        offset: Int
        orderBy: [_EditableMarkerComponentListOrdering]
    ): [EditableMarkerComponentList]
    EditableObject(
        _id: Long
        _ids: [Long]
        # editDate of EditableObject
        editDate: String
        # editDates is list variant of editDate of EditableObject
        editDates: [String]
        # field of EditableObject
        field: String
        # fields is list variant of field of EditableObject
        fields: [String]
        filter: _EditableObjectFilter
        first: Int
        # id of EditableObject
        id: ID
        # ids is list variant of id of EditableObject
        ids: [ID]
        offset: Int
        orderBy: [_EditableObjectOrdering]
    ): [EditableObject]
    EditableOmniConjunction(
        _id: Long
        _ids: [Long]
        # conjunction of EditableOmniConjunction
        conjunction: OmniConjunction
        # conjunctions is list variant of conjunction of EditableOmniConjunction
        conjunctions: [OmniConjunction]
        # editDate of EditableOmniConjunction
        editDate: String
        # editDates is list variant of editDate of EditableOmniConjunction
        editDates: [String]
        # field of EditableOmniConjunction
        field: String
        # fields is list variant of field of EditableOmniConjunction
        fields: [String]
        filter: _EditableOmniConjunctionFilter
        first: Int
        # id of EditableOmniConjunction
        id: ID
        # ids is list variant of id of EditableOmniConjunction
        ids: [ID]
        offset: Int
        orderBy: [_EditableOmniConjunctionOrdering]
    ): [EditableOmniConjunction]
    EditableOmniGeneList(
        _id: Long
        _ids: [Long]
        # editDate of EditableOmniGeneList
        editDate: String
        # editDates is list variant of editDate of EditableOmniGeneList
        editDates: [String]
        # field of EditableOmniGeneList
        field: String
        # fields is list variant of field of EditableOmniGeneList
        fields: [String]
        filter: _EditableOmniGeneListFilter
        first: Int
        # id of EditableOmniGeneList
        id: ID
        # ids is list variant of id of EditableOmniGeneList
        ids: [ID]
        offset: Int
        orderBy: [_EditableOmniGeneListOrdering]
    ): [EditableOmniGeneList]
    EditableOmniGeneReference(
        _id: Long
        _ids: [Long]
        # editDate of EditableOmniGeneReference
        editDate: String
        # editDates is list variant of editDate of EditableOmniGeneReference
        editDates: [String]
        # field of EditableOmniGeneReference
        field: String
        # fields is list variant of field of EditableOmniGeneReference
        fields: [String]
        filter: _EditableOmniGeneReferenceFilter
        first: Int
        # id of EditableOmniGeneReference
        id: ID
        # ids is list variant of id of EditableOmniGeneReference
        ids: [ID]
        offset: Int
        orderBy: [_EditableOmniGeneReferenceOrdering]
    ): [EditableOmniGeneReference]
    EditableOmniMapList(
        _id: Long
        _ids: [Long]
        # editDate of EditableOmniMapList
        editDate: String
        # editDates is list variant of editDate of EditableOmniMapList
        editDates: [String]
        # field of EditableOmniMapList
        field: String
        # fields is list variant of field of EditableOmniMapList
        fields: [String]
        filter: _EditableOmniMapListFilter
        first: Int
        # id of EditableOmniMapList
        id: ID
        # ids is list variant of id of EditableOmniMapList
        ids: [ID]
        offset: Int
        orderBy: [_EditableOmniMapListOrdering]
    ): [EditableOmniMapList]
    EditableOncoTreeDiseaseList(
        _id: Long
        _ids: [Long]
        # editDate of EditableOncoTreeDiseaseList
        editDate: String
        # editDates is list variant of editDate of EditableOncoTreeDiseaseList
        editDates: [String]
        # field of EditableOncoTreeDiseaseList
        field: String
        # fields is list variant of field of EditableOncoTreeDiseaseList
        fields: [String]
        filter: _EditableOncoTreeDiseaseListFilter
        first: Int
        # id of EditableOncoTreeDiseaseList
        id: ID
        # ids is list variant of id of EditableOncoTreeDiseaseList
        ids: [ID]
        offset: Int
        orderBy: [_EditableOncoTreeDiseaseListOrdering]
    ): [EditableOncoTreeDiseaseList]
    EditableProteinEffect(
        _id: Long
        _ids: [Long]
        # editDate of EditableProteinEffect
        editDate: String
        # editDates is list variant of editDate of EditableProteinEffect
        editDates: [String]
        # field of EditableProteinEffect
        field: String
        # fields is list variant of field of EditableProteinEffect
        fields: [String]
        filter: _EditableProteinEffectFilter
        first: Int
        # id of EditableProteinEffect
        id: ID
        # ids is list variant of id of EditableProteinEffect
        ids: [ID]
        offset: Int
        orderBy: [_EditableProteinEffectOrdering]
        # proteinEffect of EditableProteinEffect
        proteinEffect: VariantProteinEffect
        # proteinEffects is list variant of proteinEffect of EditableProteinEffect
        proteinEffects: [VariantProteinEffect]
    ): [EditableProteinEffect]
    EditableRNASeqResultType(
        _id: Long
        _ids: [Long]
        # editDate of EditableRNASeqResultType
        editDate: String
        # editDates is list variant of editDate of EditableRNASeqResultType
        editDates: [String]
        # field of EditableRNASeqResultType
        field: String
        # fields is list variant of field of EditableRNASeqResultType
        fields: [String]
        filter: _EditableRNASeqResultTypeFilter
        first: Int
        # id of EditableRNASeqResultType
        id: ID
        # ids is list variant of id of EditableRNASeqResultType
        ids: [ID]
        offset: Int
        orderBy: [_EditableRNASeqResultTypeOrdering]
        # resultType of EditableRNASeqResultType
        resultType: RNASeqResultType
        # resultTypes is list variant of resultType of EditableRNASeqResultType
        resultTypes: [RNASeqResultType]
    ): [EditableRNASeqResultType]
    EditableStatement(
        _id: Long
        _ids: [Long]
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        first: Int
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        offset: Int
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): [EditableStatement]
    EditableStringList(
        _id: Long
        _ids: [Long]
        # editDate of EditableStringList
        editDate: String
        # editDates is list variant of editDate of EditableStringList
        editDates: [String]
        # field of EditableStringList
        field: String
        # fields is list variant of field of EditableStringList
        fields: [String]
        filter: _EditableStringListFilter
        first: Int
        # id of EditableStringList
        id: ID
        # ids is list variant of id of EditableStringList
        ids: [ID]
        offset: Int
        orderBy: [_EditableStringListOrdering]
        # stringList of EditableStringList
        stringList: [String]
        # stringLists is list variant of stringList of EditableStringList
        stringLists: [[String]]
    ): [EditableStringList]
    EditableTMBInterpretation(
        _id: Long
        _ids: [Long]
        # editDate of EditableTMBInterpretation
        editDate: String
        # editDates is list variant of editDate of EditableTMBInterpretation
        editDates: [String]
        # field of EditableTMBInterpretation
        field: String
        # fields is list variant of field of EditableTMBInterpretation
        fields: [String]
        filter: _EditableTMBInterpretationFilter
        first: Int
        # id of EditableTMBInterpretation
        id: ID
        # ids is list variant of id of EditableTMBInterpretation
        ids: [ID]
        offset: Int
        orderBy: [_EditableTMBInterpretationOrdering]
        # tmbInterpretation of EditableTMBInterpretation
        tmbInterpretation: TMBInterpretationType
        # tmbInterpretations is list variant of tmbInterpretation of EditableTMBInterpretation
        tmbInterpretations: [TMBInterpretationType]
    ): [EditableTMBInterpretation]
    EditableXRefList(
        _id: Long
        _ids: [Long]
        # editDate of EditableXRefList
        editDate: String
        # editDates is list variant of editDate of EditableXRefList
        editDates: [String]
        # field of EditableXRefList
        field: String
        # fields is list variant of field of EditableXRefList
        fields: [String]
        filter: _EditableXRefListFilter
        first: Int
        # id of EditableXRefList
        id: ID
        # ids is list variant of id of EditableXRefList
        ids: [ID]
        offset: Int
        orderBy: [_EditableXRefListOrdering]
    ): [EditableXRefList]
    Evidence(
        _id: Long
        _ids: [Long]
        # ampCapAscoTier of Evidence
        ampCapAscoTier: String
        # ampCapAscoTiers is list variant of ampCapAscoTier of Evidence
        ampCapAscoTiers: [String]
        # approvalStatus of Evidence
        approvalStatus: String
        # approvalStatuss is list variant of approvalStatus of Evidence
        approvalStatuss: [String]
        # evidenceType of Evidence
        evidenceType: EvidenceType
        # evidenceTypes is list variant of evidenceType of Evidence
        evidenceTypes: [EvidenceType]
        filter: _EvidenceFilter
        first: Int
        # id of Evidence
        id: ID
        # ids is list variant of id of Evidence
        ids: [ID]
        # notes of Evidence
        notes: String
        # notess is list variant of notes of Evidence
        notess: [String]
        offset: Int
        orderBy: [_EvidenceOrdering]
        # responseType of Evidence
        responseType: ResponseType
        # responseTypes is list variant of responseType of Evidence
        responseTypes: [ResponseType]
    ): [Evidence]
    EvidenceAssociation(
        _id: Long
        _ids: [Long]
        filter: _EvidenceAssociationFilter
        first: Int
        # id of EvidenceAssociation
        id: ID
        # ids is list variant of id of EvidenceAssociation
        ids: [ID]
        # name of EvidenceAssociation
        name: String
        # names is list variant of name of EvidenceAssociation
        names: [String]
        offset: Int
        orderBy: [_EvidenceAssociationOrdering]
    ): [EvidenceAssociation]
    GODisease(
        _id: Long
        _ids: [Long]
        filter: _GODiseaseFilter
        first: Int
        # goId of GODisease
        goId: String
        # goIds is list variant of goId of GODisease
        goIds: [String]
        # id of GODisease
        id: ID
        # ids is list variant of id of GODisease
        ids: [ID]
        offset: Int
        orderBy: [_GODiseaseOrdering]
    ): [GODisease]
    GOVariant(
        _id: Long
        _ids: [Long]
        filter: _GOVariantFilter
        first: Int
        # gene of GOVariant
        gene: String
        # genes is list variant of gene of GOVariant
        genes: [String]
        # goId of GOVariant
        goId: String
        # goIds is list variant of goId of GOVariant
        goIds: [String]
        # id of GOVariant
        id: ID
        # ids is list variant of id of GOVariant
        ids: [ID]
        # mutationType of GOVariant
        mutationType: String
        # mutationTypes is list variant of mutationType of GOVariant
        mutationTypes: [String]
        offset: Int
        orderBy: [_GOVariantOrdering]
    ): [GOVariant]
    GenomicVariant(
        _id: Long
        _ids: [Long]
        filter: _GenomicVariantFilter
        first: Int
        # id of GenomicVariant
        id: ID
        # ids is list variant of id of GenomicVariant
        ids: [ID]
        offset: Int
        orderBy: [_GenomicVariantOrdering]
    ): [GenomicVariant]
    GenomicVariantMarker(
        _id: Long
        _ids: [Long]
        filter: _GenomicVariantMarkerFilter
        first: Int
        # id of GenomicVariantMarker
        id: ID
        # ids is list variant of id of GenomicVariantMarker
        ids: [ID]
        offset: Int
        orderBy: [_GenomicVariantMarkerOrdering]
    ): [GenomicVariantMarker]
    HotSpotVariant(
        _id: Long
        _ids: [Long]
        # begin of HotSpotVariant
        begin: String
        # begins is list variant of begin of HotSpotVariant
        begins: [String]
        # end of HotSpotVariant
        end: String
        # ends is list variant of end of HotSpotVariant
        ends: [String]
        filter: _HotSpotVariantFilter
        first: Int
        # gene of HotSpotVariant
        gene: String
        # genes is list variant of gene of HotSpotVariant
        genes: [String]
        # id of HotSpotVariant
        id: ID
        # ids is list variant of id of HotSpotVariant
        ids: [ID]
        # name of HotSpotVariant
        name: String
        # names is list variant of name of HotSpotVariant
        names: [String]
        offset: Int
        orderBy: [_HotSpotVariantOrdering]
        # position of HotSpotVariant
        position: Int
        # positions is list variant of position of HotSpotVariant
        positions: [Int]
        # referenceAminoAcid of HotSpotVariant
        referenceAminoAcid: String
        # referenceAminoAcids is list variant of referenceAminoAcid of HotSpotVariant
        referenceAminoAcids: [String]
        # variantAminoAcid of HotSpotVariant
        variantAminoAcid: String
        # variantAminoAcids is list variant of variantAminoAcid of HotSpotVariant
        variantAminoAcids: [String]
    ): [HotSpotVariant]
    IHCAssay(
        _id: Long
        _ids: [Long]
        filter: _IHCAssayFilter
        first: Int
        # id of IHCAssay
        id: ID
        # ids is list variant of id of IHCAssay
        ids: [ID]
        offset: Int
        orderBy: [_IHCAssayOrdering]
    ): [IHCAssay]
    InternetReference(
        _id: Long
        _ids: [Long]
        # accessedDate of InternetReference
        accessedDate: String
        # accessedDates is list variant of accessedDate of InternetReference
        accessedDates: [String]
        filter: _InternetReferenceFilter
        first: Int
        # id of InternetReference
        id: ID
        # ids is list variant of id of InternetReference
        ids: [ID]
        offset: Int
        orderBy: [_InternetReferenceOrdering]
        # shortReference of InternetReference
        shortReference: String
        # shortReferences is list variant of shortReference of InternetReference
        shortReferences: [String]
        # webAddress of InternetReference
        webAddress: String
        # webAddresss is list variant of webAddress of InternetReference
        webAddresss: [String]
    ): [InternetReference]
    JaxDisease(
        _id: Long
        _ids: [Long]
        filter: _JaxDiseaseFilter
        first: Int
        # id of JaxDisease
        id: ID
        # ids is list variant of id of JaxDisease
        ids: [ID]
        # jaxId of JaxDisease
        jaxId: String
        # jaxIds is list variant of jaxId of JaxDisease
        jaxIds: [String]
        offset: Int
        orderBy: [_JaxDiseaseOrdering]
        # source of JaxDisease
        source: String
        # sources is list variant of source of JaxDisease
        sources: [String]
        # termId of JaxDisease
        termId: String
        # termIds is list variant of termId of JaxDisease
        termIds: [String]
    ): [JaxDisease]
    JaxDrug(
        _id: Long
        _ids: [Long]
        filter: _JaxDrugFilter
        first: Int
        # id of JaxDrug
        id: ID
        # ids is list variant of id of JaxDrug
        ids: [ID]
        # jaxId of JaxDrug
        jaxId: String
        # jaxIds is list variant of jaxId of JaxDrug
        jaxIds: [String]
        offset: Int
        orderBy: [_JaxDrugOrdering]
    ): [JaxDrug]
    JaxDrugClass(
        _id: Long
        _ids: [Long]
        filter: _JaxDrugClassFilter
        first: Int
        # id of JaxDrugClass
        id: ID
        # ids is list variant of id of JaxDrugClass
        ids: [ID]
        # jaxId of JaxDrugClass
        jaxId: String
        # jaxIds is list variant of jaxId of JaxDrugClass
        jaxIds: [String]
        offset: Int
        orderBy: [_JaxDrugClassOrdering]
    ): [JaxDrugClass]
    JaxGene(
        _id: Long
        _ids: [Long]
        # chromosome of JaxGene
        chromosome: String
        # chromosomes is list variant of chromosome of JaxGene
        chromosomes: [String]
        # entrezId of JaxGene
        entrezId: String
        # entrezIds is list variant of entrezId of JaxGene
        entrezIds: [String]
        filter: _JaxGeneFilter
        first: Int
        # id of JaxGene
        id: ID
        # ids is list variant of id of JaxGene
        ids: [ID]
        # jaxId of JaxGene
        jaxId: String
        # jaxIds is list variant of jaxId of JaxGene
        jaxIds: [String]
        # name of JaxGene
        name: String
        # names is list variant of name of JaxGene
        names: [String]
        offset: Int
        orderBy: [_JaxGeneOrdering]
    ): [JaxGene]
    JaxVariant(
        _id: Long
        _ids: [Long]
        # cDot of JaxVariant
        cDot: String
        # cDots is list variant of cDot of JaxVariant
        cDots: [String]
        filter: _JaxVariantFilter
        first: Int
        # gDot of JaxVariant
        gDot: String
        # gDots is list variant of gDot of JaxVariant
        gDots: [String]
        # id of JaxVariant
        id: ID
        # ids is list variant of id of JaxVariant
        ids: [ID]
        # jaxId of JaxVariant
        jaxId: String
        # jaxIds is list variant of jaxId of JaxVariant
        jaxIds: [String]
        # name of JaxVariant
        name: String
        # names is list variant of name of JaxVariant
        names: [String]
        offset: Int
        orderBy: [_JaxVariantOrdering]
        # pDot of JaxVariant
        pDot: String
        # pDots is list variant of pDot of JaxVariant
        pDots: [String]
        # variantType of JaxVariant
        variantType: String
        # variantTypes is list variant of variantType of JaxVariant
        variantTypes: [String]
    ): [JaxVariant]
    Journal(
        _id: Long
        _ids: [Long]
        filter: _JournalFilter
        first: Int
        # id of Journal
        id: ID
        # ids is list variant of id of Journal
        ids: [ID]
        # name of Journal
        name: String
        # names is list variant of name of Journal
        names: [String]
        offset: Int
        orderBy: [_JournalOrdering]
    ): [Journal]
    LiteratureReference(
        # DOI of LiteratureReference
        DOI: String
        # DOIs is list variant of DOI of LiteratureReference
        DOIs: [String]
        # PMID of LiteratureReference
        PMID: String
        # PMIDs is list variant of PMID of LiteratureReference
        PMIDs: [String]
        _id: Long
        _ids: [Long]
        # abstract of LiteratureReference
        abstract: String
        # abstracts is list variant of abstract of LiteratureReference
        abstracts: [String]
        filter: _LiteratureReferenceFilter
        first: Int
        # firstPage of LiteratureReference
        firstPage: String
        # firstPages is list variant of firstPage of LiteratureReference
        firstPages: [String]
        # id of LiteratureReference
        id: ID
        # ids is list variant of id of LiteratureReference
        ids: [ID]
        # lastPage of LiteratureReference
        lastPage: String
        # lastPages is list variant of lastPage of LiteratureReference
        lastPages: [String]
        offset: Int
        orderBy: [_LiteratureReferenceOrdering]
        # publicationYear of LiteratureReference
        publicationYear: String
        # publicationYears is list variant of publicationYear of LiteratureReference
        publicationYears: [String]
        # shortReference of LiteratureReference
        shortReference: String
        # shortReferences is list variant of shortReference of LiteratureReference
        shortReferences: [String]
        # title of LiteratureReference
        title: String
        # titles is list variant of title of LiteratureReference
        titles: [String]
        # volume of LiteratureReference
        volume: String
        # volumes is list variant of volume of LiteratureReference
        volumes: [String]
    ): [LiteratureReference]
    MCode(
        _id: Long
        _ids: [Long]
        filter: _MCodeFilter
        first: Int
        # id of MCode
        id: ID
        # ids is list variant of id of MCode
        ids: [ID]
        # mcodeId of MCode
        mcodeId: String
        # mcodeIds is list variant of mcodeId of MCode
        mcodeIds: [String]
        offset: Int
        orderBy: [_MCodeOrdering]
    ): [MCode]
    MSIMarker(
        _id: Long
        _ids: [Long]
        filter: _MSIMarkerFilter
        first: Int
        # id of MSIMarker
        id: ID
        # ids is list variant of id of MSIMarker
        ids: [ID]
        offset: Int
        orderBy: [_MSIMarkerOrdering]
    ): [MSIMarker]
    MarkerComponent(
        _id: Long
        _ids: [Long]
        filter: _MarkerComponentFilter
        first: Int
        # id of MarkerComponent
        id: ID
        # ids is list variant of id of MarkerComponent
        ids: [ID]
        offset: Int
        orderBy: [_MarkerComponentOrdering]
    ): [MarkerComponent]
    MarkerProfile(
        _id: Long
        _ids: [Long]
        filter: _MarkerProfileFilter
        first: Int
        # id of MarkerProfile
        id: ID
        # ids is list variant of id of MarkerProfile
        ids: [ID]
        offset: Int
        orderBy: [_MarkerProfileOrdering]
    ): [MarkerProfile]
    MeetingAbstractReference(
        _id: Long
        _ids: [Long]
        # abstract of MeetingAbstractReference
        abstract: String
        # abstracts is list variant of abstract of MeetingAbstractReference
        abstracts: [String]
        filter: _MeetingAbstractReferenceFilter
        first: Int
        # id of MeetingAbstractReference
        id: ID
        # ids is list variant of id of MeetingAbstractReference
        ids: [ID]
        # meetingDate of MeetingAbstractReference
        meetingDate: String
        # meetingDates is list variant of meetingDate of MeetingAbstractReference
        meetingDates: [String]
        # meetingName of MeetingAbstractReference
        meetingName: String
        # meetingNames is list variant of meetingName of MeetingAbstractReference
        meetingNames: [String]
        offset: Int
        orderBy: [_MeetingAbstractReferenceOrdering]
        # shortReference of MeetingAbstractReference
        shortReference: String
        # shortReferences is list variant of shortReference of MeetingAbstractReference
        shortReferences: [String]
        # title of MeetingAbstractReference
        title: String
        # titles is list variant of title of MeetingAbstractReference
        titles: [String]
    ): [MeetingAbstractReference]
    MyGeneInfoGene(
        _id: Long
        _ids: [Long]
        # chromosome of MyGeneInfoGene
        chromosome: String
        # chromosomes is list variant of chromosome of MyGeneInfoGene
        chromosomes: [String]
        # end of MyGeneInfoGene
        end: Int
        # ends is list variant of end of MyGeneInfoGene
        ends: [Int]
        # entrezId of MyGeneInfoGene
        entrezId: String
        # entrezIds is list variant of entrezId of MyGeneInfoGene
        entrezIds: [String]
        filter: _MyGeneInfoGeneFilter
        first: Int
        # id of MyGeneInfoGene
        id: ID
        # ids is list variant of id of MyGeneInfoGene
        ids: [ID]
        # name of MyGeneInfoGene
        name: String
        # names is list variant of name of MyGeneInfoGene
        names: [String]
        offset: Int
        orderBy: [_MyGeneInfoGeneOrdering]
        # start of MyGeneInfoGene
        start: Int
        # starts is list variant of start of MyGeneInfoGene
        starts: [Int]
        # strand of MyGeneInfoGene
        strand: Strand
        # strands is list variant of strand of MyGeneInfoGene
        strands: [Strand]
    ): [MyGeneInfoGene]
    NCIDrug(
        _id: Long
        _ids: [Long]
        filter: _NCIDrugFilter
        first: Int
        # id of NCIDrug
        id: ID
        # ids is list variant of id of NCIDrug
        ids: [ID]
        # isAntineoplastic of NCIDrug
        isAntineoplastic: Boolean
        # isAntineoplastics is list variant of isAntineoplastic of NCIDrug
        isAntineoplastics: [Boolean]
        # isImmuno of NCIDrug
        isImmuno: Boolean
        # isImmunos is list variant of isImmuno of NCIDrug
        isImmunos: [Boolean]
        offset: Int
        orderBy: [_NCIDrugOrdering]
    ): [NCIDrug]
    OmniDisease(
        _id: Long
        _ids: [Long]
        filter: _OmniDiseaseFilter
        first: Int
        # id of OmniDisease
        id: ID
        # ids is list variant of id of OmniDisease
        ids: [ID]
        offset: Int
        # omniDiseaseId of OmniDisease
        omniDiseaseId: String
        # omniDiseaseIds is list variant of omniDiseaseId of OmniDisease
        omniDiseaseIds: [String]
        # omniDiseaseType of OmniDisease
        omniDiseaseType: OmniDiseaseType
        # omniDiseaseTypes is list variant of omniDiseaseType of OmniDisease
        omniDiseaseTypes: [OmniDiseaseType]
        orderBy: [_OmniDiseaseOrdering]
    ): [OmniDisease]
    OmniDrug(
        _id: Long
        _ids: [Long]
        filter: _OmniDrugFilter
        first: Int
        # id of OmniDrug
        id: ID
        # ids is list variant of id of OmniDrug
        ids: [ID]
        offset: Int
        orderBy: [_OmniDrugOrdering]
    ): [OmniDrug]
    OmniGene(
        _id: Long
        _ids: [Long]
        filter: _OmniGeneFilter
        first: Int
        # id of OmniGene
        id: ID
        # ids is list variant of id of OmniGene
        ids: [ID]
        # name of OmniGene
        name: String
        # names is list variant of name of OmniGene
        names: [String]
        # namess is list variant of names of OmniGene
        namess: [String]
        offset: Int
        orderBy: [_OmniGeneOrdering]
    ): [OmniGene]
    OmniMap(
        _id: Long
        _ids: [Long]
        filter: _OmniMapFilter
        first: Int
        # id of OmniMap
        id: ID
        # ids is list variant of id of OmniMap
        ids: [ID]
        offset: Int
        orderBy: [_OmniMapOrdering]
    ): [OmniMap]
    OncoTreeDisease(
        _id: Long
        _ids: [Long]
        # code of OncoTreeDisease
        code: String
        # codes is list variant of code of OncoTreeDisease
        codes: [String]
        filter: _OncoTreeDiseaseFilter
        first: Int
        # id of OncoTreeDisease
        id: ID
        # ids is list variant of id of OncoTreeDisease
        ids: [ID]
        offset: Int
        orderBy: [_OncoTreeDiseaseOrdering]
    ): [OncoTreeDisease]
    OncoTreeOccurrence(
        _id: Long
        _ids: [Long]
        filter: _OncoTreeOccurrenceFilter
        first: Int
        # id of OncoTreeOccurrence
        id: ID
        # ids is list variant of id of OncoTreeOccurrence
        ids: [ID]
        offset: Int
        # oncoTreeCode of OncoTreeOccurrence
        oncoTreeCode: String
        # oncoTreeCodes is list variant of oncoTreeCode of OncoTreeOccurrence
        oncoTreeCodes: [String]
        orderBy: [_OncoTreeOccurrenceOrdering]
        # perThousandOccurrence of OncoTreeOccurrence
        perThousandOccurrence: Int
        # perThousandOccurrences is list variant of perThousandOccurrence of OncoTreeOccurrence
        perThousandOccurrences: [Int]
    ): [OncoTreeOccurrence]
    OntologicalDisease(
        _id: Long
        _ids: [Long]
        filter: _OntologicalDiseaseFilter
        first: Int
        # id of OntologicalDisease
        id: ID
        # ids is list variant of id of OntologicalDisease
        ids: [ID]
        offset: Int
        orderBy: [_OntologicalDiseaseOrdering]
    ): [OntologicalDisease]
    Outcome(
        # ConfidenceIntervalHi of Outcome
        ConfidenceIntervalHi: Float
        # ConfidenceIntervalHis is list variant of ConfidenceIntervalHi of Outcome
        ConfidenceIntervalHis: [Float]
        # ConfidenceIntervalLo of Outcome
        ConfidenceIntervalLo: Float
        # ConfidenceIntervalLos is list variant of ConfidenceIntervalLo of Outcome
        ConfidenceIntervalLos: [Float]
        # ConfidenceIntervalType of Outcome
        ConfidenceIntervalType: String
        # ConfidenceIntervalTypes is list variant of ConfidenceIntervalType of Outcome
        ConfidenceIntervalTypes: [String]
        _id: Long
        _ids: [Long]
        # clinicalCharacteristics of Outcome
        clinicalCharacteristics: [String]
        # clinicalCharacteristicss is list variant of clinicalCharacteristics of Outcome
        clinicalCharacteristicss: [[String]]
        # dose of Outcome
        dose: Int
        # doseUnit of Outcome
        doseUnit: String
        # doseUnits is list variant of doseUnit of Outcome
        doseUnits: [String]
        # doses is list variant of dose of Outcome
        doses: [Int]
        # endpoint of Outcome
        endpoint: EvidenceEndpoint
        # endpoints is list variant of endpoint of Outcome
        endpoints: [EvidenceEndpoint]
        filter: _OutcomeFilter
        first: Int
        # groupSize of Outcome
        groupSize: Int
        # groupSizes is list variant of groupSize of Outcome
        groupSizes: [Int]
        # id of Outcome
        id: ID
        # ids is list variant of id of Outcome
        ids: [ID]
        # notes of Outcome
        notes: String
        # notess is list variant of notes of Outcome
        notess: [String]
        # observation of Outcome
        observation: String
        # observationMethod of Outcome
        observationMethod: String
        # observationMethods is list variant of observationMethod of Outcome
        observationMethods: [String]
        # observations is list variant of observation of Outcome
        observations: [String]
        offset: Int
        orderBy: [_OutcomeOrdering]
        # outcome of Outcome
        outcome: Float
        # outcomeRangeMax of Outcome
        outcomeRangeMax: Float
        # outcomeRangeMaxs is list variant of outcomeRangeMax of Outcome
        outcomeRangeMaxs: [Float]
        # outcomeRangeMin of Outcome
        outcomeRangeMin: Float
        # outcomeRangeMins is list variant of outcomeRangeMin of Outcome
        outcomeRangeMins: [Float]
        # outcomeUnit of Outcome
        outcomeUnit: String
        # outcomeUnits is list variant of outcomeUnit of Outcome
        outcomeUnits: [String]
        # outcomes is list variant of outcome of Outcome
        outcomes: [Float]
        # treatmentGroup of Outcome
        treatmentGroup: String
        # treatmentGroups is list variant of treatmentGroup of Outcome
        treatmentGroups: [String]
    ): [Outcome]
    ProteinExpressionMarker(
        _id: Long
        _ids: [Long]
        filter: _ProteinExpressionMarkerFilter
        first: Int
        # id of ProteinExpressionMarker
        id: ID
        # ids is list variant of id of ProteinExpressionMarker
        ids: [ID]
        offset: Int
        orderBy: [_ProteinExpressionMarkerOrdering]
    ): [ProteinExpressionMarker]
    ProteinLevelAssay(
        _id: Long
        _ids: [Long]
        filter: _ProteinLevelAssayFilter
        first: Int
        # id of ProteinLevelAssay
        id: ID
        # ids is list variant of id of ProteinLevelAssay
        ids: [ID]
        offset: Int
        orderBy: [_ProteinLevelAssayOrdering]
    ): [ProteinLevelAssay]
    RNASeqAssay(
        _id: Long
        _ids: [Long]
        filter: _RNASeqAssayFilter
        first: Int
        # id of RNASeqAssay
        id: ID
        # ids is list variant of id of RNASeqAssay
        ids: [ID]
        offset: Int
        orderBy: [_RNASeqAssayOrdering]
    ): [RNASeqAssay]
    RNASeqSignatureMarker(
        _id: Long
        _ids: [Long]
        filter: _RNASeqSignatureMarkerFilter
        first: Int
        # id of RNASeqSignatureMarker
        id: ID
        # ids is list variant of id of RNASeqSignatureMarker
        ids: [ID]
        offset: Int
        orderBy: [_RNASeqSignatureMarkerOrdering]
    ): [RNASeqSignatureMarker]
    Reference(
        _id: Long
        _ids: [Long]
        filter: _ReferenceFilter
        first: Int
        # id of Reference
        id: ID
        # ids is list variant of id of Reference
        ids: [ID]
        offset: Int
        orderBy: [_ReferenceOrdering]
        # shortReference of Reference
        shortReference: String
        # shortReferences is list variant of shortReference of Reference
        shortReferences: [String]
    ): [Reference]
    TCode(
        _id: Long
        _ids: [Long]
        filter: _TCodeFilter
        first: Int
        # id of TCode
        id: ID
        # ids is list variant of id of TCode
        ids: [ID]
        offset: Int
        orderBy: [_TCodeOrdering]
        # tcodeId of TCode
        tcodeId: String
        # tcodeIds is list variant of tcodeId of TCode
        tcodeIds: [String]
    ): [TCode]
    TMBMarker(
        _id: Long
        _ids: [Long]
        filter: _TMBMarkerFilter
        first: Int
        # id of TMBMarker
        id: ID
        # ids is list variant of id of TMBMarker
        ids: [ID]
        offset: Int
        orderBy: [_TMBMarkerOrdering]
    ): [TMBMarker]
    Target(
        _id: Long
        _ids: [Long]
        filter: _TargetFilter
        first: Int
        # id of Target
        id: ID
        # ids is list variant of id of Target
        ids: [ID]
        # name of Target
        name: String
        # names is list variant of name of Target
        names: [String]
        offset: Int
        orderBy: [_TargetOrdering]
    ): [Target]
    TherapeuticIntervention(
        _id: Long
        _ids: [Long]
        filter: _TherapeuticInterventionFilter
        first: Int
        # id of TherapeuticIntervention
        id: ID
        # ids is list variant of id of TherapeuticIntervention
        ids: [ID]
        offset: Int
        orderBy: [_TherapeuticInterventionOrdering]
    ): [TherapeuticIntervention]
    Therapy(
        _id: Long
        _ids: [Long]
        # conjunction of Therapy
        conjunction: OmniConjunction
        # conjunctions is list variant of conjunction of Therapy
        conjunctions: [OmniConjunction]
        filter: _TherapyFilter
        first: Int
        # id of Therapy
        id: ID
        # ids is list variant of id of Therapy
        ids: [ID]
        offset: Int
        orderBy: [_TherapyOrdering]
    ): [Therapy]
    TherapyComponent(
        _id: Long
        _ids: [Long]
        filter: _TherapyComponentFilter
        first: Int
        # id of TherapyComponent
        id: ID
        # ids is list variant of id of TherapyComponent
        ids: [ID]
        offset: Int
        orderBy: [_TherapyComponentOrdering]
    ): [TherapyComponent]
    UniprotEntry(
        _id: Long
        _ids: [Long]
        # accessionNumber of UniprotEntry
        accessionNumber: String
        # accessionNumbers is list variant of accessionNumber of UniprotEntry
        accessionNumbers: [String]
        filter: _UniprotEntryFilter
        first: Int
        # id of UniprotEntry
        id: ID
        # ids is list variant of id of UniprotEntry
        ids: [ID]
        # name of UniprotEntry
        name: String
        # names is list variant of name of UniprotEntry
        names: [String]
        offset: Int
        orderBy: [_UniprotEntryOrdering]
        # uniprotId of UniprotEntry
        uniprotId: String
        # uniprotIds is list variant of uniprotId of UniprotEntry
        uniprotIds: [String]
    ): [UniprotEntry]
    User(
        _id: Long
        _ids: [Long]
        filter: _UserFilter
        first: Int
        # id of User
        id: ID
        # ids is list variant of id of User
        ids: [ID]
        # isAdmin of User
        isAdmin: Boolean
        # isAdmins is list variant of isAdmin of User
        isAdmins: [Boolean]
        # isEditor of User
        isEditor: Boolean
        # isEditors is list variant of isEditor of User
        isEditors: [Boolean]
        # name of User
        name: String
        # names is list variant of name of User
        names: [String]
        offset: Int
        orderBy: [_UserOrdering]
        # password of User
        password: String
        # passwords is list variant of password of User
        passwords: [String]
    ): [User]
    VariantCNV(
        _id: Long
        _ids: [Long]
        filter: _VariantCNVFilter
        first: Int
        # id of VariantCNV
        id: ID
        # ids is list variant of id of VariantCNV
        ids: [ID]
        offset: Int
        orderBy: [_VariantCNVOrdering]
    ): [VariantCNV]
    VariantFusion(
        _id: Long
        _ids: [Long]
        filter: _VariantFusionFilter
        first: Int
        # id of VariantFusion
        id: ID
        # ids is list variant of id of VariantFusion
        ids: [ID]
        offset: Int
        orderBy: [_VariantFusionOrdering]
    ): [VariantFusion]
    VariantRegion(
        _id: Long
        _ids: [Long]
        filter: _VariantRegionFilter
        first: Int
        # id of VariantRegion
        id: ID
        # ids is list variant of id of VariantRegion
        ids: [ID]
        # indelType of VariantRegion
        indelType: IndelType
        # indelTypes is list variant of indelType of VariantRegion
        indelTypes: [IndelType]
        offset: Int
        orderBy: [_VariantRegionOrdering]
        # regionType of VariantRegion
        regionType: RegionType
        # regionTypes is list variant of regionType of VariantRegion
        regionTypes: [RegionType]
        # variantType of VariantRegion
        variantType: VariantType
        # variantTypes is list variant of variantType of VariantRegion
        variantTypes: [VariantType]
    ): [VariantRegion]
    VariantSNVIndel(
        _id: Long
        _ids: [Long]
        filter: _VariantSNVIndelFilter
        first: Int
        # id of VariantSNVIndel
        id: ID
        # ids is list variant of id of VariantSNVIndel
        ids: [ID]
        # indelType of VariantSNVIndel
        indelType: IndelType
        # indelTypes is list variant of indelType of VariantSNVIndel
        indelTypes: [IndelType]
        offset: Int
        orderBy: [_VariantSNVIndelOrdering]
        # variantType of VariantSNVIndel
        variantType: VariantType
        # variantTypes is list variant of variantType of VariantSNVIndel
        variantTypes: [VariantType]
    ): [VariantSNVIndel]
    XRef(
        _id: Long
        _ids: [Long]
        filter: _XRefFilter
        first: Int
        # id of XRef
        id: ID
        # ids is list variant of id of XRef
        ids: [ID]
        offset: Int
        orderBy: [_XRefOrdering]
        # source of XRef
        source: String
        # sourceId of XRef
        sourceId: String
        # sourceIds is list variant of sourceId of XRef
        sourceIds: [String]
        # sources is list variant of source of XRef
        sources: [String]
    ): [XRef]
}

# Reference-Node
interface Reference {
    # internal node id
    _id: Long
    # id of  Reference
    id: ID!
    # shortReference of  Reference
    shortReference: String!
    # Reference statementsReferenced EditableObject
    statementsReferenced(
        _id: Long
        _ids: [Long]
        # editDate of EditableObject
        editDate: String
        # editDates is list variant of editDate of EditableObject
        editDates: [String]
        # field of EditableObject
        field: String
        # fields is list variant of field of EditableObject
        fields: [String]
        filter: _EditableObjectFilter
        first: Int
        # id of EditableObject
        id: ID
        # ids is list variant of id of EditableObject
        ids: [ID]
        offset: Int
        orderBy: [_EditableObjectOrdering]
    ): [EditableObject!]!
}

# Enum for RegionType
enum RegionType {
    # Value for Codon
    Codon
    # Value for Exon
    Exon
    # Value for Gene
    Gene
}

# Enum for ResponseType
enum ResponseType {
    # Value for Conflicting
    Conflicting
    # Value for Diagnostic
    Diagnostic
    # Value for NoBenefit
    NoBenefit
    # Value for Prognistic
    Prognistic
    # Value for Resistant
    Resistant
    # Value for Sensitive
    Sensitive
    # Value for Unknown
    Unknown
}

# RNASeqAssay-Node
type RNASeqAssay implements ProteinLevelAssay {
    # internal node id
    _id: Long
    # RNASeqAssay comparator EditableAssayComparator
    comparator(
        # comparator of EditableAssayComparator
        comparator: AssayComparator
        # comparators is list variant of comparator of EditableAssayComparator
        comparators: [AssayComparator]
        # editDate of EditableAssayComparator
        editDate: String
        # editDates is list variant of editDate of EditableAssayComparator
        editDates: [String]
        # field of EditableAssayComparator
        field: String
        # fields is list variant of field of EditableAssayComparator
        fields: [String]
        filter: _EditableAssayComparatorFilter
        # id of EditableAssayComparator
        id: ID
        # ids is list variant of id of EditableAssayComparator
        ids: [ID]
        orderBy: [_EditableAssayComparatorOrdering]
    ): EditableAssayComparator!
    # id of  RNASeqAssay
    id: ID!
    # RNASeqAssay name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # RNASeqAssay proteinExpressionMarkers ProteinExpressionMarker
    proteinExpressionMarkers(
        _id: Long
        _ids: [Long]
        filter: _ProteinExpressionMarkerFilter
        first: Int
        # id of ProteinExpressionMarker
        id: ID
        # ids is list variant of id of ProteinExpressionMarker
        ids: [ID]
        offset: Int
        orderBy: [_ProteinExpressionMarkerOrdering]
    ): [ProteinExpressionMarker]!
    # RNASeqAssay resultMax EditableFloat
    resultMax(
        # editDate of EditableFloat
        editDate: String
        # editDates is list variant of editDate of EditableFloat
        editDates: [String]
        # field of EditableFloat
        field: String
        # fields is list variant of field of EditableFloat
        fields: [String]
        filter: _EditableFloatFilter
        # floatValue of EditableFloat
        floatValue: Float
        # floatValues is list variant of floatValue of EditableFloat
        floatValues: [Float]
        # id of EditableFloat
        id: ID
        # ids is list variant of id of EditableFloat
        ids: [ID]
        orderBy: [_EditableFloatOrdering]
    ): EditableFloat!
    # RNASeqAssay resultMin EditableFloat
    resultMin(
        # editDate of EditableFloat
        editDate: String
        # editDates is list variant of editDate of EditableFloat
        editDates: [String]
        # field of EditableFloat
        field: String
        # fields is list variant of field of EditableFloat
        fields: [String]
        filter: _EditableFloatFilter
        # floatValue of EditableFloat
        floatValue: Float
        # floatValues is list variant of floatValue of EditableFloat
        floatValues: [Float]
        # id of EditableFloat
        id: ID
        # ids is list variant of id of EditableFloat
        ids: [ID]
        orderBy: [_EditableFloatOrdering]
    ): EditableFloat!
    # RNASeqAssay resultType EditableRNASeqResultType
    resultType(
        # editDate of EditableRNASeqResultType
        editDate: String
        # editDates is list variant of editDate of EditableRNASeqResultType
        editDates: [String]
        # field of EditableRNASeqResultType
        field: String
        # fields is list variant of field of EditableRNASeqResultType
        fields: [String]
        filter: _EditableRNASeqResultTypeFilter
        # id of EditableRNASeqResultType
        id: ID
        # ids is list variant of id of EditableRNASeqResultType
        ids: [ID]
        orderBy: [_EditableRNASeqResultTypeOrdering]
        # resultType of EditableRNASeqResultType
        resultType: RNASeqResultType
        # resultTypes is list variant of resultType of EditableRNASeqResultType
        resultTypes: [RNASeqResultType]
    ): EditableRNASeqResultType!
}

# Enum for RNASeqResultType
enum RNASeqResultType {
    # Value for RankScore
    RankScore
    # Value for nRPM
    nRPM
}

# RNASeqSignatureMarker-Node
type RNASeqSignatureMarker implements MarkerComponent {
    # internal node id
    _id: Long
    # RNASeqSignatureMarker comparator EditableAssayComparator
    comparator(
        # comparator of EditableAssayComparator
        comparator: AssayComparator
        # comparators is list variant of comparator of EditableAssayComparator
        comparators: [AssayComparator]
        # editDate of EditableAssayComparator
        editDate: String
        # editDates is list variant of editDate of EditableAssayComparator
        editDates: [String]
        # field of EditableAssayComparator
        field: String
        # fields is list variant of field of EditableAssayComparator
        fields: [String]
        filter: _EditableAssayComparatorFilter
        # id of EditableAssayComparator
        id: ID
        # ids is list variant of id of EditableAssayComparator
        ids: [ID]
        orderBy: [_EditableAssayComparatorOrdering]
    ): EditableAssayComparator!
    # RNASeqSignatureMarker definition EditableStatement
    definition(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # id of  RNASeqSignatureMarker
    id: ID!
    # RNASeqSignatureMarker interpretations EditableTMBInterpretation
    interpretations(
        _id: Long
        _ids: [Long]
        # editDate of EditableTMBInterpretation
        editDate: String
        # editDates is list variant of editDate of EditableTMBInterpretation
        editDates: [String]
        # field of EditableTMBInterpretation
        field: String
        # fields is list variant of field of EditableTMBInterpretation
        fields: [String]
        filter: _EditableTMBInterpretationFilter
        first: Int
        # id of EditableTMBInterpretation
        id: ID
        # ids is list variant of id of EditableTMBInterpretation
        ids: [ID]
        offset: Int
        orderBy: [_EditableTMBInterpretationOrdering]
        # tmbInterpretation of EditableTMBInterpretation
        tmbInterpretation: TMBInterpretationType
        # tmbInterpretations is list variant of tmbInterpretation of EditableTMBInterpretation
        tmbInterpretations: [TMBInterpretationType]
    ): [EditableTMBInterpretation]
    # RNASeqSignatureMarker markerProfile MarkerProfile
    markerProfile(
        filter: _MarkerProfileFilter
        # id of MarkerProfile
        id: ID
        # ids is list variant of id of MarkerProfile
        ids: [ID]
        orderBy: [_MarkerProfileOrdering]
    ): MarkerProfile!
    # RNASeqSignatureMarker method EditableStatement
    method(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # RNASeqSignatureMarker name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # RNASeqSignatureMarker resultMax EditableFloat
    resultMax(
        # editDate of EditableFloat
        editDate: String
        # editDates is list variant of editDate of EditableFloat
        editDates: [String]
        # field of EditableFloat
        field: String
        # fields is list variant of field of EditableFloat
        fields: [String]
        filter: _EditableFloatFilter
        # floatValue of EditableFloat
        floatValue: Float
        # floatValues is list variant of floatValue of EditableFloat
        floatValues: [Float]
        # id of EditableFloat
        id: ID
        # ids is list variant of id of EditableFloat
        ids: [ID]
        orderBy: [_EditableFloatOrdering]
    ): EditableFloat!
    # RNASeqSignatureMarker resultMin EditableFloat
    resultMin(
        # editDate of EditableFloat
        editDate: String
        # editDates is list variant of editDate of EditableFloat
        editDates: [String]
        # field of EditableFloat
        field: String
        # fields is list variant of field of EditableFloat
        fields: [String]
        filter: _EditableFloatFilter
        # floatValue of EditableFloat
        floatValue: Float
        # floatValues is list variant of floatValue of EditableFloat
        floatValues: [Float]
        # id of EditableFloat
        id: ID
        # ids is list variant of id of EditableFloat
        ids: [ID]
        orderBy: [_EditableFloatOrdering]
    ): EditableFloat!
    # RNASeqSignatureMarker resultString EditableStatement
    resultString(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

# Enum for Strand
enum Strand {
    # Value for Forward
    Forward
    # Value for Reverse
    Reverse
}

# Target-Node
interface Target {
    # internal node id
    _id: Long
    # id of  Target
    id: ID!
    # name of  Target
    name: String!
}

# TCode-Node
type TCode {
    # internal node id
    _id: Long
    # TCode children TCode
    children(
        _id: Long
        _ids: [Long]
        filter: _TCodeFilter
        first: Int
        # id of TCode
        id: ID
        # ids is list variant of id of TCode
        ids: [ID]
        offset: Int
        orderBy: [_TCodeOrdering]
        # tcodeId of TCode
        tcodeId: String
        # tcodeIds is list variant of tcodeId of TCode
        tcodeIds: [String]
    ): [TCode]
    # id of  TCode
    id: ID!
    # TCode parents TCode
    parents(
        _id: Long
        _ids: [Long]
        filter: _TCodeFilter
        first: Int
        # id of TCode
        id: ID
        # ids is list variant of id of TCode
        ids: [ID]
        offset: Int
        orderBy: [_TCodeOrdering]
        # tcodeId of TCode
        tcodeId: String
        # tcodeIds is list variant of tcodeId of TCode
        tcodeIds: [String]
    ): [TCode]
    # tcodeId of  TCode
    tcodeId: String!
    # TCode tissuePath EditableStatement
    tissuePath(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

# TherapeuticIntervention-Node
type TherapeuticIntervention {
    # internal node id
    _id: Long
    # TherapeuticIntervention concurrentWith TherapeuticIntervention
    concurrentWith(
        _id: Long
        _ids: [Long]
        filter: _TherapeuticInterventionFilter
        first: Int
        # id of TherapeuticIntervention
        id: ID
        # ids is list variant of id of TherapeuticIntervention
        ids: [ID]
        offset: Int
        orderBy: [_TherapeuticInterventionOrdering]
    ): [TherapeuticIntervention]!
    # TherapeuticIntervention definition EditableStatement
    definition(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # TherapeuticIntervention evidenceAssociations EvidenceAssociation
    evidenceAssociations(
        _id: Long
        _ids: [Long]
        filter: _EvidenceAssociationFilter
        first: Int
        # id of EvidenceAssociation
        id: ID
        # ids is list variant of id of EvidenceAssociation
        ids: [ID]
        # name of EvidenceAssociation
        name: String
        # names is list variant of name of EvidenceAssociation
        names: [String]
        offset: Int
        orderBy: [_EvidenceAssociationOrdering]
    ): [EvidenceAssociation]
    # TherapeuticIntervention followedBy TherapeuticIntervention
    followedBy(
        _id: Long
        _ids: [Long]
        filter: _TherapeuticInterventionFilter
        first: Int
        # id of TherapeuticIntervention
        id: ID
        # ids is list variant of id of TherapeuticIntervention
        ids: [ID]
        offset: Int
        orderBy: [_TherapeuticInterventionOrdering]
    ): [TherapeuticIntervention]!
    # id of  TherapeuticIntervention
    id: ID!
    # TherapeuticIntervention name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # TherapeuticIntervention precededBy TherapeuticIntervention
    precededBy(
        _id: Long
        _ids: [Long]
        filter: _TherapeuticInterventionFilter
        first: Int
        # id of TherapeuticIntervention
        id: ID
        # ids is list variant of id of TherapeuticIntervention
        ids: [ID]
        offset: Int
        orderBy: [_TherapeuticInterventionOrdering]
    ): [TherapeuticIntervention]!
    # TherapeuticIntervention therapy Therapy
    therapy(
        # conjunction of Therapy
        conjunction: OmniConjunction
        # conjunctions is list variant of conjunction of Therapy
        conjunctions: [OmniConjunction]
        filter: _TherapyFilter
        # id of Therapy
        id: ID
        # ids is list variant of id of Therapy
        ids: [ID]
        orderBy: [_TherapyOrdering]
    ): Therapy!
}

# Therapy-Node
type Therapy implements TherapyComponent {
    # internal node id
    _id: Long
    # Therapy componentOf Therapy
    componentOf(
        _id: Long
        _ids: [Long]
        # conjunction of Therapy
        conjunction: OmniConjunction
        # conjunctions is list variant of conjunction of Therapy
        conjunctions: [OmniConjunction]
        filter: _TherapyFilter
        first: Int
        # id of Therapy
        id: ID
        # ids is list variant of id of Therapy
        ids: [ID]
        offset: Int
        orderBy: [_TherapyOrdering]
    ): [Therapy]!
    # Therapy components TherapyComponent
    components(
        _id: Long
        _ids: [Long]
        filter: _TherapyComponentFilter
        first: Int
        # id of TherapyComponent
        id: ID
        # ids is list variant of id of TherapyComponent
        ids: [ID]
        offset: Int
        orderBy: [_TherapyComponentOrdering]
    ): [TherapyComponent]!
    # conjunction of  Therapy
    conjunction: OmniConjunction!
    # Therapy definition EditableStatement
    definition(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # id of  Therapy
    id: ID!
    # Therapy name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

# TherapyComponent-Node
interface TherapyComponent {
    # internal node id
    _id: Long
    # TherapyComponent componentOf Therapy
    componentOf(
        _id: Long
        _ids: [Long]
        # conjunction of Therapy
        conjunction: OmniConjunction
        # conjunctions is list variant of conjunction of Therapy
        conjunctions: [OmniConjunction]
        filter: _TherapyFilter
        first: Int
        # id of Therapy
        id: ID
        # ids is list variant of id of Therapy
        ids: [ID]
        offset: Int
        orderBy: [_TherapyOrdering]
    ): [Therapy]!
    # id of  TherapyComponent
    id: ID!
    # TherapyComponent name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

# Enum for TMBInterpretationType
enum TMBInterpretationType {
    # Value for High
    High
    # Value for Intermediate
    Intermediate
    # Value for Low
    Low
}

# TMBMarker-Node
type TMBMarker implements MarkerComponent {
    # internal node id
    _id: Long
    # TMBMarker comparator EditableAssayComparator
    comparator(
        # comparator of EditableAssayComparator
        comparator: AssayComparator
        # comparators is list variant of comparator of EditableAssayComparator
        comparators: [AssayComparator]
        # editDate of EditableAssayComparator
        editDate: String
        # editDates is list variant of editDate of EditableAssayComparator
        editDates: [String]
        # field of EditableAssayComparator
        field: String
        # fields is list variant of field of EditableAssayComparator
        fields: [String]
        filter: _EditableAssayComparatorFilter
        # id of EditableAssayComparator
        id: ID
        # ids is list variant of id of EditableAssayComparator
        ids: [ID]
        orderBy: [_EditableAssayComparatorOrdering]
    ): EditableAssayComparator!
    # id of  TMBMarker
    id: ID!
    # TMBMarker interpretations EditableTMBInterpretation
    interpretations(
        _id: Long
        _ids: [Long]
        # editDate of EditableTMBInterpretation
        editDate: String
        # editDates is list variant of editDate of EditableTMBInterpretation
        editDates: [String]
        # field of EditableTMBInterpretation
        field: String
        # fields is list variant of field of EditableTMBInterpretation
        fields: [String]
        filter: _EditableTMBInterpretationFilter
        first: Int
        # id of EditableTMBInterpretation
        id: ID
        # ids is list variant of id of EditableTMBInterpretation
        ids: [ID]
        offset: Int
        orderBy: [_EditableTMBInterpretationOrdering]
        # tmbInterpretation of EditableTMBInterpretation
        tmbInterpretation: TMBInterpretationType
        # tmbInterpretations is list variant of tmbInterpretation of EditableTMBInterpretation
        tmbInterpretations: [TMBInterpretationType]
    ): [EditableTMBInterpretation]!
    # TMBMarker method EditableStatement
    method(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # TMBMarker name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # TMBMarker resultMax EditableFloat
    resultMax(
        # editDate of EditableFloat
        editDate: String
        # editDates is list variant of editDate of EditableFloat
        editDates: [String]
        # field of EditableFloat
        field: String
        # fields is list variant of field of EditableFloat
        fields: [String]
        filter: _EditableFloatFilter
        # floatValue of EditableFloat
        floatValue: Float
        # floatValues is list variant of floatValue of EditableFloat
        floatValues: [Float]
        # id of EditableFloat
        id: ID
        # ids is list variant of id of EditableFloat
        ids: [ID]
        orderBy: [_EditableFloatOrdering]
    ): EditableFloat!
    # TMBMarker resultMin EditableFloat
    resultMin(
        # editDate of EditableFloat
        editDate: String
        # editDates is list variant of editDate of EditableFloat
        editDates: [String]
        # field of EditableFloat
        field: String
        # fields is list variant of field of EditableFloat
        fields: [String]
        filter: _EditableFloatFilter
        # floatValue of EditableFloat
        floatValue: Float
        # floatValues is list variant of floatValue of EditableFloat
        floatValues: [Float]
        # id of EditableFloat
        id: ID
        # ids is list variant of id of EditableFloat
        ids: [ID]
        orderBy: [_EditableFloatOrdering]
    ): EditableFloat!
    # TMBMarker resultString EditableStatement
    resultString(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # TMBMarker resultUnits EditableStatement
    resultUnits(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
}

# UniprotEntry-Node
type UniprotEntry {
    # internal node id
    _id: Long
    # accessionNumber of  UniprotEntry
    accessionNumber: String!
    # UniprotEntry function EditableStatement
    function(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # UniprotEntry gene MyGeneInfoGene
    gene(
        # chromosome of MyGeneInfoGene
        chromosome: String
        # chromosomes is list variant of chromosome of MyGeneInfoGene
        chromosomes: [String]
        # end of MyGeneInfoGene
        end: Int
        # ends is list variant of end of MyGeneInfoGene
        ends: [Int]
        # entrezId of MyGeneInfoGene
        entrezId: String
        # entrezIds is list variant of entrezId of MyGeneInfoGene
        entrezIds: [String]
        filter: _MyGeneInfoGeneFilter
        # id of MyGeneInfoGene
        id: ID
        # ids is list variant of id of MyGeneInfoGene
        ids: [ID]
        # name of MyGeneInfoGene
        name: String
        # names is list variant of name of MyGeneInfoGene
        names: [String]
        orderBy: [_MyGeneInfoGeneOrdering]
        # start of MyGeneInfoGene
        start: Int
        # starts is list variant of start of MyGeneInfoGene
        starts: [Int]
        # strand of MyGeneInfoGene
        strand: Strand
        # strands is list variant of strand of MyGeneInfoGene
        strands: [Strand]
    ): MyGeneInfoGene!
    # id of  UniprotEntry
    id: ID!
    # name of  UniprotEntry
    name: String!
    # uniprotId of  UniprotEntry
    uniprotId: String!
}

# User-Node
type User {
    # internal node id
    _id: Long
    # User editedStatements EditableObject
    editedStatements(
        _id: Long
        _ids: [Long]
        # editDate of EditableObject
        editDate: String
        # editDates is list variant of editDate of EditableObject
        editDates: [String]
        # field of EditableObject
        field: String
        # fields is list variant of field of EditableObject
        fields: [String]
        filter: _EditableObjectFilter
        first: Int
        # id of EditableObject
        id: ID
        # ids is list variant of id of EditableObject
        ids: [ID]
        offset: Int
        orderBy: [_EditableObjectOrdering]
    ): [EditableObject]!
    # id of  User
    id: ID!
    # isAdmin of  User
    isAdmin: Boolean!
    # isEditor of  User
    isEditor: Boolean!
    # name of  User
    name: String!
    # password of  User
    password: String!
}

# VariantCNV-Node
type VariantCNV implements GenomicVariant {
    # internal node id
    _id: Long
    # VariantCNV clinVarVariant ClinVarVariant
    clinVarVariant(
        # cDot of ClinVarVariant
        cDot: String
        # cDots is list variant of cDot of ClinVarVariant
        cDots: [String]
        filter: _ClinVarVariantFilter
        # gene of ClinVarVariant
        gene: String
        # genes is list variant of gene of ClinVarVariant
        genes: [String]
        # id of ClinVarVariant
        id: ID
        # ids is list variant of id of ClinVarVariant
        ids: [ID]
        orderBy: [_ClinVarVariantOrdering]
        # pDot of ClinVarVariant
        pDot: String
        # pDots is list variant of pDot of ClinVarVariant
        pDots: [String]
        # variantId of ClinVarVariant
        variantId: String
        # variantIds is list variant of variantId of ClinVarVariant
        variantIds: [String]
    ): ClinVarVariant
    # VariantCNV copyChange EditableCopyChange
    copyChange(
        # cnvType of EditableCopyChange
        cnvType: CNVType
        # cnvTypes is list variant of cnvType of EditableCopyChange
        cnvTypes: [CNVType]
        # editDate of EditableCopyChange
        editDate: String
        # editDates is list variant of editDate of EditableCopyChange
        editDates: [String]
        # field of EditableCopyChange
        field: String
        # fields is list variant of field of EditableCopyChange
        fields: [String]
        filter: _EditableCopyChangeFilter
        # id of EditableCopyChange
        id: ID
        # ids is list variant of id of EditableCopyChange
        ids: [ID]
        orderBy: [_EditableCopyChangeOrdering]
    ): EditableCopyChange!
    # VariantCNV description EditableStatement
    description(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # VariantCNV gene OmniGene
    gene(
        filter: _OmniGeneFilter
        # id of OmniGene
        id: ID
        # ids is list variant of id of OmniGene
        ids: [ID]
        # name of OmniGene
        name: String
        # names is list variant of name of OmniGene
        names: [String]
        # namess is list variant of names of OmniGene
        namess: [String]
        orderBy: [_OmniGeneOrdering]
    ): OmniGene!
    # VariantCNV goVariant GOVariant
    goVariant(
        filter: _GOVariantFilter
        # gene of GOVariant
        gene: String
        # genes is list variant of gene of GOVariant
        genes: [String]
        # goId of GOVariant
        goId: String
        # goIds is list variant of goId of GOVariant
        goIds: [String]
        # id of GOVariant
        id: ID
        # ids is list variant of id of GOVariant
        ids: [ID]
        # mutationType of GOVariant
        mutationType: String
        # mutationTypes is list variant of mutationType of GOVariant
        mutationTypes: [String]
        orderBy: [_GOVariantOrdering]
    ): GOVariant
    # VariantCNV hotSpotVariant HotSpotVariant
    hotSpotVariant(
        # begin of HotSpotVariant
        begin: String
        # begins is list variant of begin of HotSpotVariant
        begins: [String]
        # end of HotSpotVariant
        end: String
        # ends is list variant of end of HotSpotVariant
        ends: [String]
        filter: _HotSpotVariantFilter
        # gene of HotSpotVariant
        gene: String
        # genes is list variant of gene of HotSpotVariant
        genes: [String]
        # id of HotSpotVariant
        id: ID
        # ids is list variant of id of HotSpotVariant
        ids: [ID]
        # name of HotSpotVariant
        name: String
        # names is list variant of name of HotSpotVariant
        names: [String]
        orderBy: [_HotSpotVariantOrdering]
        # position of HotSpotVariant
        position: Int
        # positions is list variant of position of HotSpotVariant
        positions: [Int]
        # referenceAminoAcid of HotSpotVariant
        referenceAminoAcid: String
        # referenceAminoAcids is list variant of referenceAminoAcid of HotSpotVariant
        referenceAminoAcids: [String]
        # variantAminoAcid of HotSpotVariant
        variantAminoAcid: String
        # variantAminoAcids is list variant of variantAminoAcid of HotSpotVariant
        variantAminoAcids: [String]
    ): HotSpotVariant
    # id of  VariantCNV
    id: ID!
    # VariantCNV jaxVariant JaxVariant
    jaxVariant(
        # cDot of JaxVariant
        cDot: String
        # cDots is list variant of cDot of JaxVariant
        cDots: [String]
        filter: _JaxVariantFilter
        # gDot of JaxVariant
        gDot: String
        # gDots is list variant of gDot of JaxVariant
        gDots: [String]
        # id of JaxVariant
        id: ID
        # ids is list variant of id of JaxVariant
        ids: [ID]
        # jaxId of JaxVariant
        jaxId: String
        # jaxIds is list variant of jaxId of JaxVariant
        jaxIds: [String]
        # name of JaxVariant
        name: String
        # names is list variant of name of JaxVariant
        names: [String]
        orderBy: [_JaxVariantOrdering]
        # pDot of JaxVariant
        pDot: String
        # pDots is list variant of pDot of JaxVariant
        pDots: [String]
        # variantType of JaxVariant
        variantType: String
        # variantTypes is list variant of variantType of JaxVariant
        variantTypes: [String]
    ): JaxVariant
    # VariantCNV name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # VariantCNV nonCanonicalTranscript EditableStatement
    nonCanonicalTranscript(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement
}

# VariantFusion-Node
type VariantFusion implements GenomicVariant {
    # internal node id
    _id: Long
    # VariantFusion clinVarVariant ClinVarVariant
    clinVarVariant(
        # cDot of ClinVarVariant
        cDot: String
        # cDots is list variant of cDot of ClinVarVariant
        cDots: [String]
        filter: _ClinVarVariantFilter
        # gene of ClinVarVariant
        gene: String
        # genes is list variant of gene of ClinVarVariant
        genes: [String]
        # id of ClinVarVariant
        id: ID
        # ids is list variant of id of ClinVarVariant
        ids: [ID]
        orderBy: [_ClinVarVariantOrdering]
        # pDot of ClinVarVariant
        pDot: String
        # pDots is list variant of pDot of ClinVarVariant
        pDots: [String]
        # variantId of ClinVarVariant
        variantId: String
        # variantIds is list variant of variantId of ClinVarVariant
        variantIds: [String]
    ): ClinVarVariant
    # VariantFusion copyChange EditableCopyChange
    copyChange(
        # cnvType of EditableCopyChange
        cnvType: CNVType
        # cnvTypes is list variant of cnvType of EditableCopyChange
        cnvTypes: [CNVType]
        # editDate of EditableCopyChange
        editDate: String
        # editDates is list variant of editDate of EditableCopyChange
        editDates: [String]
        # field of EditableCopyChange
        field: String
        # fields is list variant of field of EditableCopyChange
        fields: [String]
        filter: _EditableCopyChangeFilter
        # id of EditableCopyChange
        id: ID
        # ids is list variant of id of EditableCopyChange
        ids: [ID]
        orderBy: [_EditableCopyChangeOrdering]
    ): EditableCopyChange!
    # VariantFusion description EditableStatement
    description(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # VariantFusion exon3Prime EditableInt
    exon3Prime(
        # editDate of EditableInt
        editDate: String
        # editDates is list variant of editDate of EditableInt
        editDates: [String]
        # field of EditableInt
        field: String
        # fields is list variant of field of EditableInt
        fields: [String]
        filter: _EditableIntFilter
        # id of EditableInt
        id: ID
        # ids is list variant of id of EditableInt
        ids: [ID]
        # intValue of EditableInt
        intValue: Int
        # intValues is list variant of intValue of EditableInt
        intValues: [Int]
        orderBy: [_EditableIntOrdering]
    ): EditableInt!
    # VariantFusion exon5Prime EditableInt
    exon5Prime(
        # editDate of EditableInt
        editDate: String
        # editDates is list variant of editDate of EditableInt
        editDates: [String]
        # field of EditableInt
        field: String
        # fields is list variant of field of EditableInt
        fields: [String]
        filter: _EditableIntFilter
        # id of EditableInt
        id: ID
        # ids is list variant of id of EditableInt
        ids: [ID]
        # intValue of EditableInt
        intValue: Int
        # intValues is list variant of intValue of EditableInt
        intValues: [Int]
        orderBy: [_EditableIntOrdering]
    ): EditableInt!
    # targetGene is for general fusion like NTRK fusion
    gene(
        filter: _OmniGeneFilter
        # id of OmniGene
        id: ID
        # ids is list variant of id of OmniGene
        ids: [ID]
        # name of OmniGene
        name: String
        # names is list variant of name of OmniGene
        names: [String]
        # namess is list variant of names of OmniGene
        namess: [String]
        orderBy: [_OmniGeneOrdering]
    ): OmniGene!
    # VariantFusion gene3Prime EditableOmniGeneReference
    gene3Prime(
        # editDate of EditableOmniGeneReference
        editDate: String
        # editDates is list variant of editDate of EditableOmniGeneReference
        editDates: [String]
        # field of EditableOmniGeneReference
        field: String
        # fields is list variant of field of EditableOmniGeneReference
        fields: [String]
        filter: _EditableOmniGeneReferenceFilter
        # id of EditableOmniGeneReference
        id: ID
        # ids is list variant of id of EditableOmniGeneReference
        ids: [ID]
        orderBy: [_EditableOmniGeneReferenceOrdering]
    ): EditableOmniGeneReference!
    # targetGene: OmniGene @relation(name: "CODED_BY", direction: "OUT")
    # 5prime/3prime are for specific fusions like FGFR3 - TACC3 fusion
    gene5Prime(
        # editDate of EditableOmniGeneReference
        editDate: String
        # editDates is list variant of editDate of EditableOmniGeneReference
        editDates: [String]
        # field of EditableOmniGeneReference
        field: String
        # fields is list variant of field of EditableOmniGeneReference
        fields: [String]
        filter: _EditableOmniGeneReferenceFilter
        # id of EditableOmniGeneReference
        id: ID
        # ids is list variant of id of EditableOmniGeneReference
        ids: [ID]
        orderBy: [_EditableOmniGeneReferenceOrdering]
    ): EditableOmniGeneReference!
    # VariantFusion goVariant GOVariant
    goVariant(
        filter: _GOVariantFilter
        # gene of GOVariant
        gene: String
        # genes is list variant of gene of GOVariant
        genes: [String]
        # goId of GOVariant
        goId: String
        # goIds is list variant of goId of GOVariant
        goIds: [String]
        # id of GOVariant
        id: ID
        # ids is list variant of id of GOVariant
        ids: [ID]
        # mutationType of GOVariant
        mutationType: String
        # mutationTypes is list variant of mutationType of GOVariant
        mutationTypes: [String]
        orderBy: [_GOVariantOrdering]
    ): GOVariant
    # VariantFusion hotSpotVariant HotSpotVariant
    hotSpotVariant(
        # begin of HotSpotVariant
        begin: String
        # begins is list variant of begin of HotSpotVariant
        begins: [String]
        # end of HotSpotVariant
        end: String
        # ends is list variant of end of HotSpotVariant
        ends: [String]
        filter: _HotSpotVariantFilter
        # gene of HotSpotVariant
        gene: String
        # genes is list variant of gene of HotSpotVariant
        genes: [String]
        # id of HotSpotVariant
        id: ID
        # ids is list variant of id of HotSpotVariant
        ids: [ID]
        # name of HotSpotVariant
        name: String
        # names is list variant of name of HotSpotVariant
        names: [String]
        orderBy: [_HotSpotVariantOrdering]
        # position of HotSpotVariant
        position: Int
        # positions is list variant of position of HotSpotVariant
        positions: [Int]
        # referenceAminoAcid of HotSpotVariant
        referenceAminoAcid: String
        # referenceAminoAcids is list variant of referenceAminoAcid of HotSpotVariant
        referenceAminoAcids: [String]
        # variantAminoAcid of HotSpotVariant
        variantAminoAcid: String
        # variantAminoAcids is list variant of variantAminoAcid of HotSpotVariant
        variantAminoAcids: [String]
    ): HotSpotVariant
    # id of  VariantFusion
    id: ID!
    # VariantFusion jaxVariant JaxVariant
    jaxVariant(
        # cDot of JaxVariant
        cDot: String
        # cDots is list variant of cDot of JaxVariant
        cDots: [String]
        filter: _JaxVariantFilter
        # gDot of JaxVariant
        gDot: String
        # gDots is list variant of gDot of JaxVariant
        gDots: [String]
        # id of JaxVariant
        id: ID
        # ids is list variant of id of JaxVariant
        ids: [ID]
        # jaxId of JaxVariant
        jaxId: String
        # jaxIds is list variant of jaxId of JaxVariant
        jaxIds: [String]
        # name of JaxVariant
        name: String
        # names is list variant of name of JaxVariant
        names: [String]
        orderBy: [_JaxVariantOrdering]
        # pDot of JaxVariant
        pDot: String
        # pDots is list variant of pDot of JaxVariant
        pDots: [String]
        # variantType of JaxVariant
        variantType: String
        # variantTypes is list variant of variantType of JaxVariant
        variantTypes: [String]
    ): JaxVariant
    # VariantFusion name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # VariantFusion nonCanonicalTranscript EditableStatement
    nonCanonicalTranscript(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement
}

# Enum for VariantProteinEffect
enum VariantProteinEffect {
    # Value for GainOfFunction
    GainOfFunction
    # Value for GainOfFunctionPredicted
    GainOfFunctionPredicted
    # Value for LossOfFunction
    LossOfFunction
    # Value for LossOfFunctionPredicted
    LossOfFunctionPredicted
    # Value for NoEffect
    NoEffect
    # Value for Unknown
    Unknown
}

# a region would be general variant terms where a specific cDot/pDot/gDot would
# not apply  examples would be BRAF codon 600 mutation, EGFR exon 19 deletion,
# BRCA1 mutation  null values for fields below would be considered "wild-cards"
# If we need a protein domain region, we would probably create a separate node
# May need to consider how to define concept of "Activating mutation"
type VariantRegion implements GenomicVariant {
    # internal node id
    _id: Long
    # VariantRegion clinVarVariant ClinVarVariant
    clinVarVariant(
        # cDot of ClinVarVariant
        cDot: String
        # cDots is list variant of cDot of ClinVarVariant
        cDots: [String]
        filter: _ClinVarVariantFilter
        # gene of ClinVarVariant
        gene: String
        # genes is list variant of gene of ClinVarVariant
        genes: [String]
        # id of ClinVarVariant
        id: ID
        # ids is list variant of id of ClinVarVariant
        ids: [ID]
        orderBy: [_ClinVarVariantOrdering]
        # pDot of ClinVarVariant
        pDot: String
        # pDots is list variant of pDot of ClinVarVariant
        pDots: [String]
        # variantId of ClinVarVariant
        variantId: String
        # variantIds is list variant of variantId of ClinVarVariant
        variantIds: [String]
    ): ClinVarVariant
    # VariantRegion description EditableStatement
    description(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # VariantRegion gene OmniGene
    gene(
        filter: _OmniGeneFilter
        # id of OmniGene
        id: ID
        # ids is list variant of id of OmniGene
        ids: [ID]
        # name of OmniGene
        name: String
        # names is list variant of name of OmniGene
        names: [String]
        # namess is list variant of names of OmniGene
        namess: [String]
        orderBy: [_OmniGeneOrdering]
    ): OmniGene!
    # VariantRegion goVariant GOVariant
    goVariant(
        filter: _GOVariantFilter
        # gene of GOVariant
        gene: String
        # genes is list variant of gene of GOVariant
        genes: [String]
        # goId of GOVariant
        goId: String
        # goIds is list variant of goId of GOVariant
        goIds: [String]
        # id of GOVariant
        id: ID
        # ids is list variant of id of GOVariant
        ids: [ID]
        # mutationType of GOVariant
        mutationType: String
        # mutationTypes is list variant of mutationType of GOVariant
        mutationTypes: [String]
        orderBy: [_GOVariantOrdering]
    ): GOVariant
    # VariantRegion hotSpotVariant HotSpotVariant
    hotSpotVariant(
        # begin of HotSpotVariant
        begin: String
        # begins is list variant of begin of HotSpotVariant
        begins: [String]
        # end of HotSpotVariant
        end: String
        # ends is list variant of end of HotSpotVariant
        ends: [String]
        filter: _HotSpotVariantFilter
        # gene of HotSpotVariant
        gene: String
        # genes is list variant of gene of HotSpotVariant
        genes: [String]
        # id of HotSpotVariant
        id: ID
        # ids is list variant of id of HotSpotVariant
        ids: [ID]
        # name of HotSpotVariant
        name: String
        # names is list variant of name of HotSpotVariant
        names: [String]
        orderBy: [_HotSpotVariantOrdering]
        # position of HotSpotVariant
        position: Int
        # positions is list variant of position of HotSpotVariant
        positions: [Int]
        # referenceAminoAcid of HotSpotVariant
        referenceAminoAcid: String
        # referenceAminoAcids is list variant of referenceAminoAcid of HotSpotVariant
        referenceAminoAcids: [String]
        # variantAminoAcid of HotSpotVariant
        variantAminoAcid: String
        # variantAminoAcids is list variant of variantAminoAcid of HotSpotVariant
        variantAminoAcids: [String]
    ): HotSpotVariant
    # id of  VariantRegion
    id: ID!
    # indelType of  VariantRegion
    indelType: IndelType!
    # VariantRegion isDeleterious EditableBoolean
    isDeleterious(
        # booleanValue of EditableBoolean
        booleanValue: ExtendedBoolean
        # booleanValues is list variant of booleanValue of EditableBoolean
        booleanValues: [ExtendedBoolean]
        # editDate of EditableBoolean
        editDate: String
        # editDates is list variant of editDate of EditableBoolean
        editDates: [String]
        # field of EditableBoolean
        field: String
        # fields is list variant of field of EditableBoolean
        fields: [String]
        filter: _EditableBooleanFilter
        # id of EditableBoolean
        id: ID
        # ids is list variant of id of EditableBoolean
        ids: [ID]
        orderBy: [_EditableBooleanOrdering]
    ): EditableBoolean!
    # VariantRegion isFrameshift EditableBoolean
    isFrameshift(
        # booleanValue of EditableBoolean
        booleanValue: ExtendedBoolean
        # booleanValues is list variant of booleanValue of EditableBoolean
        booleanValues: [ExtendedBoolean]
        # editDate of EditableBoolean
        editDate: String
        # editDates is list variant of editDate of EditableBoolean
        editDates: [String]
        # field of EditableBoolean
        field: String
        # fields is list variant of field of EditableBoolean
        fields: [String]
        filter: _EditableBooleanFilter
        # id of EditableBoolean
        id: ID
        # ids is list variant of id of EditableBoolean
        ids: [ID]
        orderBy: [_EditableBooleanOrdering]
    ): EditableBoolean!
    # VariantRegion isTruncating EditableBoolean
    isTruncating(
        # booleanValue of EditableBoolean
        booleanValue: ExtendedBoolean
        # booleanValues is list variant of booleanValue of EditableBoolean
        booleanValues: [ExtendedBoolean]
        # editDate of EditableBoolean
        editDate: String
        # editDates is list variant of editDate of EditableBoolean
        editDates: [String]
        # field of EditableBoolean
        field: String
        # fields is list variant of field of EditableBoolean
        fields: [String]
        filter: _EditableBooleanFilter
        # id of EditableBoolean
        id: ID
        # ids is list variant of id of EditableBoolean
        ids: [ID]
        orderBy: [_EditableBooleanOrdering]
    ): EditableBoolean!
    # VariantRegion jaxVariant JaxVariant
    jaxVariant(
        # cDot of JaxVariant
        cDot: String
        # cDots is list variant of cDot of JaxVariant
        cDots: [String]
        filter: _JaxVariantFilter
        # gDot of JaxVariant
        gDot: String
        # gDots is list variant of gDot of JaxVariant
        gDots: [String]
        # id of JaxVariant
        id: ID
        # ids is list variant of id of JaxVariant
        ids: [ID]
        # jaxId of JaxVariant
        jaxId: String
        # jaxIds is list variant of jaxId of JaxVariant
        jaxIds: [String]
        # name of JaxVariant
        name: String
        # names is list variant of name of JaxVariant
        names: [String]
        orderBy: [_JaxVariantOrdering]
        # pDot of JaxVariant
        pDot: String
        # pDots is list variant of pDot of JaxVariant
        pDots: [String]
        # variantType of JaxVariant
        variantType: String
        # variantTypes is list variant of variantType of JaxVariant
        variantTypes: [String]
    ): JaxVariant
    # VariantRegion name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # VariantRegion nonCanonicalTranscript EditableStatement
    nonCanonicalTranscript(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement
    # not sure we would need transcript info for this type of object
    proteinEffect(
        # editDate of EditableProteinEffect
        editDate: String
        # editDates is list variant of editDate of EditableProteinEffect
        editDates: [String]
        # field of EditableProteinEffect
        field: String
        # fields is list variant of field of EditableProteinEffect
        fields: [String]
        filter: _EditableProteinEffectFilter
        # id of EditableProteinEffect
        id: ID
        # ids is list variant of id of EditableProteinEffect
        ids: [ID]
        orderBy: [_EditableProteinEffectOrdering]
        # proteinEffect of EditableProteinEffect
        proteinEffect: VariantProteinEffect
        # proteinEffects is list variant of proteinEffect of EditableProteinEffect
        proteinEffects: [VariantProteinEffect]
    ): EditableProteinEffect!
    # regionType of  VariantRegion
    regionType: RegionType!
    # VariantRegion regionValue EditableInt
    regionValue(
        # editDate of EditableInt
        editDate: String
        # editDates is list variant of editDate of EditableInt
        editDates: [String]
        # field of EditableInt
        field: String
        # fields is list variant of field of EditableInt
        fields: [String]
        filter: _EditableIntFilter
        # id of EditableInt
        id: ID
        # ids is list variant of id of EditableInt
        ids: [ID]
        # intValue of EditableInt
        intValue: Int
        # intValues is list variant of intValue of EditableInt
        intValues: [Int]
        orderBy: [_EditableIntOrdering]
    ): EditableInt!
    # variantType of  VariantRegion
    variantType: VariantType!
}

# nonCanonicalTranscript: String is empty unless a non-canonical transcript defines this variant
type VariantSNVIndel implements GenomicVariant {
    # internal node id
    _id: Long
    # VariantSNVIndel cDot EditableStatement
    cDot(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # VariantSNVIndel clinVarVariant ClinVarVariant
    clinVarVariant(
        # cDot of ClinVarVariant
        cDot: String
        # cDots is list variant of cDot of ClinVarVariant
        cDots: [String]
        filter: _ClinVarVariantFilter
        # gene of ClinVarVariant
        gene: String
        # genes is list variant of gene of ClinVarVariant
        genes: [String]
        # id of ClinVarVariant
        id: ID
        # ids is list variant of id of ClinVarVariant
        ids: [ID]
        orderBy: [_ClinVarVariantOrdering]
        # pDot of ClinVarVariant
        pDot: String
        # pDots is list variant of pDot of ClinVarVariant
        pDots: [String]
        # variantId of ClinVarVariant
        variantId: String
        # variantIds is list variant of variantId of ClinVarVariant
        variantIds: [String]
    ): ClinVarVariant
    # VariantSNVIndel description EditableStatement
    description(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # VariantSNVIndel exon EditableStatement
    exon(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # VariantSNVIndel gDot EditableStatement
    gDot(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # VariantSNVIndel gene OmniGene
    gene(
        filter: _OmniGeneFilter
        # id of OmniGene
        id: ID
        # ids is list variant of id of OmniGene
        ids: [ID]
        # name of OmniGene
        name: String
        # names is list variant of name of OmniGene
        names: [String]
        # namess is list variant of names of OmniGene
        namess: [String]
        orderBy: [_OmniGeneOrdering]
    ): OmniGene!
    # VariantSNVIndel goVariant GOVariant
    goVariant(
        filter: _GOVariantFilter
        # gene of GOVariant
        gene: String
        # genes is list variant of gene of GOVariant
        genes: [String]
        # goId of GOVariant
        goId: String
        # goIds is list variant of goId of GOVariant
        goIds: [String]
        # id of GOVariant
        id: ID
        # ids is list variant of id of GOVariant
        ids: [ID]
        # mutationType of GOVariant
        mutationType: String
        # mutationTypes is list variant of mutationType of GOVariant
        mutationTypes: [String]
        orderBy: [_GOVariantOrdering]
    ): GOVariant
    # VariantSNVIndel hotSpotVariant HotSpotVariant
    hotSpotVariant(
        # begin of HotSpotVariant
        begin: String
        # begins is list variant of begin of HotSpotVariant
        begins: [String]
        # end of HotSpotVariant
        end: String
        # ends is list variant of end of HotSpotVariant
        ends: [String]
        filter: _HotSpotVariantFilter
        # gene of HotSpotVariant
        gene: String
        # genes is list variant of gene of HotSpotVariant
        genes: [String]
        # id of HotSpotVariant
        id: ID
        # ids is list variant of id of HotSpotVariant
        ids: [ID]
        # name of HotSpotVariant
        name: String
        # names is list variant of name of HotSpotVariant
        names: [String]
        orderBy: [_HotSpotVariantOrdering]
        # position of HotSpotVariant
        position: Int
        # positions is list variant of position of HotSpotVariant
        positions: [Int]
        # referenceAminoAcid of HotSpotVariant
        referenceAminoAcid: String
        # referenceAminoAcids is list variant of referenceAminoAcid of HotSpotVariant
        referenceAminoAcids: [String]
        # variantAminoAcid of HotSpotVariant
        variantAminoAcid: String
        # variantAminoAcids is list variant of variantAminoAcid of HotSpotVariant
        variantAminoAcids: [String]
    ): HotSpotVariant
    # id of  VariantSNVIndel
    id: ID!
    # indelType of  VariantSNVIndel
    indelType: IndelType!
    # VariantSNVIndel jaxVariant JaxVariant
    jaxVariant(
        # cDot of JaxVariant
        cDot: String
        # cDots is list variant of cDot of JaxVariant
        cDots: [String]
        filter: _JaxVariantFilter
        # gDot of JaxVariant
        gDot: String
        # gDots is list variant of gDot of JaxVariant
        gDots: [String]
        # id of JaxVariant
        id: ID
        # ids is list variant of id of JaxVariant
        ids: [ID]
        # jaxId of JaxVariant
        jaxId: String
        # jaxIds is list variant of jaxId of JaxVariant
        jaxIds: [String]
        # name of JaxVariant
        name: String
        # names is list variant of name of JaxVariant
        names: [String]
        orderBy: [_JaxVariantOrdering]
        # pDot of JaxVariant
        pDot: String
        # pDots is list variant of pDot of JaxVariant
        pDots: [String]
        # variantType of JaxVariant
        variantType: String
        # variantTypes is list variant of variantType of JaxVariant
        variantTypes: [String]
    ): JaxVariant
    # VariantSNVIndel name EditableStatement
    name(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # VariantSNVIndel nonCanonicalTranscript EditableStatement
    nonCanonicalTranscript(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement
    # VariantSNVIndel pDot EditableStatement
    pDot(
        # editDate of EditableStatement
        editDate: String
        # editDates is list variant of editDate of EditableStatement
        editDates: [String]
        # field of EditableStatement
        field: String
        # fields is list variant of field of EditableStatement
        fields: [String]
        filter: _EditableStatementFilter
        # id of EditableStatement
        id: ID
        # ids is list variant of id of EditableStatement
        ids: [ID]
        orderBy: [_EditableStatementOrdering]
        # statement of EditableStatement
        statement: String
        # statements is list variant of statement of EditableStatement
        statements: [String]
    ): EditableStatement!
    # VariantSNVIndel proteinEffect EditableProteinEffect
    proteinEffect(
        # editDate of EditableProteinEffect
        editDate: String
        # editDates is list variant of editDate of EditableProteinEffect
        editDates: [String]
        # field of EditableProteinEffect
        field: String
        # fields is list variant of field of EditableProteinEffect
        fields: [String]
        filter: _EditableProteinEffectFilter
        # id of EditableProteinEffect
        id: ID
        # ids is list variant of id of EditableProteinEffect
        ids: [ID]
        orderBy: [_EditableProteinEffectOrdering]
        # proteinEffect of EditableProteinEffect
        proteinEffect: VariantProteinEffect
        # proteinEffects is list variant of proteinEffect of EditableProteinEffect
        proteinEffects: [VariantProteinEffect]
    ): EditableProteinEffect!
    # variantType of  VariantSNVIndel
    variantType: VariantType!
}

# Enum for VariantType
enum VariantType {
    # Value for CNV
    CNV
    # Value for Fusion
    Fusion
    # Value for Indel
    Indel
    # Value for MNV
    MNV
    # Value for Region
    Region
    # Value for SNV
    SNV
}

# XRef-Node
type XRef {
    # internal node id
    _id: Long
    # id of  XRef
    id: ID!
    # source of  XRef
    source: String!
    # sourceId of  XRef
    sourceId: String!
}

